{
  "query": "컴퓨터과학과 추천해줘",
  "response": "쿼리: 컴퓨터과학과 추천해줘.\n\n1. 최종 학습 목표: 컴퓨터 과학의 기초 및 고급 개념, 프로그래밍 언어, 알고리즘 및 데이터 구조를 배우고 싶습니다.\n2. 진로 목표: 컴퓨터 과학을 기반으로 소프트웨어 개발, 데이터 분석, 인공지능 또는 사이버 보안 분야에서 활동하고 싶습니다.\n3. 직업 분야: 소프트웨어 개발 및 데이터 과학.\n4. 직업: 소프트웨어 엔지니어.\n\n최종 쿼리: 소프트웨어 엔지니어.\n\n정의: 소프트웨어 엔지니어는 사용자 요구사항을 분석하고, 소프트웨어 시스템을 설계 및 개발하며, 유지보수 및 개선 작업을 수행하는 전문가이다. 이들은 다양한 프로그래밍 언어와 개발 도구를 사용하여 고품질의 소프트웨어 솔루션을 제공한다.\n\n주요 역할:\n- 소프트웨어 설계 및 개발\n  - 사용자 요구사항 분석 및 시스템 설계\n  - 다양한 프로그래밍 언어(Java, Python, C++)를 사용한 소프트웨어 개발\n  - 코드 리뷰 및 테스트를 통한 품질 보증\n\n- 시스템 유지보수 및 개선\n  - 기존 소프트웨어의 버그 수정 및 성능 개선\n  - 사용자 피드백을 반영한 기능 추가 및 업데이트\n  - 문서화 및 기술 지원 제공\n\n- 협업 및 프로젝트 관리\n  - 팀원과의 협업을 통한 프로젝트 진행\n  - 애자일(Agile) 방법론을 활용한 스프린트 계획 및 실행\n  - 클라이언트와의 커뮤니케이션 및 요구사항 조율\n\n추출된 기술 또는 지식:\n- 기술: 프로그래밍 언어(Java, Python, C++), 소프트웨어 개발 방법론, 알고리즘 및 데이터 구조.\n- 지식: 컴퓨터 과학의 기초 이론, 소프트웨어 공학, 데이터베이스 관리.\n\n추론된 기술:\n1. 프로그래밍 및 소프트웨어 개발\n   - 객체 지향 프로그래밍(OOP) 원칙 이해 및 적용\n   - 웹 개발(HTML, CSS, JavaScript) 및 모바일 애플리케이션 개발\n   - API 설계 및 통합\n\n2. 알고리즘 및 데이터 구조\n   - 정렬 및 검색 알고리즘 이해 및 구현\n   - 데이터 구조(배열, 리스트, 트리, 그래프 등)의 효율적인 사용\n   - 복잡도 분석을 통한 성능 최적화\n\n3. 소프트웨어 테스트 및 품질 보증\n   - 단위 테스트 및 통합 테스트 작성\n   - 테스트 자동화 도구(JUnit, Selenium 등) 활용\n   - 버전 관리 시스템(Git) 사용 및 협업\n\n4. 시스템 설계 및 아키텍처\n   - 소프트웨어 아키텍처 패턴(모델-뷰-컨트롤러, 마이크로서비스 등) 이해\n   - 클라우드 컴퓨팅(AWS, Azure) 및 배포 전략\n   - 데이터베이스 설계 및 SQL 쿼리 작성\n\n5. 실무에서 활용되는 툴 및 플랫폼\n   - IDE(통합 개발 환경) 사용(Eclipse, Visual Studio, PyCharm)\n   - 프로젝트 관리 도구(JIRA, Trello) 활용\n   - CI/CD(지속적 통합 및 배포) 도구(Jenkins, GitHub Actions) 사용\n\n추론된 지식:\n1. 핵심 지식 (Core Knowledge)\n   - 컴퓨터 과학의 기초 이론 → 알고리즘, 데이터 구조, 운영 체제의 기본 개념\n   - 소프트웨어 공학 → 소프트웨어 개발 생명주기 및 방법론\n   - 데이터베이스 관리 → 관계형 데이터베이스 및 SQL의 기초\n\n2. 전문 지식 (Specialized Knowledge)\n   - 웹 개발 및 모바일 애플리케이션 개발 → 최신 프레임워크 및 기술 스택\n   - 클라우드 컴퓨팅 → 클라우드 서비스 모델(IaaS, PaaS, SaaS) 및 아키텍처\n   - 사이버 보안 → 소프트웨어 보안 원칙 및 취약점 분석\n\n3. 실무 지식 (Practical Knowledge)\n   - 소프트웨어 개발 도구 및 환경 설정 → 개발 및 배포 환경 구성\n   - 팀 협업 및 커뮤니케이션 → 애자일 방법론 및 스크럼 회의 진행\n   - 기술 문서 작성 및 유지보수 → 코드 문서화 및 사용자 매뉴얼 작성"
}