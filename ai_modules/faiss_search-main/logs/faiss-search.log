2025-09-26 14:26:58 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-26 14:26:58 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-26 14:26:58 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-26 14:27:12 | INFO | controller.searchController | 🎯 [SQL+Vector] SQL 필터링 검색 시작:
2025-09-26 14:27:12 | INFO | controller.searchController |   - 쿼리: '컴공에서 인공지능 관련 수업'
2025-09-26 14:27:12 | INFO | controller.searchController |   - 요청 개수: 5
2025-09-26 14:27:12 | INFO | controller.searchController |   - 시작 시간: 14:27:12.878
2025-09-26 14:27:12 | INFO | service.vectorService | 🎯 [SQL+Vector] LLM 기반 SQL 사전필터링 + 벡터 검색 시작: '컴공에서 인공지능 관련 수업'
2025-09-26 14:27:12 | INFO | service.vectorService | 🤖 [SQL+Vector] SqlPrefilterService 호출 중...
2025-09-26 14:27:12 | INFO | service.sqlPrefilterService | 🔍 [SQL필터] SQL 사전필터링 분석 시작: '컴공에서 인공지능 관련 수업'
2025-09-26 14:27:14 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 14:27:14 | INFO | service.sqlPrefilterService | 📝 [SQL필터] LLM 응답 전문: ```json
{
  "sql_query": "SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')",
  "reasoning": "학과(컴공→컴퓨터) 필터링만 적용하고, 인공지능 주제는 벡터 검색에서 처리"
}
```
2025-09-26 14:27:14 | INFO | service.sqlPrefilterService | 🤖 [SQL필터] 사용된 프롬프트: 다음 쿼리를 분석하여 SQL 사전 필터링 쿼리를 생성하세요: 컴공에서 인공지능 관련 수업
2025-09-26 14:27:14 | INFO | service.sqlPrefilterService | ✅ [SQL필터] SQL 쿼리 생성 완료
2025-09-26 14:27:14 | INFO | service.sqlPrefilterService | 📋 [SQL필터] 생성된 쿼리: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')
2025-09-26 14:27:14 | INFO | service.sqlPrefilterService | 💭 [SQL필터] 생성 이유: 학과(컴공→컴퓨터) 필터링만 적용하고, 인공지능 주제는 벡터 검색에서 처리
2025-09-26 14:27:14 | INFO | service.vectorService | 📋 [SQL+Vector] LLM이 반환한 SQL: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')
2025-09-26 14:27:14 | INFO | service.vectorService | 🔎 [SQL+Vector] SQL 쿼리 실행 중: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')
2025-09-26 14:27:14 | INFO | service.sqlPrefilterService | 🔎 [SQL필터] SQL 쿼리 실행: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')
2025-09-26 14:27:14 | ERROR | service.sqlPrefilterService | ❌ [SQL필터] SQL 실행 실패: 'NoneType' object has no attribute 'cursor'
2025-09-26 14:27:14 | WARNING | service.vectorService | ⚠️ [SQL+Vector] SQL 필터링 결과 없음 - 전체 검색으로 전환
2025-09-26 14:27:14 | INFO | service.vectorService | 🔬 [VectorService] 벡터 검색 시작:
2025-09-26 14:27:14 | INFO | service.vectorService |   - 원본 쿼리: '컴공에서 인공지능 관련 수업'
2025-09-26 14:27:14 | INFO | service.vectorService |   - 요청 결과 수: 5
2025-09-26 14:27:14 | INFO | service.vectorService | 🔗 [VectorService] OpenAI 임베딩 생성 중...
2025-09-26 14:27:14 | INFO | service.vectorService |   - 임베딩할 텍스트: '컴공에서 인공지능 관련 수업'
2025-09-26 14:27:14 | INFO | service.vectorService |   - 사용 모델: text-embedding-3-small
2025-09-26 14:27:14 | INFO | service.vectorService | 🌐 [OpenAI API] 임베딩 요청:
2025-09-26 14:27:14 | INFO | service.vectorService |   - 입력 길이: 15자
2025-09-26 14:27:14 | INFO | service.vectorService |   - 입력 내용: '컴공에서 인공지능 관련 수업'
2025-09-26 14:27:15 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-26 14:27:15 | INFO | service.vectorService | ✅ [OpenAI API] 임베딩 응답 수신:
2025-09-26 14:27:15 | INFO | service.vectorService |   - 사용량: 15 토큰
2025-09-26 14:27:15 | INFO | service.vectorService |   - 벡터 차원: 1536
2025-09-26 14:27:15 | INFO | service.vectorService | ✅ [VectorService] 임베딩 생성 완료 (차원: 1536)
2025-09-26 14:27:15 | INFO | service.vectorService |   - 정규화 후 L2 norm: 1.000000
2025-09-26 14:27:15 | INFO | service.vectorService | 🔍 [VectorService] FAISS 인덱스 검색 중...
2025-09-26 17:24:18 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-26 17:24:18 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-26 17:24:18 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-26 17:24:20 | INFO | controller.searchController | 🎯 [SQL+Vector] SQL 필터링 검색 시작:
2025-09-26 17:24:20 | INFO | controller.searchController |   - 쿼리: '테스트'
2025-09-26 17:24:20 | INFO | controller.searchController |   - 요청 개수: 1
2025-09-26 17:24:20 | INFO | controller.searchController |   - 시작 시간: 17:24:20.409
2025-09-26 17:24:20 | INFO | service.searchService | 🚀 [SearchService] 검색 시작: '테스트'
2025-09-26 17:24:20 | INFO | service.queryService | 🔍 [QueryService] SQL 쿼리 생성 시작: '테스트'
2025-09-26 17:24:22 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 17:24:22 | INFO | service.queryService | 📝 [QueryService] LLM 응답: ```json
{
  "sql_query": null,
  "reasoning": "주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함"
}
```
2025-09-26 17:24:22 | INFO | util.utils | ℹ️ [SQL필터] SQL 필터링 불필요
2025-09-26 17:24:22 | INFO | util.utils | 💭 [SQL필터] 이유: 주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함
2025-09-26 17:24:22 | INFO | service.queryService | ℹ️ [QueryService] SQL 필터링 불필요
2025-09-26 17:24:22 | WARNING | service.searchService | ⚠️ [SearchService] SQL 필터링 결과 없음
2025-09-26 17:24:22 | INFO | controller.searchController | ✅ [SQL+Vector] 검색 완료:
2025-09-26 17:24:22 | INFO | controller.searchController |   - 처리 시간: 1.775초
2025-09-26 17:24:22 | INFO | controller.searchController |   - 결과 개수: 0
2025-09-26 17:24:22 | WARNING | controller.searchController | ⚠️ [SQL+Vector] 검색 결과 없음: '테스트'
2025-09-26 17:24:22 | INFO | controller.searchController | 🎯 [SQL+Vector] SQL 필터링 검색 시작:
2025-09-26 17:24:22 | INFO | controller.searchController |   - 쿼리: '테스트'
2025-09-26 17:24:22 | INFO | controller.searchController |   - 요청 개수: 1
2025-09-26 17:24:22 | INFO | controller.searchController |   - 시작 시간: 17:24:22.188
2025-09-26 17:24:22 | INFO | service.searchService | 🚀 [SearchService] 검색 시작: '테스트'
2025-09-26 17:24:22 | INFO | service.queryService | 🔍 [QueryService] SQL 쿼리 생성 시작: '테스트'
2025-09-26 17:24:23 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 17:24:23 | INFO | service.queryService | 📝 [QueryService] LLM 응답: ```json
{
  "sql_query": null,
  "reasoning": "주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함"
}
```
2025-09-26 17:24:23 | INFO | util.utils | ℹ️ [SQL필터] SQL 필터링 불필요
2025-09-26 17:24:23 | INFO | util.utils | 💭 [SQL필터] 이유: 주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함
2025-09-26 17:24:23 | INFO | service.queryService | ℹ️ [QueryService] SQL 필터링 불필요
2025-09-26 17:24:23 | WARNING | service.searchService | ⚠️ [SearchService] SQL 필터링 결과 없음
2025-09-26 17:24:23 | INFO | controller.searchController | ✅ [SQL+Vector] 검색 완료:
2025-09-26 17:24:23 | INFO | controller.searchController |   - 처리 시간: 1.062초
2025-09-26 17:24:23 | INFO | controller.searchController |   - 결과 개수: 0
2025-09-26 17:24:23 | WARNING | controller.searchController | ⚠️ [SQL+Vector] 검색 결과 없음: '테스트'
2025-09-26 17:31:25 | INFO | controller.searchController | 🎯 [SQL+Vector] SQL 필터링 검색 시작:
2025-09-26 17:31:25 | INFO | controller.searchController |   - 쿼리: '테스트'
2025-09-26 17:31:25 | INFO | controller.searchController |   - 요청 개수: 1
2025-09-26 17:31:25 | INFO | controller.searchController |   - 시작 시간: 17:31:25.585
2025-09-26 17:31:25 | INFO | service.searchService | 🚀 [SearchService] 검색 시작: '테스트'
2025-09-26 17:31:25 | INFO | service.queryService | 🔍 [QueryService] SQL 쿼리 생성 시작: '테스트'
2025-09-26 18:08:09 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-26 18:08:09 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-26 18:08:09 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-26 18:08:24 | INFO | controller.searchController | 🎯 [SQL+Vector] SQL 필터링 검색 시작:
2025-09-26 18:08:24 | INFO | controller.searchController |   - 쿼리: '컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-26 18:08:24 | INFO | controller.searchController |   - 요청 개수: 5
2025-09-26 18:08:24 | INFO | controller.searchController |   - 시작 시간: 18:08:24.609
2025-09-26 18:08:24 | INFO | service.searchService | 🚀 [SearchService] 검색 시작: '컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-26 18:08:24 | INFO | service.queryService | 🔍 [QueryService] SQL 쿼리 생성 시작: '컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-26 18:08:30 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 18:08:30 | INFO | service.queryService | 📝 [QueryService] LLM 응답: ```json
{
  "sql_query": "SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')",
  "reasoning": "학과(컴공→컴퓨터) 필터링만 적용하고, 인공지능 주제는 벡터 검색에서 처리"
}
```
2025-09-26 18:08:30 | INFO | util.utils | ✅ [SQL필터] SQL 쿼리 생성 완료
2025-09-26 18:08:30 | INFO | util.utils | 📋 [SQL필터] 생성된 쿼리: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')
2025-09-26 18:08:30 | INFO | util.utils | 💭 [SQL필터] 생성 이유: 학과(컴공→컴퓨터) 필터링만 적용하고, 인공지능 주제는 벡터 검색에서 처리
2025-09-26 18:08:30 | INFO | service.queryService | 🔍 [QueryService] SQL 실행: 
                SELECT id, name, department_full_name, department, professor, credits,
                       schedule, location, delivery_mode, gpt_description, vector
                FROM jbnu_class_gpt
                WHERE id IN (
                    SELECT DISTINCT id FROM (SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')) as filtered
                )
                
2025-09-26 18:08:30 | INFO | service.queryService | 📊 [QueryService] 필터링 결과: 42개 강의
2025-09-26 18:08:30 | INFO | service.queryService |    #1: ID=26, 과목명=인간-컴퓨터상호작용, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #2: ID=84, 과목명=게임및혼합현실, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #3: ID=277, 과목명=컴퓨터비전, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #4: ID=457, 과목명=컴퓨터논리및논술론, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #5: ID=749, 과목명=프로그래밍언어론, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #6: ID=764, 과목명=자료구조, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #7: ID=793, 과목명=인공지능, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #8: ID=818, 과목명=리눅스프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #9: ID=1041, 과목명=운영체제, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #10: ID=1183, 과목명=데이터베이스, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #11: ID=1352, 과목명=산학실전캡스톤 2, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #12: ID=1444, 과목명=수치해석및최적화, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #13: ID=1520, 과목명=오픈소스소프트웨어개발, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #14: ID=1553, 과목명=자연어처리, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #15: ID=1554, 과목명=논리설계, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #16: ID=1583, 과목명=컴퓨터네트워크, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #17: ID=1715, 과목명=암호론, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #18: ID=1814, 과목명=컴파일러, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #19: ID=1954, 과목명=선형대수학, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #20: ID=2311, 과목명=임베디드시스템, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #21: ID=2402, 과목명=객체지향프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #22: ID=2406, 과목명=네트워크보안, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #23: ID=2594, 과목명=컴퓨터구조, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #24: ID=2729, 과목명=이산수학, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #25: ID=2819, 과목명=소프트웨어공학, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #26: ID=2954, 과목명=확률및통계, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #27: ID=3004, 과목명=정보검색, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #28: ID=3094, 과목명=컴퓨터공학총론, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #29: ID=3117, 과목명=모바일프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #30: ID=3166, 과목명=데이터마이닝, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #31: ID=3363, 과목명=웹서비스설계, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #32: ID=3379, 과목명=산학실전캡스톤 3, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #33: ID=3702, 과목명=디지털시스템설계, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #34: ID=3723, 과목명=산학실전캡스톤 1, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #35: ID=3734, 과목명=클라우드컴퓨팅, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #36: ID=3796, 과목명=C++프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #37: ID=3978, 과목명=창업특강, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #38: ID=4094, 과목명=알고리즘, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #39: ID=4308, 과목명=시스템보안, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #40: ID=4346, 과목명=데이터통신, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #41: ID=4541, 과목명=컴퓨터그래픽스, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.queryService |    #42: ID=4555, 과목명=기계학습, 학과=컴퓨터인공지능학부
2025-09-26 18:08:30 | INFO | service.searchService | 📊 [SearchService] SQL 필터링 결과: 42개 강의
2025-09-26 18:08:30 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 시작: 42개 강의
2025-09-26 18:08:30 | INFO | service.searchService | ✅ [SearchService] 유효한 벡터: 42개
2025-09-26 18:08:30 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-26 18:08:31 | ERROR | service.searchService | ❌ [SearchService] 벡터 검색 실패: 
2025-09-26 18:08:31 | INFO | service.searchService | ✅ [SearchService] 검색 완료: 0개 결과
2025-09-26 18:08:31 | INFO | controller.searchController | ✅ [SQL+Vector] 검색 완료:
2025-09-26 18:08:31 | INFO | controller.searchController |   - 처리 시간: 6.498초
2025-09-26 18:08:31 | INFO | controller.searchController |   - 결과 개수: 0
2025-09-26 18:08:31 | WARNING | controller.searchController | ⚠️ [SQL+Vector] 검색 결과 없음: '컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-26 18:09:34 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-26 18:09:34 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-26 18:09:34 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-26 18:09:49 | INFO | controller.searchController | 🎯 [SQL+Vector] SQL 필터링 검색 시작:
2025-09-26 18:09:49 | INFO | controller.searchController |   - 쿼리: '컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-26 18:09:49 | INFO | controller.searchController |   - 요청 개수: 3
2025-09-26 18:09:49 | INFO | controller.searchController |   - 시작 시간: 18:09:49.462
2025-09-26 18:09:49 | INFO | service.searchService | 🚀 [SearchService] 검색 시작: '컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-26 18:09:49 | INFO | service.queryService | 🔍 [QueryService] SQL 쿼리 생성 시작: '컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-26 18:09:52 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 18:09:52 | INFO | service.queryService | 📝 [QueryService] LLM 응답: ```json
{
  "sql_query": "SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')",
  "reasoning": "학과(컴공→컴퓨터) 필터링만 적용하고, 인공지능 주제는 벡터 검색에서 처리"
}
```
2025-09-26 18:09:52 | INFO | util.utils | ✅ [SQL필터] SQL 쿼리 생성 완료
2025-09-26 18:09:52 | INFO | util.utils | 📋 [SQL필터] 생성된 쿼리: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')
2025-09-26 18:09:52 | INFO | util.utils | 💭 [SQL필터] 생성 이유: 학과(컴공→컴퓨터) 필터링만 적용하고, 인공지능 주제는 벡터 검색에서 처리
2025-09-26 18:09:52 | INFO | service.queryService | 🔍 [QueryService] SQL 실행: 
                SELECT id, name, department_full_name, department, professor, credits,
                       schedule, location, delivery_mode, gpt_description, vector
                FROM jbnu_class_gpt
                WHERE id IN (
                    SELECT DISTINCT id FROM (SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')) as filtered
                )
                
2025-09-26 18:09:52 | INFO | service.queryService | 📊 [QueryService] 필터링 결과: 42개 강의
2025-09-26 18:09:52 | INFO | service.queryService |    #1: ID=26, 과목명=인간-컴퓨터상호작용, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #2: ID=84, 과목명=게임및혼합현실, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #3: ID=277, 과목명=컴퓨터비전, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #4: ID=457, 과목명=컴퓨터논리및논술론, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #5: ID=749, 과목명=프로그래밍언어론, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #6: ID=764, 과목명=자료구조, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #7: ID=793, 과목명=인공지능, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #8: ID=818, 과목명=리눅스프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #9: ID=1041, 과목명=운영체제, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #10: ID=1183, 과목명=데이터베이스, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #11: ID=1352, 과목명=산학실전캡스톤 2, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #12: ID=1444, 과목명=수치해석및최적화, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #13: ID=1520, 과목명=오픈소스소프트웨어개발, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #14: ID=1553, 과목명=자연어처리, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #15: ID=1554, 과목명=논리설계, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #16: ID=1583, 과목명=컴퓨터네트워크, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #17: ID=1715, 과목명=암호론, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #18: ID=1814, 과목명=컴파일러, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #19: ID=1954, 과목명=선형대수학, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #20: ID=2311, 과목명=임베디드시스템, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #21: ID=2402, 과목명=객체지향프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #22: ID=2406, 과목명=네트워크보안, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #23: ID=2594, 과목명=컴퓨터구조, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #24: ID=2729, 과목명=이산수학, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #25: ID=2819, 과목명=소프트웨어공학, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #26: ID=2954, 과목명=확률및통계, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #27: ID=3004, 과목명=정보검색, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #28: ID=3094, 과목명=컴퓨터공학총론, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #29: ID=3117, 과목명=모바일프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #30: ID=3166, 과목명=데이터마이닝, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #31: ID=3363, 과목명=웹서비스설계, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #32: ID=3379, 과목명=산학실전캡스톤 3, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #33: ID=3702, 과목명=디지털시스템설계, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #34: ID=3723, 과목명=산학실전캡스톤 1, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #35: ID=3734, 과목명=클라우드컴퓨팅, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #36: ID=3796, 과목명=C++프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #37: ID=3978, 과목명=창업특강, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #38: ID=4094, 과목명=알고리즘, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #39: ID=4308, 과목명=시스템보안, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #40: ID=4346, 과목명=데이터통신, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #41: ID=4541, 과목명=컴퓨터그래픽스, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.queryService |    #42: ID=4555, 과목명=기계학습, 학과=컴퓨터인공지능학부
2025-09-26 18:09:52 | INFO | service.searchService | 📊 [SearchService] SQL 필터링 결과: 42개 강의
2025-09-26 18:09:52 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 시작: 42개 강의
2025-09-26 18:09:52 | INFO | service.searchService | ✅ [SearchService] 유효한 벡터: 42개
2025-09-26 18:09:53 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-26 18:09:53 | ERROR | service.searchService | ❌ [SearchService] 벡터 검색 실패: 
2025-09-26 18:09:53 | INFO | service.searchService | ✅ [SearchService] 검색 완료: 0개 결과
2025-09-26 18:09:53 | INFO | controller.searchController | ✅ [SQL+Vector] 검색 완료:
2025-09-26 18:09:53 | INFO | controller.searchController |   - 처리 시간: 4.404초
2025-09-26 18:09:53 | INFO | controller.searchController |   - 결과 개수: 0
2025-09-26 18:09:53 | WARNING | controller.searchController | ⚠️ [SQL+Vector] 검색 결과 없음: '컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-26 18:10:11 | INFO | controller.searchController | 🎯 [SQL+Vector] SQL 필터링 검색 시작:
2025-09-26 18:10:11 | INFO | controller.searchController |   - 쿼리: '인공지능'
2025-09-26 18:10:11 | INFO | controller.searchController |   - 요청 개수: 3
2025-09-26 18:10:11 | INFO | controller.searchController |   - 시작 시간: 18:10:11.367
2025-09-26 18:10:11 | INFO | service.searchService | 🚀 [SearchService] 검색 시작: '인공지능'
2025-09-26 18:10:11 | INFO | service.queryService | 🔍 [QueryService] SQL 쿼리 생성 시작: '인공지능'
2025-09-26 18:10:12 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 18:10:12 | INFO | service.queryService | 📝 [QueryService] LLM 응답: ```json
{
  "sql_query": null,
  "reasoning": "주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함"
}
```
2025-09-26 18:10:12 | INFO | util.utils | ℹ️ [SQL필터] SQL 필터링 불필요
2025-09-26 18:10:12 | INFO | util.utils | 💭 [SQL필터] 이유: 주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함
2025-09-26 18:10:12 | INFO | service.queryService | ℹ️ [QueryService] SQL 필터링 불필요
2025-09-26 18:10:12 | WARNING | service.searchService | ⚠️ [SearchService] SQL 필터링 결과 없음
2025-09-26 18:10:12 | INFO | controller.searchController | ✅ [SQL+Vector] 검색 완료:
2025-09-26 18:10:12 | INFO | controller.searchController |   - 처리 시간: 1.151초
2025-09-26 18:10:12 | INFO | controller.searchController |   - 결과 개수: 0
2025-09-26 18:10:12 | WARNING | controller.searchController | ⚠️ [SQL+Vector] 검색 결과 없음: '인공지능'
2025-09-26 18:15:10 | INFO | controller.searchController | 🎯 [SQL+Vector] SQL 필터링 검색 시작:
2025-09-26 18:15:10 | INFO | controller.searchController |   - 쿼리: '인공지능'
2025-09-26 18:15:10 | INFO | controller.searchController |   - 요청 개수: 1
2025-09-26 18:15:10 | INFO | controller.searchController |   - 시작 시간: 18:15:10.475
2025-09-26 18:15:10 | INFO | service.searchService | 🚀 [SearchService] 검색 시작: '인공지능'
2025-09-26 18:15:10 | INFO | service.queryService | 🔍 [QueryService] SQL 쿼리 생성 시작: '인공지능'
2025-09-26 18:15:11 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 18:15:11 | INFO | service.queryService | 📝 [QueryService] LLM 응답: ```json
{
  "sql_query": null,
  "reasoning": "주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함"
}
```
2025-09-26 18:15:11 | INFO | util.utils | ℹ️ [SQL필터] SQL 필터링 불필요
2025-09-26 18:15:11 | INFO | util.utils | 💭 [SQL필터] 이유: 주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함
2025-09-26 18:15:11 | INFO | service.queryService | ℹ️ [QueryService] SQL 필터링 불필요
2025-09-26 18:15:11 | WARNING | service.searchService | ⚠️ [SearchService] SQL 필터링 결과 없음
2025-09-26 18:15:11 | INFO | controller.searchController | ✅ [SQL+Vector] 검색 완료:
2025-09-26 18:15:11 | INFO | controller.searchController |   - 처리 시간: 1.192초
2025-09-26 18:15:11 | INFO | controller.searchController |   - 결과 개수: 0
2025-09-26 18:15:11 | WARNING | controller.searchController | ⚠️ [SQL+Vector] 검색 결과 없음: '인공지능'
2025-09-26 18:17:09 | INFO | controller.searchController | 🔍 [FAISS] 검색 시작:
2025-09-26 18:17:09 | INFO | controller.searchController |   - 쿼리: '인공지능'
2025-09-26 18:17:09 | INFO | controller.searchController |   - 요청 개수: 5
2025-09-26 18:17:09 | INFO | controller.searchController |   - 시작 시간: 18:17:09.416
2025-09-26 18:17:09 | INFO | controller.searchController | 🔍 [FAISS] 검색: '인공지능'
2025-09-26 18:17:09 | INFO | service.searchService | 🚀 [SearchService] 검색 시작: '인공지능'
2025-09-26 18:17:09 | INFO | service.queryService | 🔍 [QueryService] SQL 쿼리 생성 시작: '인공지능'
2025-09-26 18:17:11 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 18:17:11 | INFO | service.queryService | 📝 [QueryService] LLM 응답: ```json
{
  "sql_query": null,
  "reasoning": "주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함"
}
```
2025-09-26 18:17:11 | INFO | util.utils | ℹ️ [SQL필터] SQL 필터링 불필요
2025-09-26 18:17:11 | INFO | util.utils | 💭 [SQL필터] 이유: 주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함
2025-09-26 18:17:11 | INFO | service.queryService | ℹ️ [QueryService] SQL 필터링 불필요
2025-09-26 18:17:11 | WARNING | service.searchService | ⚠️ [SearchService] SQL 필터링 결과 없음
2025-09-26 18:17:11 | INFO | controller.searchController | ✅ [FAISS] 검색 완료:
2025-09-26 18:17:11 | INFO | controller.searchController |   - 처리 시간: 2.558초
2025-09-26 18:17:11 | INFO | controller.searchController |   - 결과 개수: 0
2025-09-26 18:17:11 | WARNING | controller.searchController | ⚠️ [FAISS] 검색 결과 없음: '인공지능'
2025-09-26 18:17:17 | INFO | controller.searchController | 🔍 [FAISS] 검색 시작:
2025-09-26 18:17:17 | INFO | controller.searchController |   - 쿼리: '인공지능'
2025-09-26 18:17:17 | INFO | controller.searchController |   - 요청 개수: 5
2025-09-26 18:17:17 | INFO | controller.searchController |   - 시작 시간: 18:17:17.447
2025-09-26 18:17:17 | INFO | controller.searchController | 🔍 [FAISS] 검색: '인공지능'
2025-09-26 18:17:17 | INFO | service.searchService | 🚀 [SearchService] 검색 시작: '인공지능'
2025-09-26 18:17:17 | INFO | service.queryService | 🔍 [QueryService] SQL 쿼리 생성 시작: '인공지능'
2025-09-26 18:17:18 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 18:17:18 | INFO | service.queryService | 📝 [QueryService] LLM 응답: ```json
{
  "sql_query": null,
  "reasoning": "주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함"
}
```
2025-09-26 18:17:18 | INFO | util.utils | ℹ️ [SQL필터] SQL 필터링 불필요
2025-09-26 18:17:18 | INFO | util.utils | 💭 [SQL필터] 이유: 주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함
2025-09-26 18:17:18 | INFO | service.queryService | ℹ️ [QueryService] SQL 필터링 불필요
2025-09-26 18:17:18 | WARNING | service.searchService | ⚠️ [SearchService] SQL 필터링 결과 없음
2025-09-26 18:17:18 | INFO | controller.searchController | ✅ [FAISS] 검색 완료:
2025-09-26 18:17:18 | INFO | controller.searchController |   - 처리 시간: 1.492초
2025-09-26 18:17:18 | INFO | controller.searchController |   - 결과 개수: 0
2025-09-26 18:17:18 | WARNING | controller.searchController | ⚠️ [FAISS] 검색 결과 없음: '인공지능'
2025-09-26 18:17:24 | INFO | controller.searchController | 🔍 [FAISS] 검색 시작:
2025-09-26 18:17:24 | INFO | controller.searchController |   - 쿼리: '컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-26 18:17:24 | INFO | controller.searchController |   - 요청 개수: 5
2025-09-26 18:17:24 | INFO | controller.searchController |   - 시작 시간: 18:17:24.450
2025-09-26 18:17:24 | INFO | controller.searchController | 🔍 [FAISS] 검색: '컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-26 18:17:24 | INFO | service.searchService | 🚀 [SearchService] 검색 시작: '컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-26 18:17:24 | INFO | service.queryService | 🔍 [QueryService] SQL 쿼리 생성 시작: '컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-26 18:17:26 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 18:17:26 | INFO | service.queryService | 📝 [QueryService] LLM 응답: ```json
{
  "sql_query": "SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')",
  "reasoning": "학과(컴공→컴퓨터) 필터링만 적용하고, 인공지능 주제는 벡터 검색에서 처리"
}
```
2025-09-26 18:17:26 | INFO | util.utils | ✅ [SQL필터] SQL 쿼리 생성 완료
2025-09-26 18:17:26 | INFO | util.utils | 📋 [SQL필터] 생성된 쿼리: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')
2025-09-26 18:17:26 | INFO | util.utils | 💭 [SQL필터] 생성 이유: 학과(컴공→컴퓨터) 필터링만 적용하고, 인공지능 주제는 벡터 검색에서 처리
2025-09-26 18:17:26 | INFO | service.queryService | 🔍 [QueryService] SQL 실행: 
                SELECT id, name, department_full_name, department, professor, credits,
                       schedule, location, delivery_mode, gpt_description, vector
                FROM jbnu_class_gpt
                WHERE id IN (
                    SELECT DISTINCT id FROM (SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')) as filtered
                )
                
2025-09-26 18:17:26 | INFO | service.queryService | 📊 [QueryService] 필터링 결과: 42개 강의
2025-09-26 18:17:26 | INFO | service.queryService |    #1: ID=26, 과목명=인간-컴퓨터상호작용, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #2: ID=84, 과목명=게임및혼합현실, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #3: ID=277, 과목명=컴퓨터비전, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #4: ID=457, 과목명=컴퓨터논리및논술론, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #5: ID=749, 과목명=프로그래밍언어론, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #6: ID=764, 과목명=자료구조, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #7: ID=793, 과목명=인공지능, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #8: ID=818, 과목명=리눅스프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #9: ID=1041, 과목명=운영체제, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #10: ID=1183, 과목명=데이터베이스, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #11: ID=1352, 과목명=산학실전캡스톤 2, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #12: ID=1444, 과목명=수치해석및최적화, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #13: ID=1520, 과목명=오픈소스소프트웨어개발, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #14: ID=1553, 과목명=자연어처리, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #15: ID=1554, 과목명=논리설계, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #16: ID=1583, 과목명=컴퓨터네트워크, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #17: ID=1715, 과목명=암호론, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #18: ID=1814, 과목명=컴파일러, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #19: ID=1954, 과목명=선형대수학, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #20: ID=2311, 과목명=임베디드시스템, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #21: ID=2402, 과목명=객체지향프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #22: ID=2406, 과목명=네트워크보안, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #23: ID=2594, 과목명=컴퓨터구조, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #24: ID=2729, 과목명=이산수학, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #25: ID=2819, 과목명=소프트웨어공학, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #26: ID=2954, 과목명=확률및통계, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #27: ID=3004, 과목명=정보검색, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #28: ID=3094, 과목명=컴퓨터공학총론, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #29: ID=3117, 과목명=모바일프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #30: ID=3166, 과목명=데이터마이닝, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #31: ID=3363, 과목명=웹서비스설계, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #32: ID=3379, 과목명=산학실전캡스톤 3, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #33: ID=3702, 과목명=디지털시스템설계, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #34: ID=3723, 과목명=산학실전캡스톤 1, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #35: ID=3734, 과목명=클라우드컴퓨팅, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #36: ID=3796, 과목명=C++프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #37: ID=3978, 과목명=창업특강, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #38: ID=4094, 과목명=알고리즘, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #39: ID=4308, 과목명=시스템보안, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #40: ID=4346, 과목명=데이터통신, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #41: ID=4541, 과목명=컴퓨터그래픽스, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.queryService |    #42: ID=4555, 과목명=기계학습, 학과=컴퓨터인공지능학부
2025-09-26 18:17:26 | INFO | service.searchService | 📊 [SearchService] SQL 필터링 결과: 42개 강의
2025-09-26 18:17:26 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 시작: 42개 강의
2025-09-26 18:17:26 | INFO | service.searchService | ✅ [SearchService] 유효한 벡터: 42개
2025-09-26 18:17:26 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-26 18:17:26 | ERROR | service.searchService | ❌ [SearchService] 벡터 검색 실패: 
2025-09-26 18:17:26 | INFO | service.searchService | ✅ [SearchService] 검색 완료: 0개 결과
2025-09-26 18:17:26 | INFO | controller.searchController | ✅ [FAISS] 검색 완료:
2025-09-26 18:17:26 | INFO | controller.searchController |   - 처리 시간: 2.506초
2025-09-26 18:17:26 | INFO | controller.searchController |   - 결과 개수: 0
2025-09-26 18:17:26 | WARNING | controller.searchController | ⚠️ [FAISS] 검색 결과 없음: '컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-26 18:18:22 | INFO | controller.searchController | 🔍 [FAISS] 검색 시작:
2025-09-26 18:18:22 | INFO | controller.searchController |   - 쿼리: '컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-26 18:18:22 | INFO | controller.searchController |   - 요청 개수: 5
2025-09-26 18:18:22 | INFO | controller.searchController |   - 시작 시간: 18:18:22.278
2025-09-26 18:18:22 | INFO | controller.searchController | 🔍 [FAISS] 검색: '컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-26 18:18:22 | INFO | service.searchService | 🚀 [SearchService] 검색 시작: '컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-26 18:18:22 | INFO | service.queryService | 🔍 [QueryService] SQL 쿼리 생성 시작: '컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-26 18:18:24 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 18:18:24 | INFO | service.queryService | 📝 [QueryService] LLM 응답: ```json
{
  "sql_query": "SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')",
  "reasoning": "학과(컴공→컴퓨터) 필터링만 적용하고, 인공지능 주제는 벡터 검색에서 처리"
}
```
2025-09-26 18:18:24 | INFO | util.utils | ✅ [SQL필터] SQL 쿼리 생성 완료
2025-09-26 18:18:24 | INFO | util.utils | 📋 [SQL필터] 생성된 쿼리: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')
2025-09-26 18:18:24 | INFO | util.utils | 💭 [SQL필터] 생성 이유: 학과(컴공→컴퓨터) 필터링만 적용하고, 인공지능 주제는 벡터 검색에서 처리
2025-09-26 18:18:24 | INFO | service.queryService | 🔍 [QueryService] SQL 실행: 
                SELECT id, name, department_full_name, department, professor, credits,
                       schedule, location, delivery_mode, gpt_description, vector
                FROM jbnu_class_gpt
                WHERE id IN (
                    SELECT DISTINCT id FROM (SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')) as filtered
                )
                
2025-09-26 18:18:24 | INFO | service.queryService | 📊 [QueryService] 필터링 결과: 42개 강의
2025-09-26 18:18:24 | INFO | service.queryService |    #1: ID=26, 과목명=인간-컴퓨터상호작용, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #2: ID=84, 과목명=게임및혼합현실, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #3: ID=277, 과목명=컴퓨터비전, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #4: ID=457, 과목명=컴퓨터논리및논술론, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #5: ID=749, 과목명=프로그래밍언어론, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #6: ID=764, 과목명=자료구조, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #7: ID=793, 과목명=인공지능, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #8: ID=818, 과목명=리눅스프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #9: ID=1041, 과목명=운영체제, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #10: ID=1183, 과목명=데이터베이스, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #11: ID=1352, 과목명=산학실전캡스톤 2, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #12: ID=1444, 과목명=수치해석및최적화, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #13: ID=1520, 과목명=오픈소스소프트웨어개발, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #14: ID=1553, 과목명=자연어처리, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #15: ID=1554, 과목명=논리설계, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #16: ID=1583, 과목명=컴퓨터네트워크, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #17: ID=1715, 과목명=암호론, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #18: ID=1814, 과목명=컴파일러, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #19: ID=1954, 과목명=선형대수학, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #20: ID=2311, 과목명=임베디드시스템, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #21: ID=2402, 과목명=객체지향프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #22: ID=2406, 과목명=네트워크보안, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #23: ID=2594, 과목명=컴퓨터구조, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #24: ID=2729, 과목명=이산수학, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #25: ID=2819, 과목명=소프트웨어공학, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #26: ID=2954, 과목명=확률및통계, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #27: ID=3004, 과목명=정보검색, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #28: ID=3094, 과목명=컴퓨터공학총론, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #29: ID=3117, 과목명=모바일프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #30: ID=3166, 과목명=데이터마이닝, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #31: ID=3363, 과목명=웹서비스설계, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #32: ID=3379, 과목명=산학실전캡스톤 3, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #33: ID=3702, 과목명=디지털시스템설계, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #34: ID=3723, 과목명=산학실전캡스톤 1, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #35: ID=3734, 과목명=클라우드컴퓨팅, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #36: ID=3796, 과목명=C++프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #37: ID=3978, 과목명=창업특강, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #38: ID=4094, 과목명=알고리즘, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #39: ID=4308, 과목명=시스템보안, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #40: ID=4346, 과목명=데이터통신, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #41: ID=4541, 과목명=컴퓨터그래픽스, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.queryService |    #42: ID=4555, 과목명=기계학습, 학과=컴퓨터인공지능학부
2025-09-26 18:18:24 | INFO | service.searchService | 📊 [SearchService] SQL 필터링 결과: 42개 강의
2025-09-26 18:18:24 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 시작: 42개 강의
2025-09-26 18:18:24 | INFO | service.searchService | ✅ [SearchService] 유효한 벡터: 42개
2025-09-26 18:18:24 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-26 18:18:24 | ERROR | service.searchService | ❌ [SearchService] 벡터 검색 실패: 
2025-09-26 18:18:24 | INFO | service.searchService | ✅ [SearchService] 검색 완료: 0개 결과
2025-09-26 18:18:24 | INFO | controller.searchController | ✅ [FAISS] 검색 완료:
2025-09-26 18:18:24 | INFO | controller.searchController |   - 처리 시간: 2.577초
2025-09-26 18:18:24 | INFO | controller.searchController |   - 결과 개수: 0
2025-09-26 18:18:24 | WARNING | controller.searchController | ⚠️ [FAISS] 검색 결과 없음: '컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-26 18:18:48 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-26 18:18:48 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-26 18:18:48 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-26 18:18:56 | INFO | controller.searchController | 🔍 [FAISS] 검색 시작:
2025-09-26 18:18:56 | INFO | controller.searchController |   - 쿼리: '컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-26 18:18:56 | INFO | controller.searchController |   - 요청 개수: 5
2025-09-26 18:18:56 | INFO | controller.searchController |   - 시작 시간: 18:18:56.750
2025-09-26 18:18:56 | INFO | controller.searchController | 🔍 [FAISS] 검색: '컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-26 18:18:56 | INFO | service.searchService | 🚀 [SearchService] 검색 시작: '컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-26 18:18:56 | INFO | service.queryService | 🔍 [QueryService] SQL 쿼리 생성 시작: '컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-26 18:18:59 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 18:18:59 | INFO | service.queryService | 📝 [QueryService] LLM 응답: ```json
{
  "sql_query": "SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')",
  "reasoning": "학과(컴공→컴퓨터) 필터링만 적용하고, 인공지능 주제는 벡터 검색에서 처리"
}
```
2025-09-26 18:18:59 | INFO | util.utils | ✅ [SQL필터] SQL 쿼리 생성 완료
2025-09-26 18:18:59 | INFO | util.utils | 📋 [SQL필터] 생성된 쿼리: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')
2025-09-26 18:18:59 | INFO | util.utils | 💭 [SQL필터] 생성 이유: 학과(컴공→컴퓨터) 필터링만 적용하고, 인공지능 주제는 벡터 검색에서 처리
2025-09-26 18:18:59 | INFO | service.queryService | 🔍 [QueryService] SQL 실행: 
                SELECT id, name, department_full_name, department, professor, credits,
                       schedule, location, delivery_mode, gpt_description, vector
                FROM jbnu_class_gpt
                WHERE id IN (
                    SELECT DISTINCT id FROM (SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')) as filtered
                )
                
2025-09-26 18:18:59 | INFO | service.queryService | 📊 [QueryService] 필터링 결과: 42개 강의
2025-09-26 18:18:59 | INFO | service.queryService |    #1: ID=26, 과목명=인간-컴퓨터상호작용, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #2: ID=84, 과목명=게임및혼합현실, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #3: ID=277, 과목명=컴퓨터비전, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #4: ID=457, 과목명=컴퓨터논리및논술론, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #5: ID=749, 과목명=프로그래밍언어론, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #6: ID=764, 과목명=자료구조, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #7: ID=793, 과목명=인공지능, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #8: ID=818, 과목명=리눅스프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #9: ID=1041, 과목명=운영체제, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #10: ID=1183, 과목명=데이터베이스, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #11: ID=1352, 과목명=산학실전캡스톤 2, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #12: ID=1444, 과목명=수치해석및최적화, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #13: ID=1520, 과목명=오픈소스소프트웨어개발, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #14: ID=1553, 과목명=자연어처리, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #15: ID=1554, 과목명=논리설계, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #16: ID=1583, 과목명=컴퓨터네트워크, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #17: ID=1715, 과목명=암호론, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #18: ID=1814, 과목명=컴파일러, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #19: ID=1954, 과목명=선형대수학, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #20: ID=2311, 과목명=임베디드시스템, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #21: ID=2402, 과목명=객체지향프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #22: ID=2406, 과목명=네트워크보안, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #23: ID=2594, 과목명=컴퓨터구조, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #24: ID=2729, 과목명=이산수학, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #25: ID=2819, 과목명=소프트웨어공학, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #26: ID=2954, 과목명=확률및통계, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #27: ID=3004, 과목명=정보검색, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #28: ID=3094, 과목명=컴퓨터공학총론, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #29: ID=3117, 과목명=모바일프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #30: ID=3166, 과목명=데이터마이닝, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #31: ID=3363, 과목명=웹서비스설계, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #32: ID=3379, 과목명=산학실전캡스톤 3, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #33: ID=3702, 과목명=디지털시스템설계, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #34: ID=3723, 과목명=산학실전캡스톤 1, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #35: ID=3734, 과목명=클라우드컴퓨팅, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #36: ID=3796, 과목명=C++프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #37: ID=3978, 과목명=창업특강, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #38: ID=4094, 과목명=알고리즘, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #39: ID=4308, 과목명=시스템보안, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #40: ID=4346, 과목명=데이터통신, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #41: ID=4541, 과목명=컴퓨터그래픽스, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.queryService |    #42: ID=4555, 과목명=기계학습, 학과=컴퓨터인공지능학부
2025-09-26 18:18:59 | INFO | service.searchService | 📊 [SearchService] SQL 필터링 결과: 42개 강의
2025-09-26 18:18:59 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 시작: 42개 강의
2025-09-26 18:18:59 | INFO | service.searchService | ✅ [SearchService] 유효한 벡터: 42개
2025-09-26 18:18:59 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-26 18:18:59 | ERROR | service.searchService | ❌ [SearchService] 벡터 검색 실패: 
2025-09-26 18:18:59 | INFO | service.searchService | ✅ [SearchService] 검색 완료: 0개 결과
2025-09-26 18:18:59 | INFO | controller.searchController | ✅ [FAISS] 검색 완료:
2025-09-26 18:18:59 | INFO | controller.searchController |   - 처리 시간: 3.224초
2025-09-26 18:18:59 | INFO | controller.searchController |   - 결과 개수: 0
2025-09-26 18:18:59 | WARNING | controller.searchController | ⚠️ [FAISS] 검색 결과 없음: '컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-26 19:53:18 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-26 19:53:18 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-26 19:53:18 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-26 19:55:33 | INFO | controller.searchController | 🎯 [SQL+Vector] SQL 필터링 검색 시작:
2025-09-26 19:55:33 | INFO | controller.searchController |   - 쿼리: '테스트'
2025-09-26 19:55:33 | INFO | controller.searchController |   - 요청 개수: 1
2025-09-26 19:55:33 | INFO | controller.searchController |   - 시작 시간: 19:55:33.786
2025-09-26 19:55:33 | INFO | service.searchService | 🚀 [SearchService] 검색 시작: '테스트'
2025-09-26 19:55:33 | INFO | service.queryService | 🔍 [QueryService] SQL 쿼리 생성 시작: '테스트'
2025-09-26 19:55:35 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 19:55:35 | INFO | service.queryService | 📝 [QueryService] LLM 응답: ```json
{
  "sql_query": null,
  "reasoning": "주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함"
}
```
2025-09-26 19:55:35 | INFO | util.utils | ℹ️ [SQL필터] SQL 필터링 불필요
2025-09-26 19:55:35 | INFO | util.utils | 💭 [SQL필터] 이유: 주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함
2025-09-26 19:55:35 | INFO | service.queryService | ℹ️ [QueryService] SQL 필터링 불필요
2025-09-26 19:55:35 | WARNING | service.searchService | ⚠️ [SearchService] SQL 필터링 결과 없음 - 전체 DB에서 벡터 검색 실행
2025-09-26 19:55:35 | INFO | service.searchService | 🔍 [SearchService] 전체 DB에서 벡터 데이터 조회
2025-09-26 19:55:35 | INFO | service.searchService | 📊 [SearchService] 전체 DB 조회 결과: 1000개 강의
2025-09-26 19:55:35 | INFO | service.searchService | 📊 [SearchService] 전체 DB 검색: 1000개 강의
2025-09-26 19:55:35 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 시작: 1000개 강의
2025-09-26 19:55:38 | INFO | service.searchService | ✅ [SearchService] 유효한 벡터: 1000개
2025-09-26 19:55:38 | INFO | service.searchService | 🔧 [SearchService] 벡터 배열 생성: shape=(1000, 1536)
2025-09-26 19:55:38 | INFO | service.searchService | 🔧 [SearchService] FAISS 인덱스 생성 완료: dimension=1536
2025-09-26 19:55:38 | INFO | service.searchService | 🔧 [SearchService] 쿼리 임베딩 생성 시작: '테스트'
2025-09-26 19:55:39 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-26 19:55:39 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 생성 완료: shape=(1536,)
2025-09-26 19:55:39 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 정규화 완료: shape=(1, 1536)
2025-09-26 19:55:39 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 시작: search_count=1
2025-09-26 19:55:39 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 완료: scores=[0.08421763], indices=[110]
2025-09-26 19:55:39 | INFO | service.searchService | 🔧 [SearchService] 결과 1: 응용역학, score=0.0842
2025-09-26 19:55:39 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 완료: 1개 결과
2025-09-26 19:55:39 | INFO | service.searchService | ✅ [SearchService] 검색 완료: 1개 결과
2025-09-26 19:55:39 | INFO | controller.searchController | ✅ [SQL+Vector] 검색 완료:
2025-09-26 19:55:39 | INFO | controller.searchController |   - 처리 시간: 6.074초
2025-09-26 19:55:39 | INFO | controller.searchController |   - 결과 개수: 1
2025-09-26 19:55:39 | INFO | controller.searchController | 📋 [SQL+Vector] 검색 결과:
2025-09-26 19:55:39 | INFO | controller.searchController |   1. 응용역학 (토목환경자원에너지공학부(토목공학)) - 유사도: 0.084
2025-09-26 19:55:39 | INFO | controller.searchController | 🎯 [SQL+Vector] SQL 필터링 검색 시작:
2025-09-26 19:55:39 | INFO | controller.searchController |   - 쿼리: '테스트'
2025-09-26 19:55:39 | INFO | controller.searchController |   - 요청 개수: 1
2025-09-26 19:55:39 | INFO | controller.searchController |   - 시작 시간: 19:55:39.861
2025-09-26 19:55:39 | INFO | service.searchService | 🚀 [SearchService] 검색 시작: '테스트'
2025-09-26 19:55:39 | INFO | service.queryService | 🔍 [QueryService] SQL 쿼리 생성 시작: '테스트'
2025-09-26 19:55:41 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 19:55:41 | INFO | service.queryService | 📝 [QueryService] LLM 응답: ```json
{
  "sql_query": null,
  "reasoning": "주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함"
}
```
2025-09-26 19:55:41 | INFO | util.utils | ℹ️ [SQL필터] SQL 필터링 불필요
2025-09-26 19:55:41 | INFO | util.utils | 💭 [SQL필터] 이유: 주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함
2025-09-26 19:55:41 | INFO | service.queryService | ℹ️ [QueryService] SQL 필터링 불필요
2025-09-26 19:55:41 | WARNING | service.searchService | ⚠️ [SearchService] SQL 필터링 결과 없음 - 전체 DB에서 벡터 검색 실행
2025-09-26 19:55:41 | INFO | service.searchService | 🔍 [SearchService] 전체 DB에서 벡터 데이터 조회
2025-09-26 19:55:41 | INFO | service.searchService | 📊 [SearchService] 전체 DB 조회 결과: 1000개 강의
2025-09-26 19:55:41 | INFO | service.searchService | 📊 [SearchService] 전체 DB 검색: 1000개 강의
2025-09-26 19:55:41 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 시작: 1000개 강의
2025-09-26 19:55:44 | INFO | service.searchService | ✅ [SearchService] 유효한 벡터: 1000개
2025-09-26 19:55:44 | INFO | service.searchService | 🔧 [SearchService] 벡터 배열 생성: shape=(1000, 1536)
2025-09-26 19:55:44 | INFO | service.searchService | 🔧 [SearchService] FAISS 인덱스 생성 완료: dimension=1536
2025-09-26 19:55:44 | INFO | service.searchService | 🔧 [SearchService] 쿼리 임베딩 생성 시작: '테스트'
2025-09-26 19:55:45 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-26 19:55:45 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 생성 완료: shape=(1536,)
2025-09-26 19:55:45 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 정규화 완료: shape=(1, 1536)
2025-09-26 19:55:45 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 시작: search_count=1
2025-09-26 19:55:45 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 완료: scores=[0.0842459], indices=[110]
2025-09-26 19:55:45 | INFO | service.searchService | 🔧 [SearchService] 결과 1: 응용역학, score=0.0842
2025-09-26 19:55:45 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 완료: 1개 결과
2025-09-26 19:55:45 | INFO | service.searchService | ✅ [SearchService] 검색 완료: 1개 결과
2025-09-26 19:55:45 | INFO | controller.searchController | ✅ [SQL+Vector] 검색 완료:
2025-09-26 19:55:45 | INFO | controller.searchController |   - 처리 시간: 5.776초
2025-09-26 19:55:45 | INFO | controller.searchController |   - 결과 개수: 1
2025-09-26 19:55:45 | INFO | controller.searchController | 📋 [SQL+Vector] 검색 결과:
2025-09-26 19:55:45 | INFO | controller.searchController |   1. 응용역학 (토목환경자원에너지공학부(토목공학)) - 유사도: 0.084
2025-09-26 20:00:38 | INFO | controller.searchController | 🎯 [SQL+Vector] SQL 필터링 검색 시작:
2025-09-26 20:00:38 | INFO | controller.searchController |   - 쿼리: '테스트'
2025-09-26 20:00:38 | INFO | controller.searchController |   - 요청 개수: 1
2025-09-26 20:00:38 | INFO | controller.searchController |   - 시작 시간: 20:00:38.705
2025-09-26 20:00:38 | INFO | service.searchService | 🚀 [SearchService] 검색 시작: '테스트'
2025-09-26 20:00:38 | INFO | service.queryService | 🔍 [QueryService] SQL 쿼리 생성 시작: '테스트'
2025-09-26 20:00:42 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 20:00:42 | INFO | service.queryService | 📝 [QueryService] LLM 응답: ```json
{
  "sql_query": null,
  "reasoning": "주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함"
}
```
2025-09-26 20:00:42 | INFO | util.utils | ℹ️ [SQL필터] SQL 필터링 불필요
2025-09-26 20:00:42 | INFO | util.utils | 💭 [SQL필터] 이유: 주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함
2025-09-26 20:00:42 | INFO | service.queryService | ℹ️ [QueryService] SQL 필터링 불필요
2025-09-26 20:00:42 | WARNING | service.searchService | ⚠️ [SearchService] SQL 필터링 결과 없음 - 전체 DB에서 벡터 검색 실행
2025-09-26 20:00:42 | INFO | service.searchService | 🔍 [SearchService] 전체 DB에서 벡터 데이터 조회
2025-09-26 20:00:42 | INFO | service.searchService | 📊 [SearchService] 전체 DB 조회 결과: 1000개 강의
2025-09-26 20:00:42 | INFO | service.searchService | 📊 [SearchService] 전체 DB 검색: 1000개 강의
2025-09-26 20:00:42 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 시작: 1000개 강의
2025-09-26 20:00:45 | INFO | service.searchService | ✅ [SearchService] 유효한 벡터: 1000개
2025-09-26 20:00:45 | INFO | service.searchService | 🔧 [SearchService] 벡터 배열 생성: shape=(1000, 1536)
2025-09-26 20:00:45 | INFO | service.searchService | 🔧 [SearchService] FAISS 인덱스 생성 완료: dimension=1536
2025-09-26 20:00:45 | INFO | service.searchService | 🔧 [SearchService] 쿼리 임베딩 생성 시작: '테스트'
2025-09-26 20:00:45 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-26 20:00:45 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 생성 완료: shape=(1536,)
2025-09-26 20:00:45 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 정규화 완료: shape=(1, 1536)
2025-09-26 20:00:45 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 시작: search_count=1
2025-09-26 20:00:45 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 완료: scores=[0.0842459], indices=[110]
2025-09-26 20:00:45 | INFO | service.searchService | 🔧 [SearchService] 결과 1: 응용역학, score=0.0842
2025-09-26 20:00:45 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 완료: 1개 결과
2025-09-26 20:00:45 | INFO | service.searchService | ✅ [SearchService] 검색 완료: 1개 결과
2025-09-26 20:00:45 | INFO | controller.searchController | ✅ [SQL+Vector] 검색 완료:
2025-09-26 20:00:45 | INFO | controller.searchController |   - 처리 시간: 7.192초
2025-09-26 20:00:45 | INFO | controller.searchController |   - 결과 개수: 1
2025-09-26 20:00:45 | INFO | controller.searchController | 📋 [SQL+Vector] 검색 결과:
2025-09-26 20:00:45 | INFO | controller.searchController |   1. 응용역학 (토목환경자원에너지공학부(토목공학)) - 유사도: 0.084
2025-09-26 20:00:45 | INFO | controller.searchController | 🎯 [SQL+Vector] SQL 필터링 검색 시작:
2025-09-26 20:00:45 | INFO | controller.searchController |   - 쿼리: '컴공과 인공지능 관련 수업을 찾아줘

[확장정보] 배경정보: Looking for courses related to artificial intelligence in the Computer Science department. | 관련키워드: 인공지능, AI, 컴퓨터공학, 머신러닝, 딥러닝, 데이터과학'
2025-09-26 20:00:45 | INFO | controller.searchController |   - 요청 개수: 30
2025-09-26 20:00:45 | INFO | controller.searchController |   - 시작 시간: 20:00:45.902
2025-09-26 20:00:45 | INFO | service.searchService | 🚀 [SearchService] 검색 시작: '컴공과 인공지능 관련 수업을 찾아줘

[확장정보] 배경정보: Looking for courses related to artificial intelligence in the Computer Science department. | 관련키워드: 인공지능, AI, 컴퓨터공학, 머신러닝, 딥러닝, 데이터과학'
2025-09-26 20:00:45 | INFO | service.queryService | 🔍 [QueryService] SQL 쿼리 생성 시작: '컴공과 인공지능 관련 수업을 찾아줘

[확장정보] 배경정보: Looking for courses related to artificial intelligence in the Computer Science department. | 관련키워드: 인공지능, AI, 컴퓨터공학, 머신러닝, 딥러닝, 데이터과학'
2025-09-26 20:00:49 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 20:00:49 | INFO | service.queryService | 📝 [QueryService] LLM 응답: ```json
{
  "sql_query": "SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')",
  "reasoning": "학과(컴공→컴퓨터) 필터링만 적용하고, 인공지능 관련 주제는 벡터 검색에서 처리"
}
```
2025-09-26 20:00:49 | INFO | util.utils | ✅ [SQL필터] SQL 쿼리 생성 완료
2025-09-26 20:00:49 | INFO | util.utils | 📋 [SQL필터] 생성된 쿼리: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')
2025-09-26 20:00:49 | INFO | util.utils | 💭 [SQL필터] 생성 이유: 학과(컴공→컴퓨터) 필터링만 적용하고, 인공지능 관련 주제는 벡터 검색에서 처리
2025-09-26 20:00:49 | INFO | service.queryService | 🔍 [QueryService] SQL 실행: 
                SELECT id, name, department_full_name, department, professor, credits,
                       schedule, location, delivery_mode, gpt_description, vector
                FROM jbnu_class_gpt
                WHERE id IN (
                    SELECT DISTINCT id FROM (SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')) as filtered
                )
                
2025-09-26 20:00:49 | INFO | service.queryService | 📊 [QueryService] 필터링 결과: 42개 강의
2025-09-26 20:00:49 | INFO | service.queryService |    #1: ID=26, 과목명=인간-컴퓨터상호작용, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #2: ID=84, 과목명=게임및혼합현실, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #3: ID=277, 과목명=컴퓨터비전, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #4: ID=457, 과목명=컴퓨터논리및논술론, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #5: ID=749, 과목명=프로그래밍언어론, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #6: ID=764, 과목명=자료구조, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #7: ID=793, 과목명=인공지능, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #8: ID=818, 과목명=리눅스프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #9: ID=1041, 과목명=운영체제, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #10: ID=1183, 과목명=데이터베이스, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #11: ID=1352, 과목명=산학실전캡스톤 2, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #12: ID=1444, 과목명=수치해석및최적화, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #13: ID=1520, 과목명=오픈소스소프트웨어개발, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #14: ID=1553, 과목명=자연어처리, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #15: ID=1554, 과목명=논리설계, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #16: ID=1583, 과목명=컴퓨터네트워크, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #17: ID=1715, 과목명=암호론, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #18: ID=1814, 과목명=컴파일러, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #19: ID=1954, 과목명=선형대수학, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #20: ID=2311, 과목명=임베디드시스템, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #21: ID=2402, 과목명=객체지향프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #22: ID=2406, 과목명=네트워크보안, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #23: ID=2594, 과목명=컴퓨터구조, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #24: ID=2729, 과목명=이산수학, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #25: ID=2819, 과목명=소프트웨어공학, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #26: ID=2954, 과목명=확률및통계, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #27: ID=3004, 과목명=정보검색, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #28: ID=3094, 과목명=컴퓨터공학총론, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #29: ID=3117, 과목명=모바일프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #30: ID=3166, 과목명=데이터마이닝, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #31: ID=3363, 과목명=웹서비스설계, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #32: ID=3379, 과목명=산학실전캡스톤 3, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #33: ID=3702, 과목명=디지털시스템설계, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #34: ID=3723, 과목명=산학실전캡스톤 1, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #35: ID=3734, 과목명=클라우드컴퓨팅, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #36: ID=3796, 과목명=C++프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #37: ID=3978, 과목명=창업특강, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #38: ID=4094, 과목명=알고리즘, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #39: ID=4308, 과목명=시스템보안, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #40: ID=4346, 과목명=데이터통신, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #41: ID=4541, 과목명=컴퓨터그래픽스, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.queryService |    #42: ID=4555, 과목명=기계학습, 학과=컴퓨터인공지능학부
2025-09-26 20:00:49 | INFO | service.searchService | 📊 [SearchService] SQL 필터링 결과: 42개 강의
2025-09-26 20:00:49 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 시작: 42개 강의
2025-09-26 20:00:49 | INFO | service.searchService | ✅ [SearchService] 유효한 벡터: 42개
2025-09-26 20:00:49 | INFO | service.searchService | 🔧 [SearchService] 벡터 배열 생성: shape=(42, 1536)
2025-09-26 20:00:49 | INFO | service.searchService | 🔧 [SearchService] FAISS 인덱스 생성 완료: dimension=1536
2025-09-26 20:00:49 | INFO | service.searchService | 🔧 [SearchService] 쿼리 임베딩 생성 시작: '컴공과 인공지능 관련 수업을 찾아줘

[확장정보] 배경정보: Looking for courses related to artificial intelligence in the Computer Science department. | 관련키워드: 인공지능, AI, 컴퓨터공학, 머신러닝, 딥러닝, 데이터과학'
2025-09-26 20:00:50 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 생성 완료: shape=(1536,)
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 정규화 완료: shape=(1, 1536)
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 시작: search_count=30
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 완료: scores=[0.07544841 0.06933489 0.06646274], indices=[31  5 33]
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 1: 산학실전캡스톤 3, score=0.0754
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 2: 자료구조, score=0.0693
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 3: 산학실전캡스톤 1, score=0.0665
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 4: 컴퓨터논리및논술론, score=0.0629
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 5: 확률및통계, score=0.0586
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 6: 클라우드컴퓨팅, score=0.0583
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 7: 데이터마이닝, score=0.0580
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 8: 정보검색, score=0.0489
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 9: 산학실전캡스톤 2, score=0.0486
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 10: 선형대수학, score=0.0472
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 11: 소프트웨어공학, score=0.0471
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 12: 오픈소스소프트웨어개발, score=0.0470
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 13: 이산수학, score=0.0447
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 14: 데이터통신, score=0.0423
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 15: 컴퓨터구조, score=0.0417
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 16: 네트워크보안, score=0.0413
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 17: 컴퓨터네트워크, score=0.0391
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 18: 데이터베이스, score=0.0383
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 19: 기계학습, score=0.0380
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 20: 웹서비스설계, score=0.0378
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 21: 자연어처리, score=0.0352
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 22: 컴파일러, score=0.0350
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 23: 컴퓨터공학총론, score=0.0343
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 24: 창업특강, score=0.0330
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 25: 논리설계, score=0.0323
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 26: 모바일프로그래밍, score=0.0319
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 27: 수치해석및최적화, score=0.0305
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 28: 인공지능, score=0.0294
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 29: 컴퓨터그래픽스, score=0.0285
2025-09-26 20:00:50 | INFO | service.searchService | 🔧 [SearchService] 결과 30: 컴퓨터비전, score=0.0275
2025-09-26 20:00:50 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 완료: 30개 결과
2025-09-26 20:00:50 | INFO | service.searchService | ✅ [SearchService] 검색 완료: 30개 결과
2025-09-26 20:00:50 | INFO | controller.searchController | ✅ [SQL+Vector] 검색 완료:
2025-09-26 20:00:50 | INFO | controller.searchController |   - 처리 시간: 4.611초
2025-09-26 20:00:50 | INFO | controller.searchController |   - 결과 개수: 30
2025-09-26 20:00:50 | INFO | controller.searchController | 📋 [SQL+Vector] 검색 결과:
2025-09-26 20:00:50 | INFO | controller.searchController |   1. 산학실전캡스톤 3 (컴퓨터인공지능학부) - 유사도: 0.075
2025-09-26 20:00:50 | INFO | controller.searchController |   2. 자료구조 (컴퓨터인공지능학부) - 유사도: 0.069
2025-09-26 20:00:50 | INFO | controller.searchController |   3. 산학실전캡스톤 1 (컴퓨터인공지능학부) - 유사도: 0.066
2025-09-26 20:00:50 | INFO | controller.searchController |   ... 총 30개 결과
2025-09-26 20:02:14 | INFO | controller.searchController | 🎯 [SQL+Vector] SQL 필터링 검색 시작:
2025-09-26 20:02:14 | INFO | controller.searchController |   - 쿼리: '컴공에서 인공지능 관련 수업을 찾아줘

[확장정보] 배경정보: Looking for courses related to artificial intelligence in the Computer Science department. | 관련키워드: 인공지능, AI, 컴퓨터공학, 머신러닝, 딥러닝, 데이터과학'
2025-09-26 20:02:14 | INFO | controller.searchController |   - 요청 개수: 30
2025-09-26 20:02:14 | INFO | controller.searchController |   - 시작 시간: 20:02:14.639
2025-09-26 20:02:14 | INFO | service.searchService | 🚀 [SearchService] 검색 시작: '컴공에서 인공지능 관련 수업을 찾아줘

[확장정보] 배경정보: Looking for courses related to artificial intelligence in the Computer Science department. | 관련키워드: 인공지능, AI, 컴퓨터공학, 머신러닝, 딥러닝, 데이터과학'
2025-09-26 20:02:14 | INFO | service.queryService | 🔍 [QueryService] SQL 쿼리 생성 시작: '컴공에서 인공지능 관련 수업을 찾아줘

[확장정보] 배경정보: Looking for courses related to artificial intelligence in the Computer Science department. | 관련키워드: 인공지능, AI, 컴퓨터공학, 머신러닝, 딥러닝, 데이터과학'
2025-09-26 20:02:19 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 20:02:19 | INFO | service.queryService | 📝 [QueryService] LLM 응답: ```json
{
  "sql_query": "SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')",
  "reasoning": "학과(컴공→컴퓨터) 필터링만 적용하고, 인공지능 관련 주제는 벡터 검색에서 처리"
}
```
2025-09-26 20:02:19 | INFO | util.utils | ✅ [SQL필터] SQL 쿼리 생성 완료
2025-09-26 20:02:19 | INFO | util.utils | 📋 [SQL필터] 생성된 쿼리: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')
2025-09-26 20:02:19 | INFO | util.utils | 💭 [SQL필터] 생성 이유: 학과(컴공→컴퓨터) 필터링만 적용하고, 인공지능 관련 주제는 벡터 검색에서 처리
2025-09-26 20:02:19 | INFO | service.queryService | 🔍 [QueryService] SQL 실행: 
                SELECT id, name, department_full_name, department, professor, credits,
                       schedule, location, delivery_mode, gpt_description, vector
                FROM jbnu_class_gpt
                WHERE id IN (
                    SELECT DISTINCT id FROM (SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')) as filtered
                )
                
2025-09-26 20:02:19 | INFO | service.queryService | 📊 [QueryService] 필터링 결과: 42개 강의
2025-09-26 20:02:19 | INFO | service.queryService |    #1: ID=26, 과목명=인간-컴퓨터상호작용, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #2: ID=84, 과목명=게임및혼합현실, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #3: ID=277, 과목명=컴퓨터비전, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #4: ID=457, 과목명=컴퓨터논리및논술론, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #5: ID=749, 과목명=프로그래밍언어론, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #6: ID=764, 과목명=자료구조, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #7: ID=793, 과목명=인공지능, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #8: ID=818, 과목명=리눅스프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #9: ID=1041, 과목명=운영체제, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #10: ID=1183, 과목명=데이터베이스, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #11: ID=1352, 과목명=산학실전캡스톤 2, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #12: ID=1444, 과목명=수치해석및최적화, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #13: ID=1520, 과목명=오픈소스소프트웨어개발, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #14: ID=1553, 과목명=자연어처리, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #15: ID=1554, 과목명=논리설계, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #16: ID=1583, 과목명=컴퓨터네트워크, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #17: ID=1715, 과목명=암호론, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #18: ID=1814, 과목명=컴파일러, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #19: ID=1954, 과목명=선형대수학, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #20: ID=2311, 과목명=임베디드시스템, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #21: ID=2402, 과목명=객체지향프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #22: ID=2406, 과목명=네트워크보안, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #23: ID=2594, 과목명=컴퓨터구조, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #24: ID=2729, 과목명=이산수학, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #25: ID=2819, 과목명=소프트웨어공학, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #26: ID=2954, 과목명=확률및통계, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #27: ID=3004, 과목명=정보검색, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #28: ID=3094, 과목명=컴퓨터공학총론, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #29: ID=3117, 과목명=모바일프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #30: ID=3166, 과목명=데이터마이닝, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #31: ID=3363, 과목명=웹서비스설계, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #32: ID=3379, 과목명=산학실전캡스톤 3, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #33: ID=3702, 과목명=디지털시스템설계, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #34: ID=3723, 과목명=산학실전캡스톤 1, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #35: ID=3734, 과목명=클라우드컴퓨팅, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #36: ID=3796, 과목명=C++프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #37: ID=3978, 과목명=창업특강, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #38: ID=4094, 과목명=알고리즘, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #39: ID=4308, 과목명=시스템보안, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #40: ID=4346, 과목명=데이터통신, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #41: ID=4541, 과목명=컴퓨터그래픽스, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.queryService |    #42: ID=4555, 과목명=기계학습, 학과=컴퓨터인공지능학부
2025-09-26 20:02:19 | INFO | service.searchService | 📊 [SearchService] SQL 필터링 결과: 42개 강의
2025-09-26 20:02:19 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 시작: 42개 강의
2025-09-26 20:02:20 | INFO | service.searchService | ✅ [SearchService] 유효한 벡터: 42개
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 벡터 배열 생성: shape=(42, 1536)
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] FAISS 인덱스 생성 완료: dimension=1536
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 쿼리 임베딩 생성 시작: '컴공에서 인공지능 관련 수업을 찾아줘

[확장정보] 배경정보: Looking for courses related to artificial intelligence in the Computer Science department. | 관련키워드: 인공지능, AI, 컴퓨터공학, 머신러닝, 딥러닝, 데이터과학'
2025-09-26 20:02:20 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 생성 완료: shape=(1536,)
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 정규화 완료: shape=(1, 1536)
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 시작: search_count=30
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 완료: scores=[0.07536252 0.06745681 0.06547737], indices=[31  5 33]
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 1: 산학실전캡스톤 3, score=0.0754
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 2: 자료구조, score=0.0675
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 3: 산학실전캡스톤 1, score=0.0655
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 4: 컴퓨터논리및논술론, score=0.0621
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 5: 확률및통계, score=0.0597
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 6: 클라우드컴퓨팅, score=0.0594
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 7: 데이터마이닝, score=0.0564
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 8: 산학실전캡스톤 2, score=0.0482
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 9: 오픈소스소프트웨어개발, score=0.0481
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 10: 정보검색, score=0.0478
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 11: 소프트웨어공학, score=0.0473
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 12: 선형대수학, score=0.0466
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 13: 이산수학, score=0.0459
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 14: 데이터통신, score=0.0448
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 15: 네트워크보안, score=0.0421
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 16: 컴퓨터네트워크, score=0.0410
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 17: 컴퓨터구조, score=0.0395
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 18: 웹서비스설계, score=0.0385
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 19: 데이터베이스, score=0.0371
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 20: 컴퓨터공학총론, score=0.0362
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 21: 기계학습, score=0.0361
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 22: 모바일프로그래밍, score=0.0343
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 23: 창업특강, score=0.0340
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 24: 자연어처리, score=0.0338
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 25: 컴파일러, score=0.0336
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 26: 논리설계, score=0.0310
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 27: 수치해석및최적화, score=0.0308
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 28: 컴퓨터비전, score=0.0295
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 29: 인공지능, score=0.0287
2025-09-26 20:02:20 | INFO | service.searchService | 🔧 [SearchService] 결과 30: 컴퓨터그래픽스, score=0.0282
2025-09-26 20:02:20 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 완료: 30개 결과
2025-09-26 20:02:20 | INFO | service.searchService | ✅ [SearchService] 검색 완료: 30개 결과
2025-09-26 20:02:20 | INFO | controller.searchController | ✅ [SQL+Vector] 검색 완료:
2025-09-26 20:02:20 | INFO | controller.searchController |   - 처리 시간: 5.913초
2025-09-26 20:02:20 | INFO | controller.searchController |   - 결과 개수: 30
2025-09-26 20:02:20 | INFO | controller.searchController | 📋 [SQL+Vector] 검색 결과:
2025-09-26 20:02:20 | INFO | controller.searchController |   1. 산학실전캡스톤 3 (컴퓨터인공지능학부) - 유사도: 0.075
2025-09-26 20:02:20 | INFO | controller.searchController |   2. 자료구조 (컴퓨터인공지능학부) - 유사도: 0.067
2025-09-26 20:02:20 | INFO | controller.searchController |   3. 산학실전캡스톤 1 (컴퓨터인공지능학부) - 유사도: 0.065
2025-09-26 20:02:20 | INFO | controller.searchController |   ... 총 30개 결과
2025-09-26 20:07:33 | INFO | controller.searchController | 🎯 [SQL+Vector] SQL 필터링 검색 시작:
2025-09-26 20:07:33 | INFO | controller.searchController |   - 쿼리: '컴공에서 인공지능 관련 수업을 찾아줘

[확장정보] 배경정보: Looking for courses related to artificial intelligence in the Computer Science department. | 관련키워드: 인공지능, AI, 컴퓨터공학, 머신러닝, 딥러닝, 데이터과학'
2025-09-26 20:07:33 | INFO | controller.searchController |   - 요청 개수: 30
2025-09-26 20:07:33 | INFO | controller.searchController |   - 시작 시간: 20:07:33.824
2025-09-26 20:07:33 | INFO | service.searchService | 🚀 [SearchService] 검색 시작: '컴공에서 인공지능 관련 수업을 찾아줘

[확장정보] 배경정보: Looking for courses related to artificial intelligence in the Computer Science department. | 관련키워드: 인공지능, AI, 컴퓨터공학, 머신러닝, 딥러닝, 데이터과학'
2025-09-26 20:07:33 | INFO | service.queryService | 🔍 [QueryService] SQL 쿼리 생성 시작: '컴공에서 인공지능 관련 수업을 찾아줘

[확장정보] 배경정보: Looking for courses related to artificial intelligence in the Computer Science department. | 관련키워드: 인공지능, AI, 컴퓨터공학, 머신러닝, 딥러닝, 데이터과학'
2025-09-26 20:07:36 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 20:07:36 | INFO | service.queryService | 📝 [QueryService] LLM 응답: ```json
{
  "sql_query": "SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')",
  "reasoning": "학과(컴공→컴퓨터) 필터링만 적용하고, 인공지능 관련 주제는 벡터 검색에서 처리"
}
```
2025-09-26 20:07:36 | INFO | util.utils | ✅ [SQL필터] SQL 쿼리 생성 완료
2025-09-26 20:07:36 | INFO | util.utils | 📋 [SQL필터] 생성된 쿼리: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')
2025-09-26 20:07:36 | INFO | util.utils | 💭 [SQL필터] 생성 이유: 학과(컴공→컴퓨터) 필터링만 적용하고, 인공지능 관련 주제는 벡터 검색에서 처리
2025-09-26 20:07:36 | INFO | service.queryService | 🔍 [QueryService] SQL 실행: 
                SELECT id, name, department_full_name, department, professor, credits,
                       schedule, location, delivery_mode, gpt_description, vector
                FROM jbnu_class_gpt
                WHERE id IN (
                    SELECT DISTINCT id FROM (SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')) as filtered
                )
                
2025-09-26 20:07:36 | INFO | service.queryService | 📊 [QueryService] 필터링 결과: 42개 강의
2025-09-26 20:07:36 | INFO | service.queryService |    #1: ID=26, 과목명=인간-컴퓨터상호작용, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #2: ID=84, 과목명=게임및혼합현실, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #3: ID=277, 과목명=컴퓨터비전, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #4: ID=457, 과목명=컴퓨터논리및논술론, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #5: ID=749, 과목명=프로그래밍언어론, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #6: ID=764, 과목명=자료구조, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #7: ID=793, 과목명=인공지능, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #8: ID=818, 과목명=리눅스프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #9: ID=1041, 과목명=운영체제, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #10: ID=1183, 과목명=데이터베이스, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #11: ID=1352, 과목명=산학실전캡스톤 2, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #12: ID=1444, 과목명=수치해석및최적화, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #13: ID=1520, 과목명=오픈소스소프트웨어개발, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #14: ID=1553, 과목명=자연어처리, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #15: ID=1554, 과목명=논리설계, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #16: ID=1583, 과목명=컴퓨터네트워크, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #17: ID=1715, 과목명=암호론, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #18: ID=1814, 과목명=컴파일러, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #19: ID=1954, 과목명=선형대수학, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #20: ID=2311, 과목명=임베디드시스템, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #21: ID=2402, 과목명=객체지향프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #22: ID=2406, 과목명=네트워크보안, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #23: ID=2594, 과목명=컴퓨터구조, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #24: ID=2729, 과목명=이산수학, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #25: ID=2819, 과목명=소프트웨어공학, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #26: ID=2954, 과목명=확률및통계, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #27: ID=3004, 과목명=정보검색, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #28: ID=3094, 과목명=컴퓨터공학총론, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #29: ID=3117, 과목명=모바일프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #30: ID=3166, 과목명=데이터마이닝, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #31: ID=3363, 과목명=웹서비스설계, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #32: ID=3379, 과목명=산학실전캡스톤 3, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #33: ID=3702, 과목명=디지털시스템설계, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #34: ID=3723, 과목명=산학실전캡스톤 1, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #35: ID=3734, 과목명=클라우드컴퓨팅, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #36: ID=3796, 과목명=C++프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #37: ID=3978, 과목명=창업특강, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #38: ID=4094, 과목명=알고리즘, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #39: ID=4308, 과목명=시스템보안, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #40: ID=4346, 과목명=데이터통신, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #41: ID=4541, 과목명=컴퓨터그래픽스, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.queryService |    #42: ID=4555, 과목명=기계학습, 학과=컴퓨터인공지능학부
2025-09-26 20:07:36 | INFO | service.searchService | 📊 [SearchService] SQL 필터링 결과: 42개 강의
2025-09-26 20:07:36 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 시작: 42개 강의
2025-09-26 20:07:36 | INFO | service.searchService | ✅ [SearchService] 유효한 벡터: 42개
2025-09-26 20:07:36 | INFO | service.searchService | 🔧 [SearchService] 벡터 배열 생성: shape=(42, 1536)
2025-09-26 20:07:36 | INFO | service.searchService | 🔧 [SearchService] FAISS 인덱스 생성 완료: dimension=1536
2025-09-26 20:07:36 | INFO | service.searchService | 🔧 [SearchService] 쿼리 임베딩 생성 시작: '컴공에서 인공지능 관련 수업을 찾아줘

[확장정보] 배경정보: Looking for courses related to artificial intelligence in the Computer Science department. | 관련키워드: 인공지능, AI, 컴퓨터공학, 머신러닝, 딥러닝, 데이터과학'
2025-09-26 20:07:37 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 생성 완료: shape=(1536,)
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 정규화 완료: shape=(1, 1536)
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 시작: search_count=30
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 완료: scores=[0.07536252 0.06745681 0.06547737], indices=[31  5 33]
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 1: 산학실전캡스톤 3, score=0.0754
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 2: 자료구조, score=0.0675
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 3: 산학실전캡스톤 1, score=0.0655
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 4: 컴퓨터논리및논술론, score=0.0621
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 5: 확률및통계, score=0.0597
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 6: 클라우드컴퓨팅, score=0.0594
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 7: 데이터마이닝, score=0.0564
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 8: 산학실전캡스톤 2, score=0.0482
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 9: 오픈소스소프트웨어개발, score=0.0481
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 10: 정보검색, score=0.0478
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 11: 소프트웨어공학, score=0.0473
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 12: 선형대수학, score=0.0466
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 13: 이산수학, score=0.0459
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 14: 데이터통신, score=0.0448
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 15: 네트워크보안, score=0.0421
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 16: 컴퓨터네트워크, score=0.0410
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 17: 컴퓨터구조, score=0.0395
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 18: 웹서비스설계, score=0.0385
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 19: 데이터베이스, score=0.0371
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 20: 컴퓨터공학총론, score=0.0362
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 21: 기계학습, score=0.0361
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 22: 모바일프로그래밍, score=0.0343
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 23: 창업특강, score=0.0340
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 24: 자연어처리, score=0.0338
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 25: 컴파일러, score=0.0336
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 26: 논리설계, score=0.0310
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 27: 수치해석및최적화, score=0.0308
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 28: 컴퓨터비전, score=0.0295
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 29: 인공지능, score=0.0287
2025-09-26 20:07:37 | INFO | service.searchService | 🔧 [SearchService] 결과 30: 컴퓨터그래픽스, score=0.0282
2025-09-26 20:07:37 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 완료: 30개 결과
2025-09-26 20:07:37 | INFO | service.searchService | ✅ [SearchService] 검색 완료: 30개 결과
2025-09-26 20:07:37 | INFO | controller.searchController | ✅ [SQL+Vector] 검색 완료:
2025-09-26 20:07:37 | INFO | controller.searchController |   - 처리 시간: 3.664초
2025-09-26 20:07:37 | INFO | controller.searchController |   - 결과 개수: 30
2025-09-26 20:07:37 | INFO | controller.searchController | 📋 [SQL+Vector] 검색 결과:
2025-09-26 20:07:37 | INFO | controller.searchController |   1. 산학실전캡스톤 3 (컴퓨터인공지능학부) - 유사도: 0.075
2025-09-26 20:07:37 | INFO | controller.searchController |   2. 자료구조 (컴퓨터인공지능학부) - 유사도: 0.067
2025-09-26 20:07:37 | INFO | controller.searchController |   3. 산학실전캡스톤 1 (컴퓨터인공지능학부) - 유사도: 0.065
2025-09-26 20:07:37 | INFO | controller.searchController |   ... 총 30개 결과
2025-09-26 20:13:29 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-26 20:13:29 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-26 20:13:29 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-26 20:13:31 | INFO | controller.searchController | 🎯 [SQL+Vector] SQL 필터링 검색 시작:
2025-09-26 20:13:31 | INFO | controller.searchController |   - 쿼리: '테스트'
2025-09-26 20:13:31 | INFO | controller.searchController |   - 요청 개수: 1
2025-09-26 20:13:31 | INFO | controller.searchController |   - 시작 시간: 20:13:31.144
2025-09-26 20:13:31 | INFO | service.searchService | 🚀 [SearchService] 검색 시작: '테스트'
2025-09-26 20:13:31 | INFO | service.queryService | 🔍 [QueryService] SQL 쿼리 생성 시작: '테스트'
2025-09-26 20:13:32 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 20:13:32 | INFO | service.queryService | 📝 [QueryService] LLM 응답: ```json
{
  "sql_query": null,
  "reasoning": "주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함"
}
```
2025-09-26 20:13:32 | INFO | util.utils | ℹ️ [SQL필터] SQL 필터링 불필요
2025-09-26 20:13:32 | INFO | util.utils | 💭 [SQL필터] 이유: 주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함
2025-09-26 20:13:32 | INFO | service.queryService | ℹ️ [QueryService] SQL 필터링 불필요
2025-09-26 20:13:32 | WARNING | service.searchService | ⚠️ [SearchService] SQL 필터링 결과 없음 - 전체 DB에서 벡터 검색 실행
2025-09-26 20:13:32 | INFO | service.searchService | 🔍 [SearchService] 전체 DB에서 벡터 데이터 조회
2025-09-26 20:13:32 | INFO | service.searchService | 📊 [SearchService] 전체 DB 조회 결과: 448개 강의
2025-09-26 20:13:32 | INFO | service.searchService | 📊 [SearchService] 전체 DB 검색: 448개 강의
2025-09-26 20:13:32 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 시작: 448개 강의
2025-09-26 20:13:33 | INFO | service.searchService | ✅ [SearchService] 유효한 벡터: 448개
2025-09-26 20:13:33 | INFO | service.searchService | 🔧 [SearchService] 벡터 배열 생성: shape=(448, 1536)
2025-09-26 20:13:33 | INFO | service.searchService | 🔧 [SearchService] FAISS 인덱스 생성 완료: dimension=1536
2025-09-26 20:13:33 | INFO | service.searchService | 🔧 [SearchService] 쿼리 임베딩 생성 시작: '테스트'
2025-09-26 20:13:34 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-26 20:13:34 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 생성 완료: shape=(1536,)
2025-09-26 20:13:34 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 정규화 완료: shape=(1, 1536)
2025-09-26 20:13:34 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 시작: search_count=1
2025-09-26 20:13:34 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 완료: scores=[0.07314133], indices=[123]
2025-09-26 20:13:34 | INFO | service.searchService | 🔧 [SearchService] 결과 1: 컴퓨터네트워크, score=0.0731
2025-09-26 20:13:34 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 완료: 1개 결과
2025-09-26 20:13:34 | INFO | service.searchService | ✅ [SearchService] 검색 완료: 1개 결과
2025-09-26 20:13:34 | INFO | controller.searchController | ✅ [SQL+Vector] 검색 완료:
2025-09-26 20:13:34 | INFO | controller.searchController |   - 처리 시간: 3.236초
2025-09-26 20:13:34 | INFO | controller.searchController |   - 결과 개수: 1
2025-09-26 20:13:34 | INFO | controller.searchController | 📋 [SQL+Vector] 검색 결과:
2025-09-26 20:13:34 | INFO | controller.searchController |   1. 컴퓨터네트워크 (전자공학부) - 유사도: 0.073
2025-09-26 20:13:34 | INFO | controller.searchController | 🎯 [SQL+Vector] SQL 필터링 검색 시작:
2025-09-26 20:13:34 | INFO | controller.searchController |   - 쿼리: '테스트'
2025-09-26 20:13:34 | INFO | controller.searchController |   - 요청 개수: 1
2025-09-26 20:13:34 | INFO | controller.searchController |   - 시작 시간: 20:13:34.381
2025-09-26 20:13:34 | INFO | service.searchService | 🚀 [SearchService] 검색 시작: '테스트'
2025-09-26 20:13:34 | INFO | service.queryService | 🔍 [QueryService] SQL 쿼리 생성 시작: '테스트'
2025-09-26 20:13:35 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 20:13:35 | INFO | service.queryService | 📝 [QueryService] LLM 응답: ```json
{
  "sql_query": null,
  "reasoning": "주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함"
}
```
2025-09-26 20:13:35 | INFO | util.utils | ℹ️ [SQL필터] SQL 필터링 불필요
2025-09-26 20:13:35 | INFO | util.utils | 💭 [SQL필터] 이유: 주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함
2025-09-26 20:13:35 | INFO | service.queryService | ℹ️ [QueryService] SQL 필터링 불필요
2025-09-26 20:13:35 | WARNING | service.searchService | ⚠️ [SearchService] SQL 필터링 결과 없음 - 전체 DB에서 벡터 검색 실행
2025-09-26 20:13:35 | INFO | service.searchService | 🔍 [SearchService] 전체 DB에서 벡터 데이터 조회
2025-09-26 20:13:35 | INFO | service.searchService | 📊 [SearchService] 전체 DB 조회 결과: 448개 강의
2025-09-26 20:13:35 | INFO | service.searchService | 📊 [SearchService] 전체 DB 검색: 448개 강의
2025-09-26 20:13:35 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 시작: 448개 강의
2025-09-26 20:13:37 | INFO | service.searchService | ✅ [SearchService] 유효한 벡터: 448개
2025-09-26 20:13:37 | INFO | service.searchService | 🔧 [SearchService] 벡터 배열 생성: shape=(448, 1536)
2025-09-26 20:13:37 | INFO | service.searchService | 🔧 [SearchService] FAISS 인덱스 생성 완료: dimension=1536
2025-09-26 20:13:37 | INFO | service.searchService | 🔧 [SearchService] 쿼리 임베딩 생성 시작: '테스트'
2025-09-26 20:13:37 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-26 20:13:37 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 생성 완료: shape=(1536,)
2025-09-26 20:13:37 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 정규화 완료: shape=(1, 1536)
2025-09-26 20:13:37 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 시작: search_count=1
2025-09-26 20:13:37 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 완료: scores=[0.0731496], indices=[123]
2025-09-26 20:13:37 | INFO | service.searchService | 🔧 [SearchService] 결과 1: 컴퓨터네트워크, score=0.0731
2025-09-26 20:13:37 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 완료: 1개 결과
2025-09-26 20:13:37 | INFO | service.searchService | ✅ [SearchService] 검색 완료: 1개 결과
2025-09-26 20:13:37 | INFO | controller.searchController | ✅ [SQL+Vector] 검색 완료:
2025-09-26 20:13:37 | INFO | controller.searchController |   - 처리 시간: 3.316초
2025-09-26 20:13:37 | INFO | controller.searchController |   - 결과 개수: 1
2025-09-26 20:13:37 | INFO | controller.searchController | 📋 [SQL+Vector] 검색 결과:
2025-09-26 20:13:37 | INFO | controller.searchController |   1. 컴퓨터네트워크 (전자공학부) - 유사도: 0.073
2025-09-26 20:17:17 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-26 20:17:17 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-26 20:17:17 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-26 20:19:43 | INFO | controller.searchController | 🎯 [SQL+Vector] SQL 필터링 검색 시작:
2025-09-26 20:19:43 | INFO | controller.searchController |   - 쿼리: '테스트'
2025-09-26 20:19:43 | INFO | controller.searchController |   - 요청 개수: 1
2025-09-26 20:19:43 | INFO | controller.searchController |   - 시작 시간: 20:19:43.868
2025-09-26 20:19:43 | INFO | service.searchService | 🚀 [SearchService] 검색 시작: '테스트'
2025-09-26 20:19:43 | INFO | service.queryService | 🔍 [QueryService] SQL 쿼리 생성 시작: '테스트'
2025-09-26 20:19:45 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 20:19:45 | INFO | service.queryService | 📝 [QueryService] LLM 응답: ```json
{
  "sql_query": null,
  "reasoning": "주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함"
}
```
2025-09-26 20:19:45 | INFO | util.utils | ℹ️ [SQL필터] SQL 필터링 불필요
2025-09-26 20:19:45 | INFO | util.utils | 💭 [SQL필터] 이유: 주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함
2025-09-26 20:19:45 | INFO | service.queryService | ℹ️ [QueryService] SQL 필터링 불필요
2025-09-26 20:19:45 | WARNING | service.searchService | ⚠️ [SearchService] SQL 필터링 결과 없음 - 전체 DB에서 벡터 검색 실행
2025-09-26 20:19:45 | INFO | service.searchService | 🔍 [SearchService] 전체 DB에서 벡터 데이터 조회
2025-09-26 20:19:45 | INFO | service.searchService | 📊 [SearchService] 전체 DB 조회 결과: 448개 강의
2025-09-26 20:19:45 | INFO | service.searchService | 📊 [SearchService] 전체 DB 검색: 448개 강의
2025-09-26 20:19:45 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 시작: 448개 강의
2025-09-26 20:19:46 | INFO | service.searchService | ✅ [SearchService] 유효한 벡터: 448개
2025-09-26 20:19:46 | INFO | service.searchService | 🔧 [SearchService] 벡터 배열 생성: shape=(448, 1536)
2025-09-26 20:19:46 | INFO | service.searchService | 🔧 [SearchService] FAISS 인덱스 생성 완료: dimension=1536
2025-09-26 20:19:46 | INFO | service.searchService | 🔧 [SearchService] 쿼리 임베딩 생성 시작: '테스트'
2025-09-26 20:19:47 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-26 20:19:47 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 생성 완료: shape=(1536,)
2025-09-26 20:19:47 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 정규화 완료: shape=(1, 1536)
2025-09-26 20:19:47 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 시작: search_count=1
2025-09-26 20:19:47 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 완료: scores=[0.07314133], indices=[123]
2025-09-26 20:19:47 | INFO | service.searchService | 🔧 [SearchService] 결과 1: 컴퓨터네트워크, score=0.0731
2025-09-26 20:19:47 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 완료: 1개 결과
2025-09-26 20:19:47 | INFO | service.searchService | ✅ [SearchService] 검색 완료: 1개 결과
2025-09-26 20:19:47 | INFO | controller.searchController | ✅ [SQL+Vector] 검색 완료:
2025-09-26 20:19:47 | INFO | controller.searchController |   - 처리 시간: 3.398초
2025-09-26 20:19:47 | INFO | controller.searchController |   - 결과 개수: 1
2025-09-26 20:19:47 | INFO | controller.searchController | 📋 [SQL+Vector] 검색 결과:
2025-09-26 20:19:47 | INFO | controller.searchController |   1. 컴퓨터네트워크 (전자공학부) - 유사도: 0.073
2025-09-26 20:19:47 | INFO | controller.searchController | 🎯 [SQL+Vector] SQL 필터링 검색 시작:
2025-09-26 20:19:47 | INFO | controller.searchController |   - 쿼리: '테스트'
2025-09-26 20:19:47 | INFO | controller.searchController |   - 요청 개수: 1
2025-09-26 20:19:47 | INFO | controller.searchController |   - 시작 시간: 20:19:47.267
2025-09-26 20:19:47 | INFO | service.searchService | 🚀 [SearchService] 검색 시작: '테스트'
2025-09-26 20:19:47 | INFO | service.queryService | 🔍 [QueryService] SQL 쿼리 생성 시작: '테스트'
2025-09-26 20:19:48 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 20:19:48 | INFO | service.queryService | 📝 [QueryService] LLM 응답: ```json
{
  "sql_query": null,
  "reasoning": "주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함"
}
```
2025-09-26 20:19:48 | INFO | util.utils | ℹ️ [SQL필터] SQL 필터링 불필요
2025-09-26 20:19:48 | INFO | util.utils | 💭 [SQL필터] 이유: 주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함
2025-09-26 20:19:48 | INFO | service.queryService | ℹ️ [QueryService] SQL 필터링 불필요
2025-09-26 20:19:48 | WARNING | service.searchService | ⚠️ [SearchService] SQL 필터링 결과 없음 - 전체 DB에서 벡터 검색 실행
2025-09-26 20:19:48 | INFO | service.searchService | 🔍 [SearchService] 전체 DB에서 벡터 데이터 조회
2025-09-26 20:19:48 | INFO | service.searchService | 📊 [SearchService] 전체 DB 조회 결과: 448개 강의
2025-09-26 20:19:48 | INFO | service.searchService | 📊 [SearchService] 전체 DB 검색: 448개 강의
2025-09-26 20:19:48 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 시작: 448개 강의
2025-09-26 20:19:49 | INFO | service.searchService | ✅ [SearchService] 유효한 벡터: 448개
2025-09-26 20:19:50 | INFO | service.searchService | 🔧 [SearchService] 벡터 배열 생성: shape=(448, 1536)
2025-09-26 20:19:50 | INFO | service.searchService | 🔧 [SearchService] FAISS 인덱스 생성 완료: dimension=1536
2025-09-26 20:19:50 | INFO | service.searchService | 🔧 [SearchService] 쿼리 임베딩 생성 시작: '테스트'
2025-09-26 20:19:50 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-26 20:19:50 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 생성 완료: shape=(1536,)
2025-09-26 20:19:50 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 정규화 완료: shape=(1, 1536)
2025-09-26 20:19:50 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 시작: search_count=1
2025-09-26 20:19:50 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 완료: scores=[0.0731496], indices=[123]
2025-09-26 20:19:50 | INFO | service.searchService | 🔧 [SearchService] 결과 1: 컴퓨터네트워크, score=0.0731
2025-09-26 20:19:50 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 완료: 1개 결과
2025-09-26 20:19:50 | INFO | service.searchService | ✅ [SearchService] 검색 완료: 1개 결과
2025-09-26 20:19:50 | INFO | controller.searchController | ✅ [SQL+Vector] 검색 완료:
2025-09-26 20:19:50 | INFO | controller.searchController |   - 처리 시간: 3.617초
2025-09-26 20:19:50 | INFO | controller.searchController |   - 결과 개수: 1
2025-09-26 20:19:50 | INFO | controller.searchController | 📋 [SQL+Vector] 검색 결과:
2025-09-26 20:19:50 | INFO | controller.searchController |   1. 컴퓨터네트워크 (전자공학부) - 유사도: 0.073
2025-09-26 20:22:01 | INFO | controller.searchController | 🎯 [SQL+Vector] SQL 필터링 검색 시작:
2025-09-26 20:22:01 | INFO | controller.searchController |   - 쿼리: '테스트'
2025-09-26 20:22:01 | INFO | controller.searchController |   - 요청 개수: 1
2025-09-26 20:22:01 | INFO | controller.searchController |   - 시작 시간: 20:22:01.637
2025-09-26 20:22:01 | INFO | service.searchService | 🚀 [SearchService] 검색 시작: '테스트'
2025-09-26 20:22:01 | INFO | service.queryService | 🔍 [QueryService] SQL 쿼리 생성 시작: '테스트'
2025-09-26 20:22:02 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 20:22:02 | INFO | service.queryService | 📝 [QueryService] LLM 응답: ```json
{
  "sql_query": null,
  "reasoning": "주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함"
}
```
2025-09-26 20:22:02 | INFO | util.utils | ℹ️ [SQL필터] SQL 필터링 불필요
2025-09-26 20:22:02 | INFO | util.utils | 💭 [SQL필터] 이유: 주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함
2025-09-26 20:22:02 | INFO | service.queryService | ℹ️ [QueryService] SQL 필터링 불필요
2025-09-26 20:22:02 | WARNING | service.searchService | ⚠️ [SearchService] SQL 필터링 결과 없음 - 전체 DB에서 벡터 검색 실행
2025-09-26 20:22:02 | INFO | service.searchService | 🔍 [SearchService] 전체 DB에서 벡터 데이터 조회
2025-09-26 20:22:03 | INFO | service.searchService | 📊 [SearchService] 전체 DB 조회 결과: 448개 강의
2025-09-26 20:22:03 | INFO | service.searchService | 📊 [SearchService] 전체 DB 검색: 448개 강의
2025-09-26 20:22:03 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 시작: 448개 강의
2025-09-26 20:22:04 | INFO | service.searchService | ✅ [SearchService] 유효한 벡터: 448개
2025-09-26 20:22:04 | INFO | service.searchService | 🔧 [SearchService] 벡터 배열 생성: shape=(448, 1536)
2025-09-26 20:22:04 | INFO | service.searchService | 🔧 [SearchService] FAISS 인덱스 생성 완료: dimension=1536
2025-09-26 20:22:04 | INFO | service.searchService | 🔧 [SearchService] 쿼리 임베딩 생성 시작: '테스트'
2025-09-26 20:22:04 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-26 20:22:04 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 생성 완료: shape=(1536,)
2025-09-26 20:22:04 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 정규화 완료: shape=(1, 1536)
2025-09-26 20:22:04 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 시작: search_count=1
2025-09-26 20:22:04 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 완료: scores=[0.0731496], indices=[123]
2025-09-26 20:22:04 | INFO | service.searchService | 🔧 [SearchService] 결과 1: 컴퓨터네트워크, score=0.0731
2025-09-26 20:22:04 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 완료: 1개 결과
2025-09-26 20:22:04 | INFO | service.searchService | ✅ [SearchService] 검색 완료: 1개 결과
2025-09-26 20:22:04 | INFO | controller.searchController | ✅ [SQL+Vector] 검색 완료:
2025-09-26 20:22:04 | INFO | controller.searchController |   - 처리 시간: 3.275초
2025-09-26 20:22:04 | INFO | controller.searchController |   - 결과 개수: 1
2025-09-26 20:22:04 | INFO | controller.searchController | 📋 [SQL+Vector] 검색 결과:
2025-09-26 20:22:04 | INFO | controller.searchController |   1. 컴퓨터네트워크 (전자공학부) - 유사도: 0.073
2025-09-26 20:22:04 | INFO | controller.searchController | 🎯 [SQL+Vector] SQL 필터링 검색 시작:
2025-09-26 20:22:04 | INFO | controller.searchController |   - 쿼리: '컴공에서 인공지능관련 수업을 찾아줘

[확장정보] 배경정보: Looking for courses related to artificial intelligence in the Computer Science department. | 관련키워드: 인공지능, AI, 컴퓨터공학, 머신러닝, 딥러닝, 데이터과학'
2025-09-26 20:22:04 | INFO | controller.searchController |   - 요청 개수: 30
2025-09-26 20:22:04 | INFO | controller.searchController |   - 시작 시간: 20:22:04.915
2025-09-26 20:22:04 | INFO | service.searchService | 🚀 [SearchService] 검색 시작: '컴공에서 인공지능관련 수업을 찾아줘

[확장정보] 배경정보: Looking for courses related to artificial intelligence in the Computer Science department. | 관련키워드: 인공지능, AI, 컴퓨터공학, 머신러닝, 딥러닝, 데이터과학'
2025-09-26 20:22:04 | INFO | service.queryService | 🔍 [QueryService] SQL 쿼리 생성 시작: '컴공에서 인공지능관련 수업을 찾아줘

[확장정보] 배경정보: Looking for courses related to artificial intelligence in the Computer Science department. | 관련키워드: 인공지능, AI, 컴퓨터공학, 머신러닝, 딥러닝, 데이터과학'
2025-09-26 20:22:07 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 20:22:07 | INFO | service.queryService | 📝 [QueryService] LLM 응답: ```json
{
  "sql_query": "SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')",
  "reasoning": "학과(컴공→컴퓨터) 필터링만 적용하고, 인공지능 관련 주제는 벡터 검색에서 처리"
}
```
2025-09-26 20:22:07 | INFO | util.utils | ✅ [SQL필터] SQL 쿼리 생성 완료
2025-09-26 20:22:07 | INFO | util.utils | 📋 [SQL필터] 생성된 쿼리: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')
2025-09-26 20:22:07 | INFO | util.utils | 💭 [SQL필터] 생성 이유: 학과(컴공→컴퓨터) 필터링만 적용하고, 인공지능 관련 주제는 벡터 검색에서 처리
2025-09-26 20:22:07 | INFO | service.queryService | 🔍 [QueryService] SQL 실행: 
                SELECT id, name, department_full_name, department, professor, credits,
                       schedule, location, delivery_mode, gpt_description, vector
                FROM jbnu_class_gpt
                WHERE id IN (
                    SELECT DISTINCT id FROM (SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')) as filtered
                )
                
2025-09-26 20:22:07 | INFO | service.queryService | 📊 [QueryService] 필터링 결과: 82개 강의
2025-09-26 20:22:07 | INFO | service.queryService |    #1: ID=21, 과목명=인간-컴퓨터상호작용, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #2: ID=63, 과목명=게임및혼합현실, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #3: ID=191, 과목명=인간-컴퓨터상호작용, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #4: ID=240, 과목명=컴퓨터비전, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #5: ID=280, 과목명=게임및혼합현실, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #6: ID=506, 과목명=컴퓨터논리및논술론, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #7: ID=548, 과목명=컴퓨터비전, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #8: ID=811, 과목명=컴퓨터논리및논술론, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #9: ID=924, 과목명=프로그래밍언어론, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #10: ID=950, 과목명=자료구조, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #11: ID=1001, 과목명=인공지능, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #12: ID=1037, 과목명=리눅스프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #13: ID=1217, 과목명=프로그래밍언어론, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #14: ID=1242, 과목명=자료구조, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #15: ID=1291, 과목명=인공지능, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #16: ID=1326, 과목명=리눅스프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #17: ID=1402, 과목명=운영체제, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #18: ID=1623, 과목명=데이터베이스, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #19: ID=1668, 과목명=운영체제, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #20: ID=1863, 과목명=산학실전캡스톤 2, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #21: ID=1881, 과목명=데이터베이스, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #22: ID=1994, 과목명=수치해석및최적화, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #23: ID=2113, 과목명=산학실전캡스톤 2, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #24: ID=2115, 과목명=오픈소스소프트웨어개발, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #25: ID=2163, 과목명=자연어처리, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #26: ID=2165, 과목명=논리설계, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #27: ID=2211, 과목명=컴퓨터네트워크, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #28: ID=2230, 과목명=수치해석및최적화, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #29: ID=2330, 과목명=오픈소스소프트웨어개발, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #30: ID=2377, 과목명=자연어처리, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #31: ID=2379, 과목명=논리설계, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #32: ID=2405, 과목명=암호론, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #33: ID=2419, 과목명=컴퓨터네트워크, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #34: ID=2561, 과목명=컴파일러, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #35: ID=2593, 과목명=암호론, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #36: ID=2743, 과목명=컴파일러, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #37: ID=2760, 과목명=선형대수학, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #38: ID=2935, 과목명=선형대수학, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #39: ID=3259, 과목명=임베디드시스템, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #40: ID=3369, 과목명=객체지향프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #41: ID=3433, 과목명=컴퓨터공학총론, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #42: ID=3575, 과목명=이산수학, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #43: ID=3688, 과목명=시스템보안, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #44: ID=3737, 과목명=웹서비스설계, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #45: ID=3800, 과목명=모바일프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #46: ID=3929, 과목명=컴퓨터구조, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #47: ID=4115, 과목명=이산수학, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #48: ID=4132, 과목명=확률및통계, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #49: ID=4204, 과목명=정보검색, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #50: ID=4249, 과목명=소프트웨어공학, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #51: ID=4331, 과목명=컴퓨터공학총론, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #52: ID=4358, 과목명=모바일프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #53: ID=4425, 과목명=데이터마이닝, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #54: ID=4469, 과목명=확률및통계, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #55: ID=4544, 과목명=정보검색, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #56: ID=4676, 과목명=컴퓨터공학총론, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #57: ID=4690, 과목명=웹서비스설계, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #58: ID=4704, 과목명=모바일프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #59: ID=4709, 과목명=산학실전캡스톤 3, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #60: ID=4779, 과목명=데이터마이닝, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #61: ID=5036, 과목명=웹서비스설계, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #62: ID=5056, 과목명=산학실전캡스톤 3, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #63: ID=5216, 과목명=디지털시스템설계, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #64: ID=5242, 과목명=산학실전캡스톤 1, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #65: ID=5258, 과목명=클라우드컴퓨팅, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #66: ID=5351, 과목명=C++프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #67: ID=5551, 과목명=디지털시스템설계, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #68: ID=5576, 과목명=산학실전캡스톤 1, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #69: ID=5592, 과목명=클라우드컴퓨팅, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #70: ID=5631, 과목명=창업특강, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #71: ID=5686, 과목명=C++프로그래밍, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #72: ID=5807, 과목명=알고리즘, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #73: ID=5963, 과목명=창업특강, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #74: ID=6131, 과목명=시스템보안, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #75: ID=6138, 과목명=알고리즘, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #76: ID=6182, 과목명=데이터통신, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #77: ID=6459, 과목명=시스템보안, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #78: ID=6464, 과목명=컴퓨터그래픽스, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #79: ID=6481, 과목명=기계학습, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #80: ID=6513, 과목명=데이터통신, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #81: ID=6808, 과목명=컴퓨터그래픽스, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.queryService |    #82: ID=6826, 과목명=기계학습, 학과=컴퓨터인공지능학부
2025-09-26 20:22:07 | INFO | service.searchService | 📊 [SearchService] SQL 필터링 결과: 82개 강의
2025-09-26 20:22:07 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 시작: 82개 강의
2025-09-26 20:22:07 | INFO | service.searchService | ✅ [SearchService] 유효한 벡터: 5개
2025-09-26 20:22:07 | INFO | service.searchService | 🔧 [SearchService] 벡터 배열 생성: shape=(5, 1536)
2025-09-26 20:22:07 | INFO | service.searchService | 🔧 [SearchService] FAISS 인덱스 생성 완료: dimension=1536
2025-09-26 20:22:07 | INFO | service.searchService | 🔧 [SearchService] 쿼리 임베딩 생성 시작: '컴공에서 인공지능관련 수업을 찾아줘

[확장정보] 배경정보: Looking for courses related to artificial intelligence in the Computer Science department. | 관련키워드: 인공지능, AI, 컴퓨터공학, 머신러닝, 딥러닝, 데이터과학'
2025-09-26 20:22:07 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-26 20:22:07 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 생성 완료: shape=(1536,)
2025-09-26 20:22:07 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 정규화 완료: shape=(1, 1536)
2025-09-26 20:22:07 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 시작: search_count=5
2025-09-26 20:22:07 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 완료: scores=[0.05810902 0.04905596 0.02943347], indices=[4 1 3]
2025-09-26 20:22:07 | INFO | service.searchService | 🔧 [SearchService] 결과 1: 모바일프로그래밍, score=0.0581
2025-09-26 20:22:07 | INFO | service.searchService | 🔧 [SearchService] 결과 2: 이산수학, score=0.0491
2025-09-26 20:22:07 | INFO | service.searchService | 🔧 [SearchService] 결과 3: 웹서비스설계, score=0.0294
2025-09-26 20:22:07 | INFO | service.searchService | 🔧 [SearchService] 결과 4: 컴퓨터공학총론, score=0.0291
2025-09-26 20:22:07 | INFO | service.searchService | 🔧 [SearchService] 결과 5: 시스템보안, score=0.0168
2025-09-26 20:22:07 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 완료: 5개 결과
2025-09-26 20:22:07 | INFO | service.searchService | ✅ [SearchService] 검색 완료: 5개 결과
2025-09-26 20:22:07 | INFO | controller.searchController | ✅ [SQL+Vector] 검색 완료:
2025-09-26 20:22:07 | INFO | controller.searchController |   - 처리 시간: 2.614초
2025-09-26 20:22:07 | INFO | controller.searchController |   - 결과 개수: 5
2025-09-26 20:22:07 | INFO | controller.searchController | 📋 [SQL+Vector] 검색 결과:
2025-09-26 20:22:07 | INFO | controller.searchController |   1. 모바일프로그래밍 (컴퓨터인공지능학부) - 유사도: 0.058
2025-09-26 20:22:07 | INFO | controller.searchController |   2. 이산수학 (컴퓨터인공지능학부) - 유사도: 0.049
2025-09-26 20:22:07 | INFO | controller.searchController |   3. 웹서비스설계 (컴퓨터인공지능학부) - 유사도: 0.029
2025-09-26 20:22:07 | INFO | controller.searchController |   ... 총 5개 결과
2025-09-26 20:25:52 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-26 20:25:52 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-26 20:25:52 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-26 20:25:54 | INFO | controller.searchController | 🎯 [SQL+Vector] SQL 필터링 검색 시작:
2025-09-26 20:25:54 | INFO | controller.searchController |   - 쿼리: '테스트'
2025-09-26 20:25:54 | INFO | controller.searchController |   - 요청 개수: 1
2025-09-26 20:25:54 | INFO | controller.searchController |   - 시작 시간: 20:25:54.291
2025-09-26 20:25:54 | INFO | service.searchService | 🚀 [SearchService] 검색 시작: '테스트'
2025-09-26 20:25:54 | INFO | service.queryService | 🔍 [QueryService] SQL 쿼리 생성 시작: '테스트'
2025-09-26 20:25:55 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 20:25:55 | INFO | service.queryService | 📝 [QueryService] LLM 응답: ```json
{
  "sql_query": null,
  "reasoning": "주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함"
}
```
2025-09-26 20:25:55 | INFO | util.utils | ℹ️ [SQL필터] SQL 필터링 불필요
2025-09-26 20:25:55 | INFO | util.utils | 💭 [SQL필터] 이유: 주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함
2025-09-26 20:25:55 | INFO | service.queryService | ℹ️ [QueryService] SQL 필터링 불필요
2025-09-26 20:25:55 | WARNING | service.searchService | ⚠️ [SearchService] SQL 필터링 결과 없음 - 전체 DB에서 벡터 검색 실행
2025-09-26 20:25:55 | INFO | service.searchService | 🔍 [SearchService] 전체 DB에서 벡터 데이터 조회
2025-09-26 20:25:56 | INFO | service.searchService | 📊 [SearchService] 전체 DB 조회 결과: 1000개 강의
2025-09-26 20:25:56 | INFO | service.searchService | 📊 [SearchService] 전체 DB 검색: 1000개 강의
2025-09-26 20:25:56 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 시작: 1000개 강의
2025-09-26 20:25:59 | INFO | service.searchService | ✅ [SearchService] 유효한 벡터: 1000개
2025-09-26 20:25:59 | INFO | service.searchService | 🔧 [SearchService] 벡터 배열 생성: shape=(1000, 1536)
2025-09-26 20:25:59 | INFO | service.searchService | 🔧 [SearchService] FAISS 인덱스 생성 완료: dimension=1536
2025-09-26 20:25:59 | INFO | service.searchService | 🔧 [SearchService] 쿼리 임베딩 생성 시작: '테스트'
2025-09-26 20:25:59 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-26 20:25:59 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 생성 완료: shape=(1536,)
2025-09-26 20:25:59 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 정규화 완료: shape=(1, 1536)
2025-09-26 20:25:59 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 시작: search_count=1
2025-09-26 20:25:59 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 완료: scores=[0.08421394], indices=[110]
2025-09-26 20:25:59 | INFO | service.searchService | 🔧 [SearchService] 결과 1: 응용역학, score=0.0842
2025-09-26 20:25:59 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 완료: 1개 결과
2025-09-26 20:25:59 | INFO | service.searchService | ✅ [SearchService] 검색 완료: 1개 결과
2025-09-26 20:25:59 | INFO | controller.searchController | ✅ [SQL+Vector] 검색 완료:
2025-09-26 20:25:59 | INFO | controller.searchController |   - 처리 시간: 5.195초
2025-09-26 20:25:59 | INFO | controller.searchController |   - 결과 개수: 1
2025-09-26 20:25:59 | INFO | controller.searchController | 📋 [SQL+Vector] 검색 결과:
2025-09-26 20:25:59 | INFO | controller.searchController |   1. 응용역학 (토목환경자원에너지공학부(토목공학)) - 유사도: 0.084
2025-09-26 20:25:59 | INFO | controller.searchController | 🎯 [SQL+Vector] SQL 필터링 검색 시작:
2025-09-26 20:25:59 | INFO | controller.searchController |   - 쿼리: '테스트'
2025-09-26 20:25:59 | INFO | controller.searchController |   - 요청 개수: 1
2025-09-26 20:25:59 | INFO | controller.searchController |   - 시작 시간: 20:25:59.487
2025-09-26 20:25:59 | INFO | service.searchService | 🚀 [SearchService] 검색 시작: '테스트'
2025-09-26 20:25:59 | INFO | service.queryService | 🔍 [QueryService] SQL 쿼리 생성 시작: '테스트'
2025-09-26 20:26:01 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-26 20:26:01 | INFO | service.queryService | 📝 [QueryService] LLM 응답: ```json
{
  "sql_query": null,
  "reasoning": "주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함"
}
```
2025-09-26 20:26:01 | INFO | util.utils | ℹ️ [SQL필터] SQL 필터링 불필요
2025-09-26 20:26:01 | INFO | util.utils | 💭 [SQL필터] 이유: 주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함
2025-09-26 20:26:01 | INFO | service.queryService | ℹ️ [QueryService] SQL 필터링 불필요
2025-09-26 20:26:01 | WARNING | service.searchService | ⚠️ [SearchService] SQL 필터링 결과 없음 - 전체 DB에서 벡터 검색 실행
2025-09-26 20:26:01 | INFO | service.searchService | 🔍 [SearchService] 전체 DB에서 벡터 데이터 조회
2025-09-26 20:26:01 | INFO | service.searchService | 📊 [SearchService] 전체 DB 조회 결과: 1000개 강의
2025-09-26 20:26:01 | INFO | service.searchService | 📊 [SearchService] 전체 DB 검색: 1000개 강의
2025-09-26 20:26:01 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 시작: 1000개 강의
2025-09-26 20:26:04 | INFO | service.searchService | ✅ [SearchService] 유효한 벡터: 1000개
2025-09-26 20:26:04 | INFO | service.searchService | 🔧 [SearchService] 벡터 배열 생성: shape=(1000, 1536)
2025-09-26 20:26:04 | INFO | service.searchService | 🔧 [SearchService] FAISS 인덱스 생성 완료: dimension=1536
2025-09-26 20:26:04 | INFO | service.searchService | 🔧 [SearchService] 쿼리 임베딩 생성 시작: '테스트'
2025-09-26 20:26:04 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-26 20:26:04 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 생성 완료: shape=(1536,)
2025-09-26 20:26:04 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 정규화 완료: shape=(1, 1536)
2025-09-26 20:26:04 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 시작: search_count=1
2025-09-26 20:26:04 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 완료: scores=[0.08421394], indices=[110]
2025-09-26 20:26:04 | INFO | service.searchService | 🔧 [SearchService] 결과 1: 응용역학, score=0.0842
2025-09-26 20:26:04 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 완료: 1개 결과
2025-09-26 20:26:04 | INFO | service.searchService | ✅ [SearchService] 검색 완료: 1개 결과
2025-09-26 20:26:04 | INFO | controller.searchController | ✅ [SQL+Vector] 검색 완료:
2025-09-26 20:26:04 | INFO | controller.searchController |   - 처리 시간: 5.459초
2025-09-26 20:26:04 | INFO | controller.searchController |   - 결과 개수: 1
2025-09-26 20:26:04 | INFO | controller.searchController | 📋 [SQL+Vector] 검색 결과:
2025-09-26 20:26:04 | INFO | controller.searchController |   1. 응용역학 (토목환경자원에너지공학부(토목공학)) - 유사도: 0.084
2025-09-26 20:30:02 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-26 20:30:02 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-26 20:30:02 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-26 20:41:16 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-26 20:41:16 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-26 20:41:16 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-27 02:30:43 | INFO | controller.searchController | 🎯 [SQL+Vector] SQL 필터링 검색 시작:
2025-09-27 02:30:43 | INFO | controller.searchController |   - 쿼리: '테스트'
2025-09-27 02:30:43 | INFO | controller.searchController |   - 요청 개수: 1
2025-09-27 02:30:43 | INFO | controller.searchController |   - 시작 시간: 02:30:43.053
2025-09-27 02:30:43 | INFO | service.searchService | 🚀 [SearchService] 검색 시작: '테스트'
2025-09-27 02:30:43 | INFO | service.queryService | 🔍 [QueryService] SQL 쿼리 생성 시작: '테스트'
2025-09-27 02:30:45 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-27 02:30:45 | INFO | service.queryService | 📝 [QueryService] LLM 응답: ```json
{
  "sql_query": null,
  "reasoning": "주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함"
}
```
2025-09-27 02:30:45 | INFO | util.utils | ℹ️ [SQL필터] SQL 필터링 불필요
2025-09-27 02:30:45 | INFO | util.utils | 💭 [SQL필터] 이유: 주제만 있고 학과나 교수 정보 없음. 벡터 검색으로 처리하는 것이 더 정확함
2025-09-27 02:30:45 | INFO | service.queryService | ℹ️ [QueryService] SQL 필터링 불필요
2025-09-27 02:30:45 | WARNING | service.searchService | ⚠️ [SearchService] SQL 필터링 결과 없음 - 전체 DB에서 벡터 검색 실행
2025-09-27 02:30:45 | INFO | service.searchService | 🔍 [SearchService] 전체 DB에서 벡터 데이터 조회
2025-09-27 02:30:45 | INFO | service.searchService | 📊 [SearchService] 전체 DB 조회 결과: 448개 강의
2025-09-27 02:30:45 | INFO | service.searchService | 📊 [SearchService] 전체 DB 검색: 448개 강의
2025-09-27 02:30:45 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 시작: 448개 강의
2025-09-27 02:30:47 | INFO | service.searchService | ✅ [SearchService] 유효한 벡터: 448개
2025-09-27 02:30:47 | INFO | service.searchService | 🔧 [SearchService] 벡터 배열 생성: shape=(448, 1536)
2025-09-27 02:30:47 | INFO | service.searchService | 🔧 [SearchService] FAISS 인덱스 생성 완료: dimension=1536
2025-09-27 02:30:47 | INFO | service.searchService | 🔧 [SearchService] 쿼리 임베딩 생성 시작: '테스트'
2025-09-27 02:30:47 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-27 02:30:47 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 생성 완료: shape=(1536,)
2025-09-27 02:30:47 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 정규화 완료: shape=(1, 1536)
2025-09-27 02:30:47 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 시작: search_count=1
2025-09-27 02:30:47 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 완료: scores=[0.0731496], indices=[123]
2025-09-27 02:30:47 | INFO | service.searchService | 🔧 [SearchService] 결과 1: 컴퓨터네트워크, score=0.0731
2025-09-27 02:30:47 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 완료: 1개 결과
2025-09-27 02:30:47 | INFO | service.searchService | ✅ [SearchService] 검색 완료: 1개 결과
2025-09-27 02:30:47 | INFO | controller.searchController | ✅ [SQL+Vector] 검색 완료:
2025-09-27 02:30:47 | INFO | controller.searchController |   - 처리 시간: 4.763초
2025-09-27 02:30:47 | INFO | controller.searchController |   - 결과 개수: 1
2025-09-27 02:30:47 | INFO | controller.searchController | 📋 [SQL+Vector] 검색 결과:
2025-09-27 02:30:47 | INFO | controller.searchController |   1. 컴퓨터네트워크 (전자공학부) - 유사도: 0.073
2025-09-27 02:30:47 | INFO | controller.searchController | 🎯 [SQL+Vector] SQL 필터링 검색 시작:
2025-09-27 02:30:47 | INFO | controller.searchController |   - 쿼리: '컴공에서 인공지능관련 수업을 찾아줘

[확장정보] 배경정보: Looking for courses related to artificial intelligence offered in the Computer Science department. | 관련키워드: 인공지능, AI, 컴퓨터공학, 머신러닝, 딥러닝, 프로그래밍'
2025-09-27 02:30:47 | INFO | controller.searchController |   - 요청 개수: 30
2025-09-27 02:30:47 | INFO | controller.searchController |   - 시작 시간: 02:30:47.820
2025-09-27 02:30:47 | INFO | service.searchService | 🚀 [SearchService] 검색 시작: '컴공에서 인공지능관련 수업을 찾아줘

[확장정보] 배경정보: Looking for courses related to artificial intelligence offered in the Computer Science department. | 관련키워드: 인공지능, AI, 컴퓨터공학, 머신러닝, 딥러닝, 프로그래밍'
2025-09-27 02:30:47 | INFO | service.queryService | 🔍 [QueryService] SQL 쿼리 생성 시작: '컴공에서 인공지능관련 수업을 찾아줘

[확장정보] 배경정보: Looking for courses related to artificial intelligence offered in the Computer Science department. | 관련키워드: 인공지능, AI, 컴퓨터공학, 머신러닝, 딥러닝, 프로그래밍'
2025-09-27 02:30:51 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-27 02:30:51 | INFO | service.queryService | 📝 [QueryService] LLM 응답: ```json
{
  "sql_query": "SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')",
  "reasoning": "학과(컴공→컴퓨터) 필터링만 적용하고, 인공지능 관련 주제는 벡터 검색에서 처리"
}
```
2025-09-27 02:30:51 | INFO | util.utils | ✅ [SQL필터] SQL 쿼리 생성 완료
2025-09-27 02:30:51 | INFO | util.utils | 📋 [SQL필터] 생성된 쿼리: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')
2025-09-27 02:30:51 | INFO | util.utils | 💭 [SQL필터] 생성 이유: 학과(컴공→컴퓨터) 필터링만 적용하고, 인공지능 관련 주제는 벡터 검색에서 처리
2025-09-27 02:30:51 | INFO | service.queryService | 🔍 [QueryService] SQL 실행: 
                SELECT id, name, department_full_name, department, professor, credits,
                       schedule, location, delivery_mode, gpt_description, vector
                FROM jbnu_class_gpt
                WHERE id IN (
                    SELECT DISTINCT id FROM (SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')) as filtered
                )
                
2025-09-27 02:30:51 | INFO | service.queryService | 📊 [QueryService] 필터링 결과: 82개 강의
2025-09-27 02:30:51 | INFO | service.queryService |    #1: ID=21, 과목명=인간-컴퓨터상호작용, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #2: ID=63, 과목명=게임및혼합현실, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #3: ID=191, 과목명=인간-컴퓨터상호작용, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #4: ID=240, 과목명=컴퓨터비전, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #5: ID=280, 과목명=게임및혼합현실, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #6: ID=506, 과목명=컴퓨터논리및논술론, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #7: ID=548, 과목명=컴퓨터비전, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #8: ID=811, 과목명=컴퓨터논리및논술론, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #9: ID=924, 과목명=프로그래밍언어론, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #10: ID=950, 과목명=자료구조, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #11: ID=1001, 과목명=인공지능, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #12: ID=1037, 과목명=리눅스프로그래밍, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #13: ID=1217, 과목명=프로그래밍언어론, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #14: ID=1242, 과목명=자료구조, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #15: ID=1291, 과목명=인공지능, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #16: ID=1326, 과목명=리눅스프로그래밍, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #17: ID=1402, 과목명=운영체제, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #18: ID=1623, 과목명=데이터베이스, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #19: ID=1668, 과목명=운영체제, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #20: ID=1863, 과목명=산학실전캡스톤 2, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #21: ID=1881, 과목명=데이터베이스, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #22: ID=1994, 과목명=수치해석및최적화, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #23: ID=2113, 과목명=산학실전캡스톤 2, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #24: ID=2115, 과목명=오픈소스소프트웨어개발, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #25: ID=2163, 과목명=자연어처리, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #26: ID=2165, 과목명=논리설계, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #27: ID=2211, 과목명=컴퓨터네트워크, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #28: ID=2230, 과목명=수치해석및최적화, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #29: ID=2330, 과목명=오픈소스소프트웨어개발, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #30: ID=2377, 과목명=자연어처리, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #31: ID=2379, 과목명=논리설계, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #32: ID=2405, 과목명=암호론, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #33: ID=2419, 과목명=컴퓨터네트워크, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #34: ID=2561, 과목명=컴파일러, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #35: ID=2593, 과목명=암호론, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #36: ID=2743, 과목명=컴파일러, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #37: ID=2760, 과목명=선형대수학, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #38: ID=2935, 과목명=선형대수학, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #39: ID=3259, 과목명=임베디드시스템, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #40: ID=3369, 과목명=객체지향프로그래밍, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #41: ID=3433, 과목명=컴퓨터공학총론, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #42: ID=3575, 과목명=이산수학, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #43: ID=3688, 과목명=시스템보안, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #44: ID=3737, 과목명=웹서비스설계, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #45: ID=3800, 과목명=모바일프로그래밍, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #46: ID=3929, 과목명=컴퓨터구조, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #47: ID=4115, 과목명=이산수학, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #48: ID=4132, 과목명=확률및통계, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #49: ID=4204, 과목명=정보검색, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #50: ID=4249, 과목명=소프트웨어공학, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #51: ID=4331, 과목명=컴퓨터공학총론, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #52: ID=4358, 과목명=모바일프로그래밍, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #53: ID=4425, 과목명=데이터마이닝, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #54: ID=4469, 과목명=확률및통계, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #55: ID=4544, 과목명=정보검색, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #56: ID=4676, 과목명=컴퓨터공학총론, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #57: ID=4690, 과목명=웹서비스설계, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #58: ID=4704, 과목명=모바일프로그래밍, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #59: ID=4709, 과목명=산학실전캡스톤 3, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #60: ID=4779, 과목명=데이터마이닝, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #61: ID=5036, 과목명=웹서비스설계, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #62: ID=5056, 과목명=산학실전캡스톤 3, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #63: ID=5216, 과목명=디지털시스템설계, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #64: ID=5242, 과목명=산학실전캡스톤 1, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #65: ID=5258, 과목명=클라우드컴퓨팅, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #66: ID=5351, 과목명=C++프로그래밍, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #67: ID=5551, 과목명=디지털시스템설계, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #68: ID=5576, 과목명=산학실전캡스톤 1, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #69: ID=5592, 과목명=클라우드컴퓨팅, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #70: ID=5631, 과목명=창업특강, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #71: ID=5686, 과목명=C++프로그래밍, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #72: ID=5807, 과목명=알고리즘, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #73: ID=5963, 과목명=창업특강, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #74: ID=6131, 과목명=시스템보안, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #75: ID=6138, 과목명=알고리즘, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #76: ID=6182, 과목명=데이터통신, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #77: ID=6459, 과목명=시스템보안, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #78: ID=6464, 과목명=컴퓨터그래픽스, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #79: ID=6481, 과목명=기계학습, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #80: ID=6513, 과목명=데이터통신, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #81: ID=6808, 과목명=컴퓨터그래픽스, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.queryService |    #82: ID=6826, 과목명=기계학습, 학과=컴퓨터인공지능학부
2025-09-27 02:30:51 | INFO | service.searchService | 📊 [SearchService] SQL 필터링 결과: 82개 강의
2025-09-27 02:30:51 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 시작: 82개 강의
2025-09-27 02:30:51 | INFO | service.searchService | ✅ [SearchService] 유효한 벡터: 5개
2025-09-27 02:30:51 | INFO | service.searchService | 🔧 [SearchService] 벡터 배열 생성: shape=(5, 1536)
2025-09-27 02:30:51 | INFO | service.searchService | 🔧 [SearchService] FAISS 인덱스 생성 완료: dimension=1536
2025-09-27 02:30:51 | INFO | service.searchService | 🔧 [SearchService] 쿼리 임베딩 생성 시작: '컴공에서 인공지능관련 수업을 찾아줘

[확장정보] 배경정보: Looking for courses related to artificial intelligence offered in the Computer Science department. | 관련키워드: 인공지능, AI, 컴퓨터공학, 머신러닝, 딥러닝, 프로그래밍'
2025-09-27 02:30:52 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-27 02:30:52 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 생성 완료: shape=(1536,)
2025-09-27 02:30:52 | INFO | service.searchService | 🔧 [SearchService] 쿼리 벡터 정규화 완료: shape=(1, 1536)
2025-09-27 02:30:52 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 시작: search_count=5
2025-09-27 02:30:52 | INFO | service.searchService | 🔧 [SearchService] FAISS 검색 완료: scores=[0.05859648 0.04932368 0.02954846], indices=[4 1 0]
2025-09-27 02:30:52 | INFO | service.searchService | 🔧 [SearchService] 결과 1: 모바일프로그래밍, score=0.0586
2025-09-27 02:30:52 | INFO | service.searchService | 🔧 [SearchService] 결과 2: 이산수학, score=0.0493
2025-09-27 02:30:52 | INFO | service.searchService | 🔧 [SearchService] 결과 3: 컴퓨터공학총론, score=0.0295
2025-09-27 02:30:52 | INFO | service.searchService | 🔧 [SearchService] 결과 4: 웹서비스설계, score=0.0250
2025-09-27 02:30:52 | INFO | service.searchService | 🔧 [SearchService] 결과 5: 시스템보안, score=0.0150
2025-09-27 02:30:52 | INFO | service.searchService | 🎯 [SearchService] 벡터 검색 완료: 5개 결과
2025-09-27 02:30:52 | INFO | service.searchService | ✅ [SearchService] 검색 완료: 5개 결과
2025-09-27 02:30:52 | INFO | controller.searchController | ✅ [SQL+Vector] 검색 완료:
2025-09-27 02:30:52 | INFO | controller.searchController |   - 처리 시간: 4.923초
2025-09-27 02:30:52 | INFO | controller.searchController |   - 결과 개수: 5
2025-09-27 02:30:52 | INFO | controller.searchController | 📋 [SQL+Vector] 검색 결과:
2025-09-27 02:30:52 | INFO | controller.searchController |   1. 모바일프로그래밍 (컴퓨터인공지능학부) - 유사도: 0.059
2025-09-27 02:30:52 | INFO | controller.searchController |   2. 이산수학 (컴퓨터인공지능학부) - 유사도: 0.049
2025-09-27 02:30:52 | INFO | controller.searchController |   3. 컴퓨터공학총론 (컴퓨터인공지능학부) - 유사도: 0.030
2025-09-27 02:30:52 | INFO | controller.searchController |   ... 총 5개 결과
2025-09-28 03:31:20 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 03:31:20 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 03:31:20 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 03:47:09 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 03:47:09 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 03:47:09 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 03:56:34 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 03:56:34 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 03:56:34 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 03:57:24 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 03:57:24 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 03:57:24 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 04:05:40 | INFO | service.searchService | 검색 시작: '안녕하세요 테스트입니다'
2025-09-28 04:05:41 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 04:05:41 | INFO | service.searchService | SQL 생성됨: None
2025-09-28 04:06:51 | INFO | service.searchService | 검색 시작: '컴퓨터공학과 커리큘럼 추천해주세요'
2025-09-28 04:06:53 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 04:06:53 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name
FROM jbnu_class_gpt c
WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')
2025-09-28 04:06:53 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 04:07:40 | INFO | service.searchService | 검색 시작: '컴퓨터공학과 추천해줘'
2025-09-28 04:07:42 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 04:07:42 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name
FROM jbnu_class_gpt c
WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')
2025-09-28 04:07:42 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 04:08:23 | INFO | service.searchService | 검색 시작: '컴퓨터공학과 커리큘럼 추천해주세요'
2025-09-28 04:08:24 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 04:08:24 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name
FROM jbnu_class_gpt c
WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')
2025-09-28 04:08:24 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 04:09:27 | INFO | service.searchService | 검색 시작: '컴퓨터공학과에서 들을 수 있는 과목을 추천해줘'
2025-09-28 04:09:29 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 04:09:29 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name
FROM jbnu_class_gpt c
WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')
2025-09-28 04:09:29 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 04:12:16 | INFO | service.searchService | 검색 시작: '컴퓨터공학과 과목 추천해주세요'
2025-09-28 04:12:18 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 04:12:18 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name
FROM jbnu_class_gpt c
WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')
2025-09-28 04:12:18 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 04:12:49 | INFO | service.searchService | 검색 시작: '융합 커리큘럼 설계해주세요'
2025-09-28 04:12:49 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 04:12:49 | INFO | service.searchService | SQL 생성됨: None
2025-09-28 04:16:02 | INFO | service.searchService | 검색 시작: '융합 커리큘럼 설계해주세요'
2025-09-28 04:16:03 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 04:16:03 | INFO | service.searchService | SQL 생성됨: None
2025-09-28 04:18:17 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 04:18:17 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 04:18:17 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 04:18:33 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 04:18:33 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 04:18:33 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 04:18:48 | INFO | service.searchService | 검색 시작: '안녕하세요'
2025-09-28 04:18:49 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 04:18:49 | WARNING | service.searchService | SQL 생성 실패, llm_agent로 재라우팅: 안녕하세요
2025-09-28 04:18:49 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 04:19:49 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 04:19:49 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 04:19:49 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 04:20:03 | INFO | service.searchService | 검색 시작: '오늘 날씨가 좋네요'
2025-09-28 04:20:04 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 04:20:04 | WARNING | service.searchService | SQL 생성 실패, llm_agent로 재라우팅: 오늘 날씨가 좋네요
2025-09-28 04:20:10 | INFO | service.searchService | llm_agent 재라우팅 성공
2025-09-28 04:20:10 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 04:20:38 | INFO | service.searchService | 검색 시작: '컴퓨터공학과 추천 과목'
2025-09-28 04:20:40 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 04:20:40 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name
FROM jbnu_class_gpt c
WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')
2025-09-28 04:20:40 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 04:24:41 | INFO | service.searchService | 검색 시작: '안녕하세요'
2025-09-28 04:24:42 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 04:24:42 | WARNING | service.searchService | SQL 생성 실패, llm_agent로 재라우팅: 안녕하세요
2025-09-28 04:24:47 | INFO | service.searchService | llm_agent 재라우팅 성공
2025-09-28 04:24:47 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 04:25:01 | INFO | service.searchService | 검색 시작: '융합 커리큘럼 설계해주세요'
2025-09-28 04:25:02 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 04:25:02 | WARNING | service.searchService | SQL 생성 실패, llm_agent로 재라우팅: 융합 커리큘럼 설계해주세요
2025-09-28 04:25:22 | INFO | service.searchService | llm_agent 재라우팅 성공
2025-09-28 04:25:22 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 04:26:28 | INFO | service.searchService | 검색 시작: '데이터베이스 관련 과목 추천해주세요'
2025-09-28 04:26:29 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 04:26:29 | WARNING | service.searchService | SQL 생성 실패, llm_agent로 재라우팅: 데이터베이스 관련 과목 추천해주세요
2025-09-28 04:26:59 | INFO | service.searchService | 검색 시작: '데이터베이스 관련 과목 추천해주세요'
2025-09-28 04:27:00 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 04:27:00 | WARNING | service.searchService | SQL 생성 실패, llm_agent로 재라우팅: 데이터베이스 관련 과목 추천해주세요
2025-09-28 04:27:30 | INFO | service.searchService | 검색 시작: '데이터베이스 관련 과목 추천해주세요'
2025-09-28 04:27:31 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 04:27:31 | WARNING | service.searchService | SQL 생성 실패, llm_agent로 재라우팅: 데이터베이스 관련 과목 추천해주세요
2025-09-28 04:28:01 | INFO | service.searchService | 검색 시작: '데이터베이스 관련 과목 추천해주세요'
2025-09-28 04:28:01 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 04:28:01 | WARNING | service.searchService | SQL 생성 실패, llm_agent로 재라우팅: 데이터베이스 관련 과목 추천해주세요
2025-09-28 04:28:10 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 04:28:10 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 04:28:10 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 04:28:35 | INFO | service.searchService | 검색 시작: '데이터베이스 관련 과목 추천해주세요'
2025-09-28 04:28:36 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 04:28:36 | WARNING | service.searchService | SQL 생성 실패, llm_agent로 재라우팅: 데이터베이스 관련 과목 추천해주세요
2025-09-28 04:28:47 | INFO | service.searchService | llm_agent 재라우팅 성공
2025-09-28 04:28:47 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 04:29:35 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 04:29:35 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 04:29:35 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 04:29:49 | INFO | service.searchService | 검색 시작: '데이터베이스 관련 과목'
2025-09-28 04:29:49 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 04:29:49 | WARNING | service.searchService | SQL 생성 실패, 빈 결과 반환: 데이터베이스 관련 과목
2025-09-28 04:29:49 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 04:34:51 | INFO | service.searchService | 검색 시작: '컴퓨터공학과 과목 추천해주세요'
2025-09-28 04:34:53 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 04:34:53 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name
FROM jbnu_class_gpt c
WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')
2025-09-28 04:34:53 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 04:48:28 | INFO | service.searchService | 검색 시작: '컴퓨터공학과 과목 추천해주세요'
2025-09-28 04:48:31 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 04:48:31 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name
FROM jbnu_class_gpt c
WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')
2025-09-28 04:48:31 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 20:26:36 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 20:26:36 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 20:26:36 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 20:35:15 | INFO | service.searchService | 검색 시작: '기계학습 수업 추천해주세요'
2025-09-28 20:35:16 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 20:35:16 | WARNING | service.searchService | SQL 생성 실패, 빈 결과 반환: 기계학습 수업 추천해주세요
2025-09-28 20:35:16 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 20:35:43 | INFO | service.searchService | 검색 시작: '기계학습이라는 과목명으로 수업을 찾아주세요'
2025-09-28 20:35:44 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 20:35:44 | WARNING | service.searchService | SQL 생성 실패, 빈 결과 반환: 기계학습이라는 과목명으로 수업을 찾아주세요
2025-09-28 20:35:44 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 20:37:37 | INFO | service.searchService | 검색 시작: '인공지능 관련된 수업을 찾아줘'
2025-09-28 20:37:38 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 20:37:38 | WARNING | service.searchService | SQL 생성 실패, 빈 결과 반환: 인공지능 관련된 수업을 찾아줘
2025-09-28 20:37:38 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 20:38:29 | INFO | service.searchService | 검색 시작: '컴공에서 인공지능 관련 수업'
2025-09-28 20:38:31 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 20:38:31 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name
FROM jbnu_class_gpt c
WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')
2025-09-28 20:38:31 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 20:44:28 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 20:44:28 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 20:44:28 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 20:45:07 | INFO | service.searchService | 검색 시작: '인공지능 관련된 수업을 찾아줘'
2025-09-28 20:45:08 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 20:45:08 | WARNING | service.searchService | SQL 생성 실패, 빈 결과 반환: 인공지능 관련된 수업을 찾아줘
2025-09-28 20:45:08 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 20:45:27 | INFO | service.searchService | 검색 시작: '인공지능 관련된 수업을 찾아줘'
2025-09-28 20:45:28 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 20:45:28 | WARNING | service.searchService | SQL 생성 실패, 빈 결과 반환: 인공지능 관련된 수업을 찾아줘
2025-09-28 20:45:28 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 20:45:45 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 20:45:45 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 20:45:45 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 20:45:58 | INFO | service.searchService | 검색 시작: '머신러닝 관련 수업 알려줘'
2025-09-28 20:45:59 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 20:45:59 | WARNING | service.searchService | SQL 생성 실패, 빈 결과 반환: 머신러닝 관련 수업 알려줘
2025-09-28 20:45:59 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 20:47:08 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 20:47:08 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 20:47:08 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 20:47:19 | INFO | service.searchService | 검색 시작: '머신러닝 관련 수업 알려줘'
2025-09-28 20:47:20 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 20:47:20 | WARNING | service.searchService | SQL 생성 실패, 빈 결과 반환: 머신러닝 관련 수업 알려줘
2025-09-28 20:47:20 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 20:49:21 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 20:49:21 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 20:49:21 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 20:49:25 | INFO | service.searchService | 검색 시작: '머신러닝 관련 수업 알려줘'
2025-09-28 20:49:26 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 20:49:26 | WARNING | service.searchService | SQL 생성 실패, 빈 결과 반환: 머신러닝 관련 수업 알려줘
2025-09-28 20:49:26 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 20:50:24 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 20:50:24 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 20:50:24 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 20:50:28 | INFO | service.searchService | 검색 시작: '머신러닝 관련 수업 알려줘'
2025-09-28 20:50:29 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 20:50:29 | WARNING | service.searchService | SQL 생성 실패, 빈 결과 반환: 머신러닝 관련 수업 알려줘
2025-09-28 20:50:29 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 20:51:21 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 20:51:21 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 20:51:21 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 20:51:25 | INFO | service.searchService | 검색 시작: '머신러닝 관련 수업 알려줘'
2025-09-28 20:51:26 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 20:51:26 | WARNING | service.searchService | SQL 생성 실패, 빈 결과 반환: 머신러닝 관련 수업 알려줘
2025-09-28 20:51:26 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 20:52:12 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 20:52:12 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 20:52:12 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 20:52:15 | INFO | service.searchService | 검색 시작: '머신러닝 관련 수업 알려줘'
2025-09-28 20:52:16 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 20:52:16 | WARNING | service.searchService | SQL 생성 실패, 빈 결과 반환: 머신러닝 관련 수업 알려줘
2025-09-28 20:52:16 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 20:54:37 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 20:54:37 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 20:54:37 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 20:54:42 | INFO | service.searchService | 검색 시작: '머신러닝 관련 수업 알려줘'
2025-09-28 20:54:42 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 20:55:23 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 20:55:23 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 20:55:23 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 20:55:27 | INFO | service.searchService | 검색 시작: '머신러닝 관련 수업 알려줘'
2025-09-28 20:55:27 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 20:56:26 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 20:56:26 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 20:56:26 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 20:56:30 | INFO | service.searchService | 검색 시작: '머신러닝 관련 수업 알려줘'
2025-09-28 20:56:30 | DEBUG | openai._base_client | Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'X-Stainless-Raw-Response': 'true'}, 'files': None, 'idempotency_key': 'stainless-python-retry-42c8938f-ff96-4de7-8800-13288cc91d2e', 'json_data': {'messages': [{'content': '# SQL 사전 필터링 쿼리 생성 프롬프트\n\n당신은 전북대학교 강의 검색 시스템의 SQL 쿼리 생성 전문가입니다.\n사용자 쿼리를 분석하여 FAISS 벡터 검색 전에 적용할 SQL 필터링 쿼리를 생성하세요.\n\n## 데이터베이스 테이블 구조\n\n### jbnu_class_gpt (강의 테이블)\n- id: 강의 고유 ID\n- name: 강의명\n- course_code: 과목코드\n- professor: 담당교수\n- credits: 학점\n- prerequisite: 선수과목\n- target_grade: 대상학년\n- schedule: 시간표\n- location: 강의실\n- delivery_mode: 수업방식 (대면/비대면)\n- department: 학과명 (간단한 형태)\n- department_full_name: 학과 전체명\n- original_description: 원본 강의 설명\n- gpt_description: GPT 생성 강의 설명\n\n## SQL 생성 규칙\n\n1. **학과 필터링이 필요한 경우**\n   - 학과명/별칭이 포함된 쿼리: "컴공", "전전", "경영학과" 등\n   - department 또는 department_full_name 필드 사용: `c.department LIKE \'%컴퓨터%\' OR c.department_full_name LIKE \'%컴퓨터%\'`\n   - **중요**: 학과 + 주제 질문에서는 **학과 필터링만** 적용하고 주제는 벡터 검색에 맡길 것\n   - 예: "컴공 인공지능" → 컴퓨터 관련 학과만 필터링, 인공지능은 벡터로 검색\n\n2. **교수명 필터링**\n   - 교수명이 포함된 경우: `c.professor LIKE \'%교수명%\'`\n\n3. **주제별 검색 규칙**\n   - **학과 + 주제**: 학과 필터만 적용, 주제는 벡터 검색으로 처리\n   - **특정 주제만** (학과 언급 없음): 전체 테이블 스캔 허용, 모든 강의 반환\n   - **교수 + 주제**: 교수 필터만 적용, 주제는 벡터 검색으로 처리\n\n4. **SELECT 절**\n   - 항상 `c.id`를 포함하여 FAISS 검색 시 필터링에 사용\n   - 예: `SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c`\n\n## 학과명 매핑\n- "컴공" → "컴퓨터인공지능학부" (LIKE \'%컴퓨터인공지능학부%\')\n- "전전" → "전자전기공학부" (LIKE \'%전자전기공학부%\' OR LIKE \'%전자%\')\n- "경영" → "경영학과" (LIKE \'%경영%\')\n- "기계" → "기계공학과" (LIKE \'%기계%\')\n\n## 응답 형식\n\nSQL 쿼리만 반환하세요. 설명이나 JSON 형식은 필요 없습니다.\n특정 주제만 검색할 때는 전체 테이블을 반환하여 벡터 검색에서 처리하도록 합니다.\n\n```sql\nSELECT ... FROM ... WHERE ...\n```\n\n## 예시\n\n**쿼리**: "컴공에서 인공지능 관련 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE (c.department LIKE \'%컴퓨터%\' OR c.department_full_name LIKE \'%컴퓨터%\')\n```\n\n**쿼리**: "송현제 교수님 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE c.professor LIKE \'%송현제%\'\n```\n\n**쿼리**: "머신러닝 관련 수업 알려줘"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode\nFROM jbnu_class_gpt c\n```\n\n**쿼리**: "전전 3학년 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE (c.department LIKE \'%전자%\' OR c.department_full_name LIKE \'%전자%\') AND c.target_grade = 3\n```\n\n사용자 쿼리: 머신러닝 관련 수업 알려줘', 'role': 'user'}], 'model': 'gpt-4o-mini', 'stream': False, 'temperature': 0.1}}
2025-09-28 20:56:30 | DEBUG | openai._base_client | Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-09-28 20:56:30 | DEBUG | httpcore.connection | connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2025-09-28 20:56:30 | DEBUG | httpcore.connection | connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f3635defa50>
2025-09-28 20:56:30 | DEBUG | httpcore.connection | start_tls.started ssl_context=<ssl.SSLContext object at 0x7f3636315d00> server_hostname='api.openai.com' timeout=None
2025-09-28 20:56:30 | DEBUG | httpcore.connection | start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f36362e9dd0>
2025-09-28 20:56:30 | DEBUG | httpcore.http11 | send_request_headers.started request=<Request [b'POST']>
2025-09-28 20:56:30 | DEBUG | httpcore.http11 | send_request_headers.complete
2025-09-28 20:56:30 | DEBUG | httpcore.http11 | send_request_body.started request=<Request [b'POST']>
2025-09-28 20:56:30 | DEBUG | httpcore.http11 | send_request_body.complete
2025-09-28 20:56:30 | DEBUG | httpcore.http11 | receive_response_headers.started request=<Request [b'POST']>
2025-09-28 20:56:32 | DEBUG | httpcore.http11 | receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 28 Sep 2025 11:56:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'jeonbuk-national-university'), (b'openai-processing-ms', b'2046'), (b'openai-project', b'proj_GsEDOgdDSI76JalmDfnt7uXv'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2064'), (b'x-ratelimit-limit-requests', b'30000'), (b'x-ratelimit-limit-tokens', b'150000000'), (b'x-ratelimit-remaining-requests', b'29999'), (b'x-ratelimit-remaining-tokens', b'149999130'), (b'x-ratelimit-reset-requests', b'2ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_cd1211fd337a47ff8237c72e29a08110'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=HNC8.vikfQdhoF95DyY_.hxFVbVNdMCb2WBSj_JFz88-1759060592-1.0.1.1-LGnjMgRHX5jy_kafP_OtzgcON9YJCnir.0YYRTEyt5R5z3DdIFn_t93XHl5vuw06is5Pwjq4FPcgkTc0xWEDxr6eX.zl4xL0qkplDGeITOA; path=/; expires=Sun, 28-Sep-25 12:26:32 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=3S4Nsh2LXCYM5D9WXdxYeAnjuuC3erUsTLFNhdWKTAc-1759060592866-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98630ed36e24ea15-ICN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-28 20:56:32 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 20:56:32 | DEBUG | httpcore.http11 | receive_response_body.started request=<Request [b'POST']>
2025-09-28 20:56:32 | DEBUG | httpcore.http11 | receive_response_body.complete
2025-09-28 20:56:32 | DEBUG | httpcore.http11 | response_closed.started
2025-09-28 20:56:32 | DEBUG | httpcore.http11 | response_closed.complete
2025-09-28 20:56:32 | DEBUG | openai._base_client | HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Sun, 28 Sep 2025 11:56:32 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'jeonbuk-national-university'), ('openai-processing-ms', '2046'), ('openai-project', 'proj_GsEDOgdDSI76JalmDfnt7uXv'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '2064'), ('x-ratelimit-limit-requests', '30000'), ('x-ratelimit-limit-tokens', '150000000'), ('x-ratelimit-remaining-requests', '29999'), ('x-ratelimit-remaining-tokens', '149999130'), ('x-ratelimit-reset-requests', '2ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_cd1211fd337a47ff8237c72e29a08110'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=HNC8.vikfQdhoF95DyY_.hxFVbVNdMCb2WBSj_JFz88-1759060592-1.0.1.1-LGnjMgRHX5jy_kafP_OtzgcON9YJCnir.0YYRTEyt5R5z3DdIFn_t93XHl5vuw06is5Pwjq4FPcgkTc0xWEDxr6eX.zl4xL0qkplDGeITOA; path=/; expires=Sun, 28-Sep-25 12:26:32 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=3S4Nsh2LXCYM5D9WXdxYeAnjuuC3erUsTLFNhdWKTAc-1759060592866-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '98630ed36e24ea15-ICN'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-09-28 20:56:32 | DEBUG | openai._base_client | request_id: req_cd1211fd337a47ff8237c72e29a08110
2025-09-28 20:56:32 | WARNING | service.searchService | 🔍 LLM 응답 타입: <class 'langchain_core.messages.ai.AIMessage'>
2025-09-28 20:56:32 | WARNING | service.searchService | 🔍 LLM 응답 내용: ```sql
SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
```
2025-09-28 20:56:32 | WARNING | service.searchService | 🔍 LLM 응답 길이: 195
2025-09-28 20:56:32 | WARNING | service.searchService | 🔍 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
2025-09-28 20:56:32 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
2025-09-28 20:56:32 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 20:57:22 | INFO | service.searchService | 검색 시작: '머신러닝 관련 수업 알려줘'
2025-09-28 20:57:22 | DEBUG | openai._base_client | Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'X-Stainless-Raw-Response': 'true'}, 'files': None, 'idempotency_key': 'stainless-python-retry-86dcb728-51d8-47d1-b0e6-977bb99f3657', 'json_data': {'messages': [{'content': '# SQL 사전 필터링 쿼리 생성 프롬프트\n\n당신은 전북대학교 강의 검색 시스템의 SQL 쿼리 생성 전문가입니다.\n사용자 쿼리를 분석하여 FAISS 벡터 검색 전에 적용할 SQL 필터링 쿼리를 생성하세요.\n\n## 데이터베이스 테이블 구조\n\n### jbnu_class_gpt (강의 테이블)\n- id: 강의 고유 ID\n- name: 강의명\n- course_code: 과목코드\n- professor: 담당교수\n- credits: 학점\n- prerequisite: 선수과목\n- target_grade: 대상학년\n- schedule: 시간표\n- location: 강의실\n- delivery_mode: 수업방식 (대면/비대면)\n- department: 학과명 (간단한 형태)\n- department_full_name: 학과 전체명\n- original_description: 원본 강의 설명\n- gpt_description: GPT 생성 강의 설명\n\n## SQL 생성 규칙\n\n1. **학과 필터링이 필요한 경우**\n   - 학과명/별칭이 포함된 쿼리: "컴공", "전전", "경영학과" 등\n   - department 또는 department_full_name 필드 사용: `c.department LIKE \'%컴퓨터%\' OR c.department_full_name LIKE \'%컴퓨터%\'`\n   - **중요**: 학과 + 주제 질문에서는 **학과 필터링만** 적용하고 주제는 벡터 검색에 맡길 것\n   - 예: "컴공 인공지능" → 컴퓨터 관련 학과만 필터링, 인공지능은 벡터로 검색\n\n2. **교수명 필터링**\n   - 교수명이 포함된 경우: `c.professor LIKE \'%교수명%\'`\n\n3. **주제별 검색 규칙**\n   - **학과 + 주제**: 학과 필터만 적용, 주제는 벡터 검색으로 처리\n   - **특정 주제만** (학과 언급 없음): 전체 테이블 스캔 허용, 모든 강의 반환\n   - **교수 + 주제**: 교수 필터만 적용, 주제는 벡터 검색으로 처리\n\n4. **SELECT 절**\n   - 항상 `c.id`를 포함하여 FAISS 검색 시 필터링에 사용\n   - 예: `SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c`\n\n## 학과명 매핑\n- "컴공" → "컴퓨터인공지능학부" (LIKE \'%컴퓨터인공지능학부%\')\n- "전전" → "전자전기공학부" (LIKE \'%전자전기공학부%\' OR LIKE \'%전자%\')\n- "경영" → "경영학과" (LIKE \'%경영%\')\n- "기계" → "기계공학과" (LIKE \'%기계%\')\n\n## 응답 형식\n\nSQL 쿼리만 반환하세요. 설명이나 JSON 형식은 필요 없습니다.\n특정 주제만 검색할 때는 전체 테이블을 반환하여 벡터 검색에서 처리하도록 합니다.\n\n```sql\nSELECT ... FROM ... WHERE ...\n```\n\n## 예시\n\n**쿼리**: "컴공에서 인공지능 관련 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE (c.department LIKE \'%컴퓨터%\' OR c.department_full_name LIKE \'%컴퓨터%\')\n```\n\n**쿼리**: "송현제 교수님 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE c.professor LIKE \'%송현제%\'\n```\n\n**쿼리**: "머신러닝 관련 수업 알려줘"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode\nFROM jbnu_class_gpt c\n```\n\n**쿼리**: "전전 3학년 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE (c.department LIKE \'%전자%\' OR c.department_full_name LIKE \'%전자%\') AND c.target_grade = 3\n```\n\n사용자 쿼리: 머신러닝 관련 수업 알려줘', 'role': 'user'}], 'model': 'gpt-4o-mini', 'stream': False, 'temperature': 0.1}}
2025-09-28 20:57:22 | DEBUG | openai._base_client | Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-09-28 20:57:22 | DEBUG | httpcore.connection | close.started
2025-09-28 20:57:22 | DEBUG | httpcore.connection | close.complete
2025-09-28 20:57:22 | DEBUG | httpcore.connection | connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2025-09-28 20:57:22 | DEBUG | httpcore.connection | connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f3635a147d0>
2025-09-28 20:57:22 | DEBUG | httpcore.connection | start_tls.started ssl_context=<ssl.SSLContext object at 0x7f3636315d00> server_hostname='api.openai.com' timeout=None
2025-09-28 20:57:22 | DEBUG | httpcore.connection | start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f3635dd1d10>
2025-09-28 20:57:22 | DEBUG | httpcore.http11 | send_request_headers.started request=<Request [b'POST']>
2025-09-28 20:57:22 | DEBUG | httpcore.http11 | send_request_headers.complete
2025-09-28 20:57:22 | DEBUG | httpcore.http11 | send_request_body.started request=<Request [b'POST']>
2025-09-28 20:57:22 | DEBUG | httpcore.http11 | send_request_body.complete
2025-09-28 20:57:22 | DEBUG | httpcore.http11 | receive_response_headers.started request=<Request [b'POST']>
2025-09-28 20:57:24 | DEBUG | httpcore.http11 | receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 28 Sep 2025 11:57:24 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'jeonbuk-national-university'), (b'openai-processing-ms', b'1385'), (b'openai-project', b'proj_GsEDOgdDSI76JalmDfnt7uXv'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1407'), (b'x-ratelimit-limit-requests', b'30000'), (b'x-ratelimit-limit-tokens', b'150000000'), (b'x-ratelimit-remaining-requests', b'29999'), (b'x-ratelimit-remaining-tokens', b'149999130'), (b'x-ratelimit-reset-requests', b'2ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_0327d17551ee4675808933604cdc1b65'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'986310196f1ed1dd-ICN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-28 20:57:24 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 20:57:24 | DEBUG | httpcore.http11 | receive_response_body.started request=<Request [b'POST']>
2025-09-28 20:57:24 | DEBUG | httpcore.http11 | receive_response_body.complete
2025-09-28 20:57:24 | DEBUG | httpcore.http11 | response_closed.started
2025-09-28 20:57:24 | DEBUG | httpcore.http11 | response_closed.complete
2025-09-28 20:57:24 | DEBUG | openai._base_client | HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 28 Sep 2025 11:57:24 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'jeonbuk-national-university', 'openai-processing-ms': '1385', 'openai-project': 'proj_GsEDOgdDSI76JalmDfnt7uXv', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1407', 'x-ratelimit-limit-requests': '30000', 'x-ratelimit-limit-tokens': '150000000', 'x-ratelimit-remaining-requests': '29999', 'x-ratelimit-remaining-tokens': '149999130', 'x-ratelimit-reset-requests': '2ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_0327d17551ee4675808933604cdc1b65', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '986310196f1ed1dd-ICN', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-28 20:57:24 | DEBUG | openai._base_client | request_id: req_0327d17551ee4675808933604cdc1b65
2025-09-28 20:57:24 | WARNING | service.searchService | 🔍 LLM 응답 타입: <class 'langchain_core.messages.ai.AIMessage'>
2025-09-28 20:57:24 | WARNING | service.searchService | 🔍 LLM 응답 내용: ```sql
SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
```
2025-09-28 20:57:24 | WARNING | service.searchService | 🔍 LLM 응답 길이: 195
2025-09-28 20:57:24 | WARNING | service.searchService | 🔍 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
2025-09-28 20:57:24 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
2025-09-28 20:57:24 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 20:58:36 | INFO | service.searchService | 검색 시작: '머신러닝 관련 수업 알려줘'
2025-09-28 20:58:36 | DEBUG | openai._base_client | Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'X-Stainless-Raw-Response': 'true'}, 'files': None, 'idempotency_key': 'stainless-python-retry-0d91a497-025c-47fa-845c-f41e56e607b8', 'json_data': {'messages': [{'content': '# SQL 사전 필터링 쿼리 생성 프롬프트\n\n당신은 전북대학교 강의 검색 시스템의 SQL 쿼리 생성 전문가입니다.\n사용자 쿼리를 분석하여 FAISS 벡터 검색 전에 적용할 SQL 필터링 쿼리를 생성하세요.\n\n## 데이터베이스 테이블 구조\n\n### jbnu_class_gpt (강의 테이블)\n- id: 강의 고유 ID\n- name: 강의명\n- course_code: 과목코드\n- professor: 담당교수\n- credits: 학점\n- prerequisite: 선수과목\n- target_grade: 대상학년\n- schedule: 시간표\n- location: 강의실\n- delivery_mode: 수업방식 (대면/비대면)\n- department: 학과명 (간단한 형태)\n- department_full_name: 학과 전체명\n- original_description: 원본 강의 설명\n- gpt_description: GPT 생성 강의 설명\n\n## SQL 생성 규칙\n\n1. **학과 필터링이 필요한 경우**\n   - 학과명/별칭이 포함된 쿼리: "컴공", "전전", "경영학과" 등\n   - department 또는 department_full_name 필드 사용: `c.department LIKE \'%컴퓨터%\' OR c.department_full_name LIKE \'%컴퓨터%\'`\n   - **중요**: 학과 + 주제 질문에서는 **학과 필터링만** 적용하고 주제는 벡터 검색에 맡길 것\n   - 예: "컴공 인공지능" → 컴퓨터 관련 학과만 필터링, 인공지능은 벡터로 검색\n\n2. **교수명 필터링**\n   - 교수명이 포함된 경우: `c.professor LIKE \'%교수명%\'`\n\n3. **주제별 검색 규칙**\n   - **학과 + 주제**: 학과 필터만 적용, 주제는 벡터 검색으로 처리\n   - **특정 주제만** (학과 언급 없음): 전체 테이블 스캔 허용, 모든 강의 반환\n   - **교수 + 주제**: 교수 필터만 적용, 주제는 벡터 검색으로 처리\n\n4. **SELECT 절**\n   - 항상 `c.id`를 포함하여 FAISS 검색 시 필터링에 사용\n   - 예: `SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c`\n\n## 학과명 매핑\n- "컴공" → "컴퓨터인공지능학부" (LIKE \'%컴퓨터인공지능학부%\')\n- "전전" → "전자전기공학부" (LIKE \'%전자전기공학부%\' OR LIKE \'%전자%\')\n- "경영" → "경영학과" (LIKE \'%경영%\')\n- "기계" → "기계공학과" (LIKE \'%기계%\')\n\n## 응답 형식\n\nSQL 쿼리만 반환하세요. 설명이나 JSON 형식은 필요 없습니다.\n특정 주제만 검색할 때는 전체 테이블을 반환하여 벡터 검색에서 처리하도록 합니다.\n\n```sql\nSELECT ... FROM ... WHERE ...\n```\n\n## 예시\n\n**쿼리**: "컴공에서 인공지능 관련 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE (c.department LIKE \'%컴퓨터%\' OR c.department_full_name LIKE \'%컴퓨터%\')\n```\n\n**쿼리**: "송현제 교수님 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE c.professor LIKE \'%송현제%\'\n```\n\n**쿼리**: "머신러닝 관련 수업 알려줘"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode\nFROM jbnu_class_gpt c\n```\n\n**쿼리**: "전전 3학년 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE (c.department LIKE \'%전자%\' OR c.department_full_name LIKE \'%전자%\') AND c.target_grade = 3\n```\n\n사용자 쿼리: 머신러닝 관련 수업 알려줘', 'role': 'user'}], 'model': 'gpt-4o-mini', 'stream': False, 'temperature': 0.1}}
2025-09-28 20:58:36 | DEBUG | openai._base_client | Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-09-28 20:58:36 | DEBUG | httpcore.connection | close.started
2025-09-28 20:58:36 | DEBUG | httpcore.connection | close.complete
2025-09-28 20:58:36 | DEBUG | httpcore.connection | connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2025-09-28 20:58:36 | DEBUG | httpcore.connection | connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f3635a16410>
2025-09-28 20:58:36 | DEBUG | httpcore.connection | start_tls.started ssl_context=<ssl.SSLContext object at 0x7f3636315d00> server_hostname='api.openai.com' timeout=None
2025-09-28 20:58:36 | DEBUG | httpcore.connection | start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f3635a16510>
2025-09-28 20:58:36 | DEBUG | httpcore.http11 | send_request_headers.started request=<Request [b'POST']>
2025-09-28 20:58:36 | DEBUG | httpcore.http11 | send_request_headers.complete
2025-09-28 20:58:36 | DEBUG | httpcore.http11 | send_request_body.started request=<Request [b'POST']>
2025-09-28 20:58:36 | DEBUG | httpcore.http11 | send_request_body.complete
2025-09-28 20:58:36 | DEBUG | httpcore.http11 | receive_response_headers.started request=<Request [b'POST']>
2025-09-28 20:58:38 | DEBUG | httpcore.http11 | receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 28 Sep 2025 11:58:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'jeonbuk-national-university'), (b'openai-processing-ms', b'1140'), (b'openai-project', b'proj_GsEDOgdDSI76JalmDfnt7uXv'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1165'), (b'x-ratelimit-limit-requests', b'30000'), (b'x-ratelimit-limit-tokens', b'150000000'), (b'x-ratelimit-remaining-requests', b'29999'), (b'x-ratelimit-remaining-tokens', b'149999130'), (b'x-ratelimit-reset-requests', b'2ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_0df441ac3ee24eb5847178e0e2b023e2'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'986311e92a6aea18-ICN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-28 20:58:38 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 20:58:38 | DEBUG | httpcore.http11 | receive_response_body.started request=<Request [b'POST']>
2025-09-28 20:58:38 | DEBUG | httpcore.http11 | receive_response_body.complete
2025-09-28 20:58:38 | DEBUG | httpcore.http11 | response_closed.started
2025-09-28 20:58:38 | DEBUG | httpcore.http11 | response_closed.complete
2025-09-28 20:58:38 | DEBUG | openai._base_client | HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 28 Sep 2025 11:58:38 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'jeonbuk-national-university', 'openai-processing-ms': '1140', 'openai-project': 'proj_GsEDOgdDSI76JalmDfnt7uXv', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1165', 'x-ratelimit-limit-requests': '30000', 'x-ratelimit-limit-tokens': '150000000', 'x-ratelimit-remaining-requests': '29999', 'x-ratelimit-remaining-tokens': '149999130', 'x-ratelimit-reset-requests': '2ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_0df441ac3ee24eb5847178e0e2b023e2', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '986311e92a6aea18-ICN', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-28 20:58:38 | DEBUG | openai._base_client | request_id: req_0df441ac3ee24eb5847178e0e2b023e2
2025-09-28 20:58:38 | WARNING | service.searchService | 🔍 LLM 응답 타입: <class 'langchain_core.messages.ai.AIMessage'>
2025-09-28 20:58:38 | WARNING | service.searchService | 🔍 LLM 응답 내용: ```sql
SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
```
2025-09-28 20:58:38 | WARNING | service.searchService | 🔍 LLM 응답 길이: 195
2025-09-28 20:58:38 | WARNING | service.searchService | 🔍 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
2025-09-28 20:58:38 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
2025-09-28 20:58:38 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 20:59:17 | INFO | service.searchService | 검색 시작: '머신러닝 관련 수업 알려줘'
2025-09-28 20:59:17 | DEBUG | openai._base_client | Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'X-Stainless-Raw-Response': 'true'}, 'files': None, 'idempotency_key': 'stainless-python-retry-dbcca8d9-dcbd-4cce-930e-39c02ff85c96', 'json_data': {'messages': [{'content': '# SQL 사전 필터링 쿼리 생성 프롬프트\n\n당신은 전북대학교 강의 검색 시스템의 SQL 쿼리 생성 전문가입니다.\n사용자 쿼리를 분석하여 FAISS 벡터 검색 전에 적용할 SQL 필터링 쿼리를 생성하세요.\n\n## 데이터베이스 테이블 구조\n\n### jbnu_class_gpt (강의 테이블)\n- id: 강의 고유 ID\n- name: 강의명\n- course_code: 과목코드\n- professor: 담당교수\n- credits: 학점\n- prerequisite: 선수과목\n- target_grade: 대상학년\n- schedule: 시간표\n- location: 강의실\n- delivery_mode: 수업방식 (대면/비대면)\n- department: 학과명 (간단한 형태)\n- department_full_name: 학과 전체명\n- original_description: 원본 강의 설명\n- gpt_description: GPT 생성 강의 설명\n\n## SQL 생성 규칙\n\n1. **학과 필터링이 필요한 경우**\n   - 학과명/별칭이 포함된 쿼리: "컴공", "전전", "경영학과" 등\n   - department 또는 department_full_name 필드 사용: `c.department LIKE \'%컴퓨터%\' OR c.department_full_name LIKE \'%컴퓨터%\'`\n   - **중요**: 학과 + 주제 질문에서는 **학과 필터링만** 적용하고 주제는 벡터 검색에 맡길 것\n   - 예: "컴공 인공지능" → 컴퓨터 관련 학과만 필터링, 인공지능은 벡터로 검색\n\n2. **교수명 필터링**\n   - 교수명이 포함된 경우: `c.professor LIKE \'%교수명%\'`\n\n3. **주제별 검색 규칙**\n   - **학과 + 주제**: 학과 필터만 적용, 주제는 벡터 검색으로 처리\n   - **특정 주제만** (학과 언급 없음): 전체 테이블 스캔 허용, 모든 강의 반환\n   - **교수 + 주제**: 교수 필터만 적용, 주제는 벡터 검색으로 처리\n\n4. **SELECT 절**\n   - 항상 `c.id`를 포함하여 FAISS 검색 시 필터링에 사용\n   - 예: `SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c`\n\n## 학과명 매핑\n- "컴공" → "컴퓨터인공지능학부" (LIKE \'%컴퓨터인공지능학부%\')\n- "전전" → "전자전기공학부" (LIKE \'%전자전기공학부%\' OR LIKE \'%전자%\')\n- "경영" → "경영학과" (LIKE \'%경영%\')\n- "기계" → "기계공학과" (LIKE \'%기계%\')\n\n## 응답 형식\n\nSQL 쿼리만 반환하세요. 설명이나 JSON 형식은 필요 없습니다.\n특정 주제만 검색할 때는 전체 테이블을 반환하여 벡터 검색에서 처리하도록 합니다.\n\n```sql\nSELECT ... FROM ... WHERE ...\n```\n\n## 예시\n\n**쿼리**: "컴공에서 인공지능 관련 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE (c.department LIKE \'%컴퓨터%\' OR c.department_full_name LIKE \'%컴퓨터%\')\n```\n\n**쿼리**: "송현제 교수님 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE c.professor LIKE \'%송현제%\'\n```\n\n**쿼리**: "머신러닝 관련 수업 알려줘"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode\nFROM jbnu_class_gpt c\n```\n\n**쿼리**: "전전 3학년 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE (c.department LIKE \'%전자%\' OR c.department_full_name LIKE \'%전자%\') AND c.target_grade = 3\n```\n\n사용자 쿼리: 머신러닝 관련 수업 알려줘', 'role': 'user'}], 'model': 'gpt-4o-mini', 'stream': False, 'temperature': 0.1}}
2025-09-28 20:59:17 | DEBUG | openai._base_client | Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-09-28 20:59:17 | DEBUG | httpcore.connection | close.started
2025-09-28 20:59:17 | DEBUG | httpcore.connection | close.complete
2025-09-28 20:59:17 | DEBUG | httpcore.connection | connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2025-09-28 20:59:17 | DEBUG | httpcore.connection | connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f3635a14750>
2025-09-28 20:59:17 | DEBUG | httpcore.connection | start_tls.started ssl_context=<ssl.SSLContext object at 0x7f3636315d00> server_hostname='api.openai.com' timeout=None
2025-09-28 20:59:17 | DEBUG | httpcore.connection | start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f3635a152d0>
2025-09-28 20:59:17 | DEBUG | httpcore.http11 | send_request_headers.started request=<Request [b'POST']>
2025-09-28 20:59:17 | DEBUG | httpcore.http11 | send_request_headers.complete
2025-09-28 20:59:17 | DEBUG | httpcore.http11 | send_request_body.started request=<Request [b'POST']>
2025-09-28 20:59:17 | DEBUG | httpcore.http11 | send_request_body.complete
2025-09-28 20:59:17 | DEBUG | httpcore.http11 | receive_response_headers.started request=<Request [b'POST']>
2025-09-28 20:59:19 | DEBUG | httpcore.http11 | receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 28 Sep 2025 11:59:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'jeonbuk-national-university'), (b'openai-processing-ms', b'1537'), (b'openai-project', b'proj_GsEDOgdDSI76JalmDfnt7uXv'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1567'), (b'x-ratelimit-limit-requests', b'30000'), (b'x-ratelimit-limit-tokens', b'150000000'), (b'x-ratelimit-remaining-requests', b'29999'), (b'x-ratelimit-remaining-tokens', b'149999130'), (b'x-ratelimit-reset-requests', b'2ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_74b1b6405cc3413a828c0adc11838713'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'986312e94e0fea0d-ICN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-28 20:59:19 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 20:59:19 | DEBUG | httpcore.http11 | receive_response_body.started request=<Request [b'POST']>
2025-09-28 20:59:19 | DEBUG | httpcore.http11 | receive_response_body.complete
2025-09-28 20:59:19 | DEBUG | httpcore.http11 | response_closed.started
2025-09-28 20:59:19 | DEBUG | httpcore.http11 | response_closed.complete
2025-09-28 20:59:19 | DEBUG | openai._base_client | HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 28 Sep 2025 11:59:19 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'jeonbuk-national-university', 'openai-processing-ms': '1537', 'openai-project': 'proj_GsEDOgdDSI76JalmDfnt7uXv', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1567', 'x-ratelimit-limit-requests': '30000', 'x-ratelimit-limit-tokens': '150000000', 'x-ratelimit-remaining-requests': '29999', 'x-ratelimit-remaining-tokens': '149999130', 'x-ratelimit-reset-requests': '2ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_74b1b6405cc3413a828c0adc11838713', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '986312e94e0fea0d-ICN', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-28 20:59:19 | DEBUG | openai._base_client | request_id: req_74b1b6405cc3413a828c0adc11838713
2025-09-28 20:59:19 | WARNING | service.searchService | 🔍 LLM 응답 타입: <class 'langchain_core.messages.ai.AIMessage'>
2025-09-28 20:59:19 | WARNING | service.searchService | 🔍 LLM 응답 내용: ```sql
SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
```
2025-09-28 20:59:19 | WARNING | service.searchService | 🔍 LLM 응답 길이: 195
2025-09-28 20:59:19 | WARNING | service.searchService | 🔍 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
2025-09-28 20:59:19 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
2025-09-28 20:59:19 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 20:59:46 | INFO | service.searchService | 검색 시작: '머신러닝 관련 수업 알려줘'
2025-09-28 20:59:46 | DEBUG | openai._base_client | Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'X-Stainless-Raw-Response': 'true'}, 'files': None, 'idempotency_key': 'stainless-python-retry-4bd3bc9e-ba62-40f2-828c-3e63cdd45854', 'json_data': {'messages': [{'content': '# SQL 사전 필터링 쿼리 생성 프롬프트\n\n당신은 전북대학교 강의 검색 시스템의 SQL 쿼리 생성 전문가입니다.\n사용자 쿼리를 분석하여 FAISS 벡터 검색 전에 적용할 SQL 필터링 쿼리를 생성하세요.\n\n## 데이터베이스 테이블 구조\n\n### jbnu_class_gpt (강의 테이블)\n- id: 강의 고유 ID\n- name: 강의명\n- course_code: 과목코드\n- professor: 담당교수\n- credits: 학점\n- prerequisite: 선수과목\n- target_grade: 대상학년\n- schedule: 시간표\n- location: 강의실\n- delivery_mode: 수업방식 (대면/비대면)\n- department: 학과명 (간단한 형태)\n- department_full_name: 학과 전체명\n- original_description: 원본 강의 설명\n- gpt_description: GPT 생성 강의 설명\n\n## SQL 생성 규칙\n\n1. **학과 필터링이 필요한 경우**\n   - 학과명/별칭이 포함된 쿼리: "컴공", "전전", "경영학과" 등\n   - department 또는 department_full_name 필드 사용: `c.department LIKE \'%컴퓨터%\' OR c.department_full_name LIKE \'%컴퓨터%\'`\n   - **중요**: 학과 + 주제 질문에서는 **학과 필터링만** 적용하고 주제는 벡터 검색에 맡길 것\n   - 예: "컴공 인공지능" → 컴퓨터 관련 학과만 필터링, 인공지능은 벡터로 검색\n\n2. **교수명 필터링**\n   - 교수명이 포함된 경우: `c.professor LIKE \'%교수명%\'`\n\n3. **주제별 검색 규칙**\n   - **학과 + 주제**: 학과 필터만 적용, 주제는 벡터 검색으로 처리\n   - **특정 주제만** (학과 언급 없음): 전체 테이블 스캔 허용, 모든 강의 반환\n   - **교수 + 주제**: 교수 필터만 적용, 주제는 벡터 검색으로 처리\n\n4. **SELECT 절**\n   - 항상 `c.id`를 포함하여 FAISS 검색 시 필터링에 사용\n   - 예: `SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c`\n\n## 학과명 매핑\n- "컴공" → "컴퓨터인공지능학부" (LIKE \'%컴퓨터인공지능학부%\')\n- "전전" → "전자전기공학부" (LIKE \'%전자전기공학부%\' OR LIKE \'%전자%\')\n- "경영" → "경영학과" (LIKE \'%경영%\')\n- "기계" → "기계공학과" (LIKE \'%기계%\')\n\n## 응답 형식\n\nSQL 쿼리만 반환하세요. 설명이나 JSON 형식은 필요 없습니다.\n특정 주제만 검색할 때는 전체 테이블을 반환하여 벡터 검색에서 처리하도록 합니다.\n\n```sql\nSELECT ... FROM ... WHERE ...\n```\n\n## 예시\n\n**쿼리**: "컴공에서 인공지능 관련 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE (c.department LIKE \'%컴퓨터%\' OR c.department_full_name LIKE \'%컴퓨터%\')\n```\n\n**쿼리**: "송현제 교수님 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE c.professor LIKE \'%송현제%\'\n```\n\n**쿼리**: "머신러닝 관련 수업 알려줘"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode\nFROM jbnu_class_gpt c\n```\n\n**쿼리**: "전전 3학년 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE (c.department LIKE \'%전자%\' OR c.department_full_name LIKE \'%전자%\') AND c.target_grade = 3\n```\n\n사용자 쿼리: 머신러닝 관련 수업 알려줘', 'role': 'user'}], 'model': 'gpt-4o-mini', 'stream': False, 'temperature': 0.1}}
2025-09-28 20:59:46 | DEBUG | openai._base_client | Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-09-28 20:59:46 | DEBUG | httpcore.connection | close.started
2025-09-28 20:59:46 | DEBUG | httpcore.connection | close.complete
2025-09-28 20:59:46 | DEBUG | httpcore.connection | connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2025-09-28 20:59:46 | DEBUG | httpcore.connection | connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f3635a14590>
2025-09-28 20:59:46 | DEBUG | httpcore.connection | start_tls.started ssl_context=<ssl.SSLContext object at 0x7f3636315d00> server_hostname='api.openai.com' timeout=None
2025-09-28 20:59:46 | DEBUG | httpcore.connection | start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f3635a14e10>
2025-09-28 20:59:46 | DEBUG | httpcore.http11 | send_request_headers.started request=<Request [b'POST']>
2025-09-28 20:59:46 | DEBUG | httpcore.http11 | send_request_headers.complete
2025-09-28 20:59:46 | DEBUG | httpcore.http11 | send_request_body.started request=<Request [b'POST']>
2025-09-28 20:59:46 | DEBUG | httpcore.http11 | send_request_body.complete
2025-09-28 20:59:46 | DEBUG | httpcore.http11 | receive_response_headers.started request=<Request [b'POST']>
2025-09-28 20:59:48 | DEBUG | httpcore.http11 | receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 28 Sep 2025 11:59:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'jeonbuk-national-university'), (b'openai-processing-ms', b'1737'), (b'openai-project', b'proj_GsEDOgdDSI76JalmDfnt7uXv'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1753'), (b'x-ratelimit-limit-requests', b'30000'), (b'x-ratelimit-limit-tokens', b'150000000'), (b'x-ratelimit-remaining-requests', b'29999'), (b'x-ratelimit-remaining-tokens', b'149999132'), (b'x-ratelimit-reset-requests', b'2ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_a9106575ca684bfe953da6d6ea99b761'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9863139dfb3cea03-ICN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-28 20:59:48 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 20:59:48 | DEBUG | httpcore.http11 | receive_response_body.started request=<Request [b'POST']>
2025-09-28 20:59:48 | DEBUG | httpcore.http11 | receive_response_body.complete
2025-09-28 20:59:48 | DEBUG | httpcore.http11 | response_closed.started
2025-09-28 20:59:48 | DEBUG | httpcore.http11 | response_closed.complete
2025-09-28 20:59:48 | DEBUG | openai._base_client | HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 28 Sep 2025 11:59:48 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'jeonbuk-national-university', 'openai-processing-ms': '1737', 'openai-project': 'proj_GsEDOgdDSI76JalmDfnt7uXv', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1753', 'x-ratelimit-limit-requests': '30000', 'x-ratelimit-limit-tokens': '150000000', 'x-ratelimit-remaining-requests': '29999', 'x-ratelimit-remaining-tokens': '149999132', 'x-ratelimit-reset-requests': '2ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_a9106575ca684bfe953da6d6ea99b761', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9863139dfb3cea03-ICN', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-28 20:59:48 | DEBUG | openai._base_client | request_id: req_a9106575ca684bfe953da6d6ea99b761
2025-09-28 20:59:48 | WARNING | service.searchService | 🔍 LLM 응답 타입: <class 'langchain_core.messages.ai.AIMessage'>
2025-09-28 20:59:48 | WARNING | service.searchService | 🔍 LLM 응답 내용: ```sql
SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
```
2025-09-28 20:59:48 | WARNING | service.searchService | 🔍 LLM 응답 길이: 195
2025-09-28 20:59:48 | WARNING | service.searchService | 🔍 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
2025-09-28 20:59:48 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
2025-09-28 20:59:48 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 21:01:00 | INFO | service.searchService | 검색 시작: '머신러닝 관련 수업 알려줘'
2025-09-28 21:01:00 | DEBUG | openai._base_client | Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'X-Stainless-Raw-Response': 'true'}, 'files': None, 'idempotency_key': 'stainless-python-retry-10ae2bd2-cbcb-4a2c-a2f6-d49987afd107', 'json_data': {'messages': [{'content': '# SQL 사전 필터링 쿼리 생성 프롬프트\n\n당신은 전북대학교 강의 검색 시스템의 SQL 쿼리 생성 전문가입니다.\n사용자 쿼리를 분석하여 FAISS 벡터 검색 전에 적용할 SQL 필터링 쿼리를 생성하세요.\n\n## 데이터베이스 테이블 구조\n\n### jbnu_class_gpt (강의 테이블)\n- id: 강의 고유 ID\n- name: 강의명\n- course_code: 과목코드\n- professor: 담당교수\n- credits: 학점\n- prerequisite: 선수과목\n- target_grade: 대상학년\n- schedule: 시간표\n- location: 강의실\n- delivery_mode: 수업방식 (대면/비대면)\n- department: 학과명 (간단한 형태)\n- department_full_name: 학과 전체명\n- original_description: 원본 강의 설명\n- gpt_description: GPT 생성 강의 설명\n\n## SQL 생성 규칙\n\n1. **학과 필터링이 필요한 경우**\n   - 학과명/별칭이 포함된 쿼리: "컴공", "전전", "경영학과" 등\n   - department 또는 department_full_name 필드 사용: `c.department LIKE \'%컴퓨터%\' OR c.department_full_name LIKE \'%컴퓨터%\'`\n   - **중요**: 학과 + 주제 질문에서는 **학과 필터링만** 적용하고 주제는 벡터 검색에 맡길 것\n   - 예: "컴공 인공지능" → 컴퓨터 관련 학과만 필터링, 인공지능은 벡터로 검색\n\n2. **교수명 필터링**\n   - 교수명이 포함된 경우: `c.professor LIKE \'%교수명%\'`\n\n3. **주제별 검색 규칙**\n   - **학과 + 주제**: 학과 필터만 적용, 주제는 벡터 검색으로 처리\n   - **특정 주제만** (학과 언급 없음): 전체 테이블 스캔 허용, 모든 강의 반환\n   - **교수 + 주제**: 교수 필터만 적용, 주제는 벡터 검색으로 처리\n\n4. **SELECT 절**\n   - 항상 `c.id`를 포함하여 FAISS 검색 시 필터링에 사용\n   - 예: `SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c`\n\n## 학과명 매핑\n- "컴공" → "컴퓨터인공지능학부" (LIKE \'%컴퓨터인공지능학부%\')\n- "전전" → "전자전기공학부" (LIKE \'%전자전기공학부%\' OR LIKE \'%전자%\')\n- "경영" → "경영학과" (LIKE \'%경영%\')\n- "기계" → "기계공학과" (LIKE \'%기계%\')\n\n## 응답 형식\n\nSQL 쿼리만 반환하세요. 설명이나 JSON 형식은 필요 없습니다.\n특정 주제만 검색할 때는 전체 테이블을 반환하여 벡터 검색에서 처리하도록 합니다.\n\n```sql\nSELECT ... FROM ... WHERE ...\n```\n\n## 예시\n\n**쿼리**: "컴공에서 인공지능 관련 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE (c.department LIKE \'%컴퓨터%\' OR c.department_full_name LIKE \'%컴퓨터%\')\n```\n\n**쿼리**: "송현제 교수님 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE c.professor LIKE \'%송현제%\'\n```\n\n**쿼리**: "머신러닝 관련 수업 알려줘"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode\nFROM jbnu_class_gpt c\n```\n\n**쿼리**: "전전 3학년 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE (c.department LIKE \'%전자%\' OR c.department_full_name LIKE \'%전자%\') AND c.target_grade = 3\n```\n\n사용자 쿼리: 머신러닝 관련 수업 알려줘', 'role': 'user'}], 'model': 'gpt-4o-mini', 'stream': False, 'temperature': 0.1}}
2025-09-28 21:01:00 | DEBUG | openai._base_client | Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-09-28 21:01:00 | DEBUG | httpcore.connection | close.started
2025-09-28 21:01:00 | DEBUG | httpcore.connection | close.complete
2025-09-28 21:01:00 | DEBUG | httpcore.connection | connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2025-09-28 21:01:00 | DEBUG | httpcore.connection | connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f3635a15390>
2025-09-28 21:01:00 | DEBUG | httpcore.connection | start_tls.started ssl_context=<ssl.SSLContext object at 0x7f3636315d00> server_hostname='api.openai.com' timeout=None
2025-09-28 21:01:00 | DEBUG | httpcore.connection | start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f3635a15a10>
2025-09-28 21:01:00 | DEBUG | httpcore.http11 | send_request_headers.started request=<Request [b'POST']>
2025-09-28 21:01:00 | DEBUG | httpcore.http11 | send_request_headers.complete
2025-09-28 21:01:00 | DEBUG | httpcore.http11 | send_request_body.started request=<Request [b'POST']>
2025-09-28 21:01:00 | DEBUG | httpcore.http11 | send_request_body.complete
2025-09-28 21:01:00 | DEBUG | httpcore.http11 | receive_response_headers.started request=<Request [b'POST']>
2025-09-28 21:01:03 | DEBUG | httpcore.http11 | receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 28 Sep 2025 12:01:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'jeonbuk-national-university'), (b'openai-processing-ms', b'3004'), (b'openai-project', b'proj_GsEDOgdDSI76JalmDfnt7uXv'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'3024'), (b'x-ratelimit-limit-requests', b'30000'), (b'x-ratelimit-limit-tokens', b'150000000'), (b'x-ratelimit-remaining-requests', b'29999'), (b'x-ratelimit-remaining-tokens', b'149999132'), (b'x-ratelimit-reset-requests', b'2ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_b581786652dd43049cac7c638971894d'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9863156b9c4fea29-ICN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-28 21:01:03 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 21:01:03 | DEBUG | httpcore.http11 | receive_response_body.started request=<Request [b'POST']>
2025-09-28 21:01:03 | DEBUG | httpcore.http11 | receive_response_body.complete
2025-09-28 21:01:03 | DEBUG | httpcore.http11 | response_closed.started
2025-09-28 21:01:03 | DEBUG | httpcore.http11 | response_closed.complete
2025-09-28 21:01:03 | DEBUG | openai._base_client | HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 28 Sep 2025 12:01:03 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'jeonbuk-national-university', 'openai-processing-ms': '3004', 'openai-project': 'proj_GsEDOgdDSI76JalmDfnt7uXv', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '3024', 'x-ratelimit-limit-requests': '30000', 'x-ratelimit-limit-tokens': '150000000', 'x-ratelimit-remaining-requests': '29999', 'x-ratelimit-remaining-tokens': '149999132', 'x-ratelimit-reset-requests': '2ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_b581786652dd43049cac7c638971894d', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9863156b9c4fea29-ICN', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-28 21:01:03 | DEBUG | openai._base_client | request_id: req_b581786652dd43049cac7c638971894d
2025-09-28 21:01:03 | WARNING | service.searchService | 🔍 LLM 응답 타입: <class 'langchain_core.messages.ai.AIMessage'>
2025-09-28 21:01:03 | WARNING | service.searchService | 🔍 LLM 응답 내용: ```sql
SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
```
2025-09-28 21:01:03 | WARNING | service.searchService | 🔍 LLM 응답 길이: 195
2025-09-28 21:01:03 | WARNING | service.searchService | 🔍 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
2025-09-28 21:01:03 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
2025-09-28 21:01:04 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 21:01:38 | INFO | service.searchService | 검색 시작: '머신러닝 관련 수업 알려줘'
2025-09-28 21:01:38 | DEBUG | openai._base_client | Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'X-Stainless-Raw-Response': 'true'}, 'files': None, 'idempotency_key': 'stainless-python-retry-88b3e0b7-afdb-436a-a69c-9fd0d9745d6e', 'json_data': {'messages': [{'content': '# SQL 사전 필터링 쿼리 생성 프롬프트\n\n당신은 전북대학교 강의 검색 시스템의 SQL 쿼리 생성 전문가입니다.\n사용자 쿼리를 분석하여 FAISS 벡터 검색 전에 적용할 SQL 필터링 쿼리를 생성하세요.\n\n## 데이터베이스 테이블 구조\n\n### jbnu_class_gpt (강의 테이블)\n- id: 강의 고유 ID\n- name: 강의명\n- course_code: 과목코드\n- professor: 담당교수\n- credits: 학점\n- prerequisite: 선수과목\n- target_grade: 대상학년\n- schedule: 시간표\n- location: 강의실\n- delivery_mode: 수업방식 (대면/비대면)\n- department: 학과명 (간단한 형태)\n- department_full_name: 학과 전체명\n- original_description: 원본 강의 설명\n- gpt_description: GPT 생성 강의 설명\n\n## SQL 생성 규칙\n\n1. **학과 필터링이 필요한 경우**\n   - 학과명/별칭이 포함된 쿼리: "컴공", "전전", "경영학과" 등\n   - department 또는 department_full_name 필드 사용: `c.department LIKE \'%컴퓨터%\' OR c.department_full_name LIKE \'%컴퓨터%\'`\n   - **중요**: 학과 + 주제 질문에서는 **학과 필터링만** 적용하고 주제는 벡터 검색에 맡길 것\n   - 예: "컴공 인공지능" → 컴퓨터 관련 학과만 필터링, 인공지능은 벡터로 검색\n\n2. **교수명 필터링**\n   - 교수명이 포함된 경우: `c.professor LIKE \'%교수명%\'`\n\n3. **주제별 검색 규칙**\n   - **학과 + 주제**: 학과 필터만 적용, 주제는 벡터 검색으로 처리\n   - **특정 주제만** (학과 언급 없음): 전체 테이블 스캔 허용, 모든 강의 반환\n   - **교수 + 주제**: 교수 필터만 적용, 주제는 벡터 검색으로 처리\n\n4. **SELECT 절**\n   - 항상 `c.id`를 포함하여 FAISS 검색 시 필터링에 사용\n   - 예: `SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c`\n\n## 학과명 매핑\n- "컴공" → "컴퓨터인공지능학부" (LIKE \'%컴퓨터인공지능학부%\')\n- "전전" → "전자전기공학부" (LIKE \'%전자전기공학부%\' OR LIKE \'%전자%\')\n- "경영" → "경영학과" (LIKE \'%경영%\')\n- "기계" → "기계공학과" (LIKE \'%기계%\')\n\n## 응답 형식\n\nSQL 쿼리만 반환하세요. 설명이나 JSON 형식은 필요 없습니다.\n특정 주제만 검색할 때는 전체 테이블을 반환하여 벡터 검색에서 처리하도록 합니다.\n\n```sql\nSELECT ... FROM ... WHERE ...\n```\n\n## 예시\n\n**쿼리**: "컴공에서 인공지능 관련 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE (c.department LIKE \'%컴퓨터%\' OR c.department_full_name LIKE \'%컴퓨터%\')\n```\n\n**쿼리**: "송현제 교수님 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE c.professor LIKE \'%송현제%\'\n```\n\n**쿼리**: "머신러닝 관련 수업 알려줘"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode\nFROM jbnu_class_gpt c\n```\n\n**쿼리**: "전전 3학년 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE (c.department LIKE \'%전자%\' OR c.department_full_name LIKE \'%전자%\') AND c.target_grade = 3\n```\n\n사용자 쿼리: 머신러닝 관련 수업 알려줘', 'role': 'user'}], 'model': 'gpt-4o-mini', 'stream': False, 'temperature': 0.1}}
2025-09-28 21:01:38 | DEBUG | openai._base_client | Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-09-28 21:01:38 | DEBUG | httpcore.connection | close.started
2025-09-28 21:01:38 | DEBUG | httpcore.connection | close.complete
2025-09-28 21:01:38 | DEBUG | httpcore.connection | connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2025-09-28 21:01:38 | DEBUG | httpcore.connection | connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f3635dd0b50>
2025-09-28 21:01:38 | DEBUG | httpcore.connection | start_tls.started ssl_context=<ssl.SSLContext object at 0x7f3636315d00> server_hostname='api.openai.com' timeout=None
2025-09-28 21:01:38 | DEBUG | httpcore.connection | start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f3635defc10>
2025-09-28 21:01:38 | DEBUG | httpcore.http11 | send_request_headers.started request=<Request [b'POST']>
2025-09-28 21:01:38 | DEBUG | httpcore.http11 | send_request_headers.complete
2025-09-28 21:01:38 | DEBUG | httpcore.http11 | send_request_body.started request=<Request [b'POST']>
2025-09-28 21:01:38 | DEBUG | httpcore.http11 | send_request_body.complete
2025-09-28 21:01:38 | DEBUG | httpcore.http11 | receive_response_headers.started request=<Request [b'POST']>
2025-09-28 21:01:40 | DEBUG | httpcore.http11 | receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 28 Sep 2025 12:01:40 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'jeonbuk-national-university'), (b'openai-processing-ms', b'1647'), (b'openai-project', b'proj_GsEDOgdDSI76JalmDfnt7uXv'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1689'), (b'x-ratelimit-limit-requests', b'30000'), (b'x-ratelimit-limit-tokens', b'150000000'), (b'x-ratelimit-remaining-requests', b'29999'), (b'x-ratelimit-remaining-tokens', b'149999130'), (b'x-ratelimit-reset-requests', b'2ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_a33e2a7a233d4c1c8b20c2ed1f8191b5'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98631658dc54ea25-ICN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-28 21:01:40 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 21:01:40 | DEBUG | httpcore.http11 | receive_response_body.started request=<Request [b'POST']>
2025-09-28 21:01:40 | DEBUG | httpcore.http11 | receive_response_body.complete
2025-09-28 21:01:40 | DEBUG | httpcore.http11 | response_closed.started
2025-09-28 21:01:40 | DEBUG | httpcore.http11 | response_closed.complete
2025-09-28 21:01:40 | DEBUG | openai._base_client | HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 28 Sep 2025 12:01:40 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'jeonbuk-national-university', 'openai-processing-ms': '1647', 'openai-project': 'proj_GsEDOgdDSI76JalmDfnt7uXv', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1689', 'x-ratelimit-limit-requests': '30000', 'x-ratelimit-limit-tokens': '150000000', 'x-ratelimit-remaining-requests': '29999', 'x-ratelimit-remaining-tokens': '149999130', 'x-ratelimit-reset-requests': '2ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_a33e2a7a233d4c1c8b20c2ed1f8191b5', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98631658dc54ea25-ICN', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-28 21:01:40 | DEBUG | openai._base_client | request_id: req_a33e2a7a233d4c1c8b20c2ed1f8191b5
2025-09-28 21:01:40 | WARNING | service.searchService | 🔍 LLM 응답 타입: <class 'langchain_core.messages.ai.AIMessage'>
2025-09-28 21:01:40 | WARNING | service.searchService | 🔍 LLM 응답 내용: ```sql
SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
```
2025-09-28 21:01:40 | WARNING | service.searchService | 🔍 LLM 응답 길이: 195
2025-09-28 21:01:40 | WARNING | service.searchService | 🔍 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
2025-09-28 21:01:40 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
2025-09-28 21:01:40 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 21:02:06 | INFO | service.searchService | 검색 시작: '머신러닝 관련 수업 알려줘'
2025-09-28 21:02:06 | DEBUG | openai._base_client | Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'X-Stainless-Raw-Response': 'true'}, 'files': None, 'idempotency_key': 'stainless-python-retry-20b7073a-e510-467c-bf91-8e07f7fe7f0d', 'json_data': {'messages': [{'content': '# SQL 사전 필터링 쿼리 생성 프롬프트\n\n당신은 전북대학교 강의 검색 시스템의 SQL 쿼리 생성 전문가입니다.\n사용자 쿼리를 분석하여 FAISS 벡터 검색 전에 적용할 SQL 필터링 쿼리를 생성하세요.\n\n## 데이터베이스 테이블 구조\n\n### jbnu_class_gpt (강의 테이블)\n- id: 강의 고유 ID\n- name: 강의명\n- course_code: 과목코드\n- professor: 담당교수\n- credits: 학점\n- prerequisite: 선수과목\n- target_grade: 대상학년\n- schedule: 시간표\n- location: 강의실\n- delivery_mode: 수업방식 (대면/비대면)\n- department: 학과명 (간단한 형태)\n- department_full_name: 학과 전체명\n- original_description: 원본 강의 설명\n- gpt_description: GPT 생성 강의 설명\n\n## SQL 생성 규칙\n\n1. **학과 필터링이 필요한 경우**\n   - 학과명/별칭이 포함된 쿼리: "컴공", "전전", "경영학과" 등\n   - department 또는 department_full_name 필드 사용: `c.department LIKE \'%컴퓨터%\' OR c.department_full_name LIKE \'%컴퓨터%\'`\n   - **중요**: 학과 + 주제 질문에서는 **학과 필터링만** 적용하고 주제는 벡터 검색에 맡길 것\n   - 예: "컴공 인공지능" → 컴퓨터 관련 학과만 필터링, 인공지능은 벡터로 검색\n\n2. **교수명 필터링**\n   - 교수명이 포함된 경우: `c.professor LIKE \'%교수명%\'`\n\n3. **주제별 검색 규칙**\n   - **학과 + 주제**: 학과 필터만 적용, 주제는 벡터 검색으로 처리\n   - **특정 주제만** (학과 언급 없음): 전체 테이블 스캔 허용, 모든 강의 반환\n   - **교수 + 주제**: 교수 필터만 적용, 주제는 벡터 검색으로 처리\n\n4. **SELECT 절**\n   - 항상 `c.id`를 포함하여 FAISS 검색 시 필터링에 사용\n   - 예: `SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c`\n\n## 학과명 매핑\n- "컴공" → "컴퓨터인공지능학부" (LIKE \'%컴퓨터인공지능학부%\')\n- "전전" → "전자전기공학부" (LIKE \'%전자전기공학부%\' OR LIKE \'%전자%\')\n- "경영" → "경영학과" (LIKE \'%경영%\')\n- "기계" → "기계공학과" (LIKE \'%기계%\')\n\n## 응답 형식\n\nSQL 쿼리만 반환하세요. 설명이나 JSON 형식은 필요 없습니다.\n특정 주제만 검색할 때는 전체 테이블을 반환하여 벡터 검색에서 처리하도록 합니다.\n\n```sql\nSELECT ... FROM ... WHERE ...\n```\n\n## 예시\n\n**쿼리**: "컴공에서 인공지능 관련 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE (c.department LIKE \'%컴퓨터%\' OR c.department_full_name LIKE \'%컴퓨터%\')\n```\n\n**쿼리**: "송현제 교수님 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE c.professor LIKE \'%송현제%\'\n```\n\n**쿼리**: "머신러닝 관련 수업 알려줘"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode\nFROM jbnu_class_gpt c\n```\n\n**쿼리**: "전전 3학년 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE (c.department LIKE \'%전자%\' OR c.department_full_name LIKE \'%전자%\') AND c.target_grade = 3\n```\n\n사용자 쿼리: 머신러닝 관련 수업 알려줘', 'role': 'user'}], 'model': 'gpt-4o-mini', 'stream': False, 'temperature': 0.1}}
2025-09-28 21:02:06 | DEBUG | openai._base_client | Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-09-28 21:02:06 | DEBUG | httpcore.connection | close.started
2025-09-28 21:02:06 | DEBUG | httpcore.connection | close.complete
2025-09-28 21:02:06 | DEBUG | httpcore.connection | connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2025-09-28 21:02:06 | DEBUG | httpcore.connection | connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f3635a16bd0>
2025-09-28 21:02:06 | DEBUG | httpcore.connection | start_tls.started ssl_context=<ssl.SSLContext object at 0x7f3636315d00> server_hostname='api.openai.com' timeout=None
2025-09-28 21:02:06 | DEBUG | httpcore.connection | start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f3635a16c10>
2025-09-28 21:02:06 | DEBUG | httpcore.http11 | send_request_headers.started request=<Request [b'POST']>
2025-09-28 21:02:06 | DEBUG | httpcore.http11 | send_request_headers.complete
2025-09-28 21:02:06 | DEBUG | httpcore.http11 | send_request_body.started request=<Request [b'POST']>
2025-09-28 21:02:06 | DEBUG | httpcore.http11 | send_request_body.complete
2025-09-28 21:02:06 | DEBUG | httpcore.http11 | receive_response_headers.started request=<Request [b'POST']>
2025-09-28 21:02:08 | DEBUG | httpcore.http11 | receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 28 Sep 2025 12:02:08 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'jeonbuk-national-university'), (b'openai-processing-ms', b'1489'), (b'openai-project', b'proj_GsEDOgdDSI76JalmDfnt7uXv'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1517'), (b'x-ratelimit-limit-requests', b'30000'), (b'x-ratelimit-limit-tokens', b'150000000'), (b'x-ratelimit-remaining-requests', b'29999'), (b'x-ratelimit-remaining-tokens', b'149999130'), (b'x-ratelimit-reset-requests', b'2ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_fccee65f3e3d47b7a8e3f620dbbe971c'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98631705d9763271-ICN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-28 21:02:08 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 21:02:08 | DEBUG | httpcore.http11 | receive_response_body.started request=<Request [b'POST']>
2025-09-28 21:02:08 | DEBUG | httpcore.http11 | receive_response_body.complete
2025-09-28 21:02:08 | DEBUG | httpcore.http11 | response_closed.started
2025-09-28 21:02:08 | DEBUG | httpcore.http11 | response_closed.complete
2025-09-28 21:02:08 | DEBUG | openai._base_client | HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 28 Sep 2025 12:02:08 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'jeonbuk-national-university', 'openai-processing-ms': '1489', 'openai-project': 'proj_GsEDOgdDSI76JalmDfnt7uXv', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1517', 'x-ratelimit-limit-requests': '30000', 'x-ratelimit-limit-tokens': '150000000', 'x-ratelimit-remaining-requests': '29999', 'x-ratelimit-remaining-tokens': '149999130', 'x-ratelimit-reset-requests': '2ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_fccee65f3e3d47b7a8e3f620dbbe971c', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98631705d9763271-ICN', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-28 21:02:08 | DEBUG | openai._base_client | request_id: req_fccee65f3e3d47b7a8e3f620dbbe971c
2025-09-28 21:02:08 | WARNING | service.searchService | 🔍 LLM 응답 타입: <class 'langchain_core.messages.ai.AIMessage'>
2025-09-28 21:02:08 | WARNING | service.searchService | 🔍 LLM 응답 내용: ```sql
SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
```
2025-09-28 21:02:08 | WARNING | service.searchService | 🔍 LLM 응답 길이: 195
2025-09-28 21:02:08 | WARNING | service.searchService | 🔍 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
2025-09-28 21:02:08 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
2025-09-28 21:02:08 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 21:02:43 | INFO | service.searchService | 검색 시작: '머신러닝 관련 수업 알려줘'
2025-09-28 21:02:43 | DEBUG | openai._base_client | Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'X-Stainless-Raw-Response': 'true'}, 'files': None, 'idempotency_key': 'stainless-python-retry-3d751a23-3716-40ea-9239-b50dd3a16179', 'json_data': {'messages': [{'content': '# SQL 사전 필터링 쿼리 생성 프롬프트\n\n당신은 전북대학교 강의 검색 시스템의 SQL 쿼리 생성 전문가입니다.\n사용자 쿼리를 분석하여 FAISS 벡터 검색 전에 적용할 SQL 필터링 쿼리를 생성하세요.\n\n## 데이터베이스 테이블 구조\n\n### jbnu_class_gpt (강의 테이블)\n- id: 강의 고유 ID\n- name: 강의명\n- course_code: 과목코드\n- professor: 담당교수\n- credits: 학점\n- prerequisite: 선수과목\n- target_grade: 대상학년\n- schedule: 시간표\n- location: 강의실\n- delivery_mode: 수업방식 (대면/비대면)\n- department: 학과명 (간단한 형태)\n- department_full_name: 학과 전체명\n- original_description: 원본 강의 설명\n- gpt_description: GPT 생성 강의 설명\n\n## SQL 생성 규칙\n\n1. **학과 필터링이 필요한 경우**\n   - 학과명/별칭이 포함된 쿼리: "컴공", "전전", "경영학과" 등\n   - department 또는 department_full_name 필드 사용: `c.department LIKE \'%컴퓨터%\' OR c.department_full_name LIKE \'%컴퓨터%\'`\n   - **중요**: 학과 + 주제 질문에서는 **학과 필터링만** 적용하고 주제는 벡터 검색에 맡길 것\n   - 예: "컴공 인공지능" → 컴퓨터 관련 학과만 필터링, 인공지능은 벡터로 검색\n\n2. **교수명 필터링**\n   - 교수명이 포함된 경우: `c.professor LIKE \'%교수명%\'`\n\n3. **주제별 검색 규칙**\n   - **학과 + 주제**: 학과 필터만 적용, 주제는 벡터 검색으로 처리\n   - **특정 주제만** (학과 언급 없음): 전체 테이블 스캔 허용, 모든 강의 반환\n   - **교수 + 주제**: 교수 필터만 적용, 주제는 벡터 검색으로 처리\n\n4. **SELECT 절**\n   - 항상 `c.id`를 포함하여 FAISS 검색 시 필터링에 사용\n   - 예: `SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c`\n\n## 학과명 매핑\n- "컴공" → "컴퓨터인공지능학부" (LIKE \'%컴퓨터인공지능학부%\')\n- "전전" → "전자전기공학부" (LIKE \'%전자전기공학부%\' OR LIKE \'%전자%\')\n- "경영" → "경영학과" (LIKE \'%경영%\')\n- "기계" → "기계공학과" (LIKE \'%기계%\')\n\n## 응답 형식\n\nSQL 쿼리만 반환하세요. 설명이나 JSON 형식은 필요 없습니다.\n특정 주제만 검색할 때는 전체 테이블을 반환하여 벡터 검색에서 처리하도록 합니다.\n\n```sql\nSELECT ... FROM ... WHERE ...\n```\n\n## 예시\n\n**쿼리**: "컴공에서 인공지능 관련 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE (c.department LIKE \'%컴퓨터%\' OR c.department_full_name LIKE \'%컴퓨터%\')\n```\n\n**쿼리**: "송현제 교수님 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE c.professor LIKE \'%송현제%\'\n```\n\n**쿼리**: "머신러닝 관련 수업 알려줘"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode\nFROM jbnu_class_gpt c\n```\n\n**쿼리**: "전전 3학년 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE (c.department LIKE \'%전자%\' OR c.department_full_name LIKE \'%전자%\') AND c.target_grade = 3\n```\n\n사용자 쿼리: 머신러닝 관련 수업 알려줘', 'role': 'user'}], 'model': 'gpt-4o-mini', 'stream': False, 'temperature': 0.1}}
2025-09-28 21:02:43 | DEBUG | openai._base_client | Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-09-28 21:02:43 | DEBUG | httpcore.connection | close.started
2025-09-28 21:02:43 | DEBUG | httpcore.connection | close.complete
2025-09-28 21:02:43 | DEBUG | httpcore.connection | connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2025-09-28 21:02:43 | DEBUG | httpcore.connection | connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f3635ddea90>
2025-09-28 21:02:43 | DEBUG | httpcore.connection | start_tls.started ssl_context=<ssl.SSLContext object at 0x7f3636315d00> server_hostname='api.openai.com' timeout=None
2025-09-28 21:02:43 | DEBUG | httpcore.connection | start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f3635dde790>
2025-09-28 21:02:43 | DEBUG | httpcore.http11 | send_request_headers.started request=<Request [b'POST']>
2025-09-28 21:02:43 | DEBUG | httpcore.http11 | send_request_headers.complete
2025-09-28 21:02:43 | DEBUG | httpcore.http11 | send_request_body.started request=<Request [b'POST']>
2025-09-28 21:02:43 | DEBUG | httpcore.http11 | send_request_body.complete
2025-09-28 21:02:43 | DEBUG | httpcore.http11 | receive_response_headers.started request=<Request [b'POST']>
2025-09-28 21:02:45 | DEBUG | httpcore.http11 | receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 28 Sep 2025 12:02:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'jeonbuk-national-university'), (b'openai-processing-ms', b'1918'), (b'openai-project', b'proj_GsEDOgdDSI76JalmDfnt7uXv'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1935'), (b'x-ratelimit-limit-requests', b'30000'), (b'x-ratelimit-limit-tokens', b'150000000'), (b'x-ratelimit-remaining-requests', b'29999'), (b'x-ratelimit-remaining-tokens', b'149999130'), (b'x-ratelimit-reset-requests', b'2ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_4ad213925c964630aee026028b23348f'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'986317eb9c03ea18-ICN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-28 21:02:45 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 21:02:45 | DEBUG | httpcore.http11 | receive_response_body.started request=<Request [b'POST']>
2025-09-28 21:02:45 | DEBUG | httpcore.http11 | receive_response_body.complete
2025-09-28 21:02:45 | DEBUG | httpcore.http11 | response_closed.started
2025-09-28 21:02:45 | DEBUG | httpcore.http11 | response_closed.complete
2025-09-28 21:02:45 | DEBUG | openai._base_client | HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 28 Sep 2025 12:02:45 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'jeonbuk-national-university', 'openai-processing-ms': '1918', 'openai-project': 'proj_GsEDOgdDSI76JalmDfnt7uXv', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1935', 'x-ratelimit-limit-requests': '30000', 'x-ratelimit-limit-tokens': '150000000', 'x-ratelimit-remaining-requests': '29999', 'x-ratelimit-remaining-tokens': '149999130', 'x-ratelimit-reset-requests': '2ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_4ad213925c964630aee026028b23348f', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '986317eb9c03ea18-ICN', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-28 21:02:45 | DEBUG | openai._base_client | request_id: req_4ad213925c964630aee026028b23348f
2025-09-28 21:02:45 | WARNING | service.searchService | 🔍 LLM 응답 타입: <class 'langchain_core.messages.ai.AIMessage'>
2025-09-28 21:02:45 | WARNING | service.searchService | 🔍 LLM 응답 내용: ```sql
SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
```
2025-09-28 21:02:45 | WARNING | service.searchService | 🔍 LLM 응답 길이: 195
2025-09-28 21:02:45 | WARNING | service.searchService | 🔍 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
2025-09-28 21:02:45 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
2025-09-28 21:02:45 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 21:03:24 | INFO | service.searchService | 검색 시작: '머신러닝 관련 수업 알려줘'
2025-09-28 21:03:24 | DEBUG | openai._base_client | Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'X-Stainless-Raw-Response': 'true'}, 'files': None, 'idempotency_key': 'stainless-python-retry-3724007c-4b1d-4cec-82b1-690f938fa2ec', 'json_data': {'messages': [{'content': '# SQL 사전 필터링 쿼리 생성 프롬프트\n\n당신은 전북대학교 강의 검색 시스템의 SQL 쿼리 생성 전문가입니다.\n사용자 쿼리를 분석하여 FAISS 벡터 검색 전에 적용할 SQL 필터링 쿼리를 생성하세요.\n\n## 데이터베이스 테이블 구조\n\n### jbnu_class_gpt (강의 테이블)\n- id: 강의 고유 ID\n- name: 강의명\n- course_code: 과목코드\n- professor: 담당교수\n- credits: 학점\n- prerequisite: 선수과목\n- target_grade: 대상학년\n- schedule: 시간표\n- location: 강의실\n- delivery_mode: 수업방식 (대면/비대면)\n- department: 학과명 (간단한 형태)\n- department_full_name: 학과 전체명\n- original_description: 원본 강의 설명\n- gpt_description: GPT 생성 강의 설명\n\n## SQL 생성 규칙\n\n1. **학과 필터링이 필요한 경우**\n   - 학과명/별칭이 포함된 쿼리: "컴공", "전전", "경영학과" 등\n   - department 또는 department_full_name 필드 사용: `c.department LIKE \'%컴퓨터%\' OR c.department_full_name LIKE \'%컴퓨터%\'`\n   - **중요**: 학과 + 주제 질문에서는 **학과 필터링만** 적용하고 주제는 벡터 검색에 맡길 것\n   - 예: "컴공 인공지능" → 컴퓨터 관련 학과만 필터링, 인공지능은 벡터로 검색\n\n2. **교수명 필터링**\n   - 교수명이 포함된 경우: `c.professor LIKE \'%교수명%\'`\n\n3. **주제별 검색 규칙**\n   - **학과 + 주제**: 학과 필터만 적용, 주제는 벡터 검색으로 처리\n   - **특정 주제만** (학과 언급 없음): 전체 테이블 스캔 허용, 모든 강의 반환\n   - **교수 + 주제**: 교수 필터만 적용, 주제는 벡터 검색으로 처리\n\n4. **SELECT 절**\n   - 항상 `c.id`를 포함하여 FAISS 검색 시 필터링에 사용\n   - 예: `SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c`\n\n## 학과명 매핑\n- "컴공" → "컴퓨터인공지능학부" (LIKE \'%컴퓨터인공지능학부%\')\n- "전전" → "전자전기공학부" (LIKE \'%전자전기공학부%\' OR LIKE \'%전자%\')\n- "경영" → "경영학과" (LIKE \'%경영%\')\n- "기계" → "기계공학과" (LIKE \'%기계%\')\n\n## 응답 형식\n\nSQL 쿼리만 반환하세요. 설명이나 JSON 형식은 필요 없습니다.\n특정 주제만 검색할 때는 전체 테이블을 반환하여 벡터 검색에서 처리하도록 합니다.\n\n```sql\nSELECT ... FROM ... WHERE ...\n```\n\n## 예시\n\n**쿼리**: "컴공에서 인공지능 관련 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE (c.department LIKE \'%컴퓨터%\' OR c.department_full_name LIKE \'%컴퓨터%\')\n```\n\n**쿼리**: "송현제 교수님 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE c.professor LIKE \'%송현제%\'\n```\n\n**쿼리**: "머신러닝 관련 수업 알려줘"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode\nFROM jbnu_class_gpt c\n```\n\n**쿼리**: "전전 3학년 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE (c.department LIKE \'%전자%\' OR c.department_full_name LIKE \'%전자%\') AND c.target_grade = 3\n```\n\n사용자 쿼리: 머신러닝 관련 수업 알려줘', 'role': 'user'}], 'model': 'gpt-4o-mini', 'stream': False, 'temperature': 0.1}}
2025-09-28 21:03:24 | DEBUG | openai._base_client | Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-09-28 21:03:24 | DEBUG | httpcore.connection | close.started
2025-09-28 21:03:24 | DEBUG | httpcore.connection | close.complete
2025-09-28 21:03:24 | DEBUG | httpcore.connection | connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2025-09-28 21:03:24 | DEBUG | httpcore.connection | connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f3635a176d0>
2025-09-28 21:03:24 | DEBUG | httpcore.connection | start_tls.started ssl_context=<ssl.SSLContext object at 0x7f3636315d00> server_hostname='api.openai.com' timeout=None
2025-09-28 21:03:24 | DEBUG | httpcore.connection | start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f3635a17450>
2025-09-28 21:03:24 | DEBUG | httpcore.http11 | send_request_headers.started request=<Request [b'POST']>
2025-09-28 21:03:24 | DEBUG | httpcore.http11 | send_request_headers.complete
2025-09-28 21:03:24 | DEBUG | httpcore.http11 | send_request_body.started request=<Request [b'POST']>
2025-09-28 21:03:24 | DEBUG | httpcore.http11 | send_request_body.complete
2025-09-28 21:03:24 | DEBUG | httpcore.http11 | receive_response_headers.started request=<Request [b'POST']>
2025-09-28 21:03:27 | DEBUG | httpcore.http11 | receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 28 Sep 2025 12:03:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'jeonbuk-national-university'), (b'openai-processing-ms', b'2716'), (b'openai-project', b'proj_GsEDOgdDSI76JalmDfnt7uXv'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2736'), (b'x-ratelimit-limit-requests', b'30000'), (b'x-ratelimit-limit-tokens', b'150000000'), (b'x-ratelimit-remaining-requests', b'29999'), (b'x-ratelimit-remaining-tokens', b'149999130'), (b'x-ratelimit-reset-requests', b'2ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_9eda1a238e3542098e3f3dc6f384f4d7'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'986318edeca6ea24-ICN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-28 21:03:27 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 21:03:27 | DEBUG | httpcore.http11 | receive_response_body.started request=<Request [b'POST']>
2025-09-28 21:03:27 | DEBUG | httpcore.http11 | receive_response_body.complete
2025-09-28 21:03:27 | DEBUG | httpcore.http11 | response_closed.started
2025-09-28 21:03:27 | DEBUG | httpcore.http11 | response_closed.complete
2025-09-28 21:03:27 | DEBUG | openai._base_client | HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 28 Sep 2025 12:03:27 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'jeonbuk-national-university', 'openai-processing-ms': '2716', 'openai-project': 'proj_GsEDOgdDSI76JalmDfnt7uXv', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2736', 'x-ratelimit-limit-requests': '30000', 'x-ratelimit-limit-tokens': '150000000', 'x-ratelimit-remaining-requests': '29999', 'x-ratelimit-remaining-tokens': '149999130', 'x-ratelimit-reset-requests': '2ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_9eda1a238e3542098e3f3dc6f384f4d7', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '986318edeca6ea24-ICN', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-28 21:03:27 | DEBUG | openai._base_client | request_id: req_9eda1a238e3542098e3f3dc6f384f4d7
2025-09-28 21:03:27 | WARNING | service.searchService | 🔍 LLM 응답 타입: <class 'langchain_core.messages.ai.AIMessage'>
2025-09-28 21:03:27 | WARNING | service.searchService | 🔍 LLM 응답 내용: ```sql
SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
```
2025-09-28 21:03:27 | WARNING | service.searchService | 🔍 LLM 응답 길이: 195
2025-09-28 21:03:27 | WARNING | service.searchService | 🔍 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
2025-09-28 21:03:27 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
2025-09-28 21:03:27 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 21:03:59 | INFO | service.searchService | 검색 시작: '머신러닝 관련 수업 알려줘'
2025-09-28 21:03:59 | DEBUG | openai._base_client | Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'X-Stainless-Raw-Response': 'true'}, 'files': None, 'idempotency_key': 'stainless-python-retry-511d11e2-333e-4b9b-a890-fb540d101e82', 'json_data': {'messages': [{'content': '# SQL 사전 필터링 쿼리 생성 프롬프트\n\n당신은 전북대학교 강의 검색 시스템의 SQL 쿼리 생성 전문가입니다.\n사용자 쿼리를 분석하여 FAISS 벡터 검색 전에 적용할 SQL 필터링 쿼리를 생성하세요.\n\n## 데이터베이스 테이블 구조\n\n### jbnu_class_gpt (강의 테이블)\n- id: 강의 고유 ID\n- name: 강의명\n- course_code: 과목코드\n- professor: 담당교수\n- credits: 학점\n- prerequisite: 선수과목\n- target_grade: 대상학년\n- schedule: 시간표\n- location: 강의실\n- delivery_mode: 수업방식 (대면/비대면)\n- department: 학과명 (간단한 형태)\n- department_full_name: 학과 전체명\n- original_description: 원본 강의 설명\n- gpt_description: GPT 생성 강의 설명\n\n## SQL 생성 규칙\n\n1. **학과 필터링이 필요한 경우**\n   - 학과명/별칭이 포함된 쿼리: "컴공", "전전", "경영학과" 등\n   - department 또는 department_full_name 필드 사용: `c.department LIKE \'%컴퓨터%\' OR c.department_full_name LIKE \'%컴퓨터%\'`\n   - **중요**: 학과 + 주제 질문에서는 **학과 필터링만** 적용하고 주제는 벡터 검색에 맡길 것\n   - 예: "컴공 인공지능" → 컴퓨터 관련 학과만 필터링, 인공지능은 벡터로 검색\n\n2. **교수명 필터링**\n   - 교수명이 포함된 경우: `c.professor LIKE \'%교수명%\'`\n\n3. **주제별 검색 규칙**\n   - **학과 + 주제**: 학과 필터만 적용, 주제는 벡터 검색으로 처리\n   - **특정 주제만** (학과 언급 없음): 전체 테이블 스캔 허용, 모든 강의 반환\n   - **교수 + 주제**: 교수 필터만 적용, 주제는 벡터 검색으로 처리\n\n4. **SELECT 절**\n   - 항상 `c.id`를 포함하여 FAISS 검색 시 필터링에 사용\n   - 예: `SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c`\n\n## 학과명 매핑\n- "컴공" → "컴퓨터인공지능학부" (LIKE \'%컴퓨터인공지능학부%\')\n- "전전" → "전자전기공학부" (LIKE \'%전자전기공학부%\' OR LIKE \'%전자%\')\n- "경영" → "경영학과" (LIKE \'%경영%\')\n- "기계" → "기계공학과" (LIKE \'%기계%\')\n\n## 응답 형식\n\nSQL 쿼리만 반환하세요. 설명이나 JSON 형식은 필요 없습니다.\n특정 주제만 검색할 때는 전체 테이블을 반환하여 벡터 검색에서 처리하도록 합니다.\n\n```sql\nSELECT ... FROM ... WHERE ...\n```\n\n## 예시\n\n**쿼리**: "컴공에서 인공지능 관련 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE (c.department LIKE \'%컴퓨터%\' OR c.department_full_name LIKE \'%컴퓨터%\')\n```\n\n**쿼리**: "송현제 교수님 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE c.professor LIKE \'%송현제%\'\n```\n\n**쿼리**: "머신러닝 관련 수업 알려줘"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode\nFROM jbnu_class_gpt c\n```\n\n**쿼리**: "전전 3학년 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE (c.department LIKE \'%전자%\' OR c.department_full_name LIKE \'%전자%\') AND c.target_grade = 3\n```\n\n사용자 쿼리: 머신러닝 관련 수업 알려줘', 'role': 'user'}], 'model': 'gpt-4o-mini', 'stream': False, 'temperature': 0.1}}
2025-09-28 21:03:59 | DEBUG | openai._base_client | Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-09-28 21:03:59 | DEBUG | httpcore.connection | close.started
2025-09-28 21:03:59 | DEBUG | httpcore.connection | close.complete
2025-09-28 21:03:59 | DEBUG | httpcore.connection | connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2025-09-28 21:03:59 | DEBUG | httpcore.connection | connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f3635d0d010>
2025-09-28 21:03:59 | DEBUG | httpcore.connection | start_tls.started ssl_context=<ssl.SSLContext object at 0x7f3636315d00> server_hostname='api.openai.com' timeout=None
2025-09-28 21:03:59 | DEBUG | httpcore.connection | start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f3635d0d090>
2025-09-28 21:03:59 | DEBUG | httpcore.http11 | send_request_headers.started request=<Request [b'POST']>
2025-09-28 21:03:59 | DEBUG | httpcore.http11 | send_request_headers.complete
2025-09-28 21:03:59 | DEBUG | httpcore.http11 | send_request_body.started request=<Request [b'POST']>
2025-09-28 21:03:59 | DEBUG | httpcore.http11 | send_request_body.complete
2025-09-28 21:03:59 | DEBUG | httpcore.http11 | receive_response_headers.started request=<Request [b'POST']>
2025-09-28 21:04:01 | DEBUG | httpcore.http11 | receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 28 Sep 2025 12:04:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'jeonbuk-national-university'), (b'openai-processing-ms', b'1423'), (b'openai-project', b'proj_GsEDOgdDSI76JalmDfnt7uXv'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1552'), (b'x-ratelimit-limit-requests', b'30000'), (b'x-ratelimit-limit-tokens', b'150000000'), (b'x-ratelimit-remaining-requests', b'29999'), (b'x-ratelimit-remaining-tokens', b'149999130'), (b'x-ratelimit-reset-requests', b'2ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_c06677ab0c074f3cb03ffe0e01e769f7'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'986319cb5f6fc44e-ICN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-28 21:04:01 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 21:04:01 | DEBUG | httpcore.http11 | receive_response_body.started request=<Request [b'POST']>
2025-09-28 21:04:01 | DEBUG | httpcore.http11 | receive_response_body.complete
2025-09-28 21:04:01 | DEBUG | httpcore.http11 | response_closed.started
2025-09-28 21:04:01 | DEBUG | httpcore.http11 | response_closed.complete
2025-09-28 21:04:01 | DEBUG | openai._base_client | HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 28 Sep 2025 12:04:01 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'jeonbuk-national-university', 'openai-processing-ms': '1423', 'openai-project': 'proj_GsEDOgdDSI76JalmDfnt7uXv', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1552', 'x-ratelimit-limit-requests': '30000', 'x-ratelimit-limit-tokens': '150000000', 'x-ratelimit-remaining-requests': '29999', 'x-ratelimit-remaining-tokens': '149999130', 'x-ratelimit-reset-requests': '2ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_c06677ab0c074f3cb03ffe0e01e769f7', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '986319cb5f6fc44e-ICN', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-28 21:04:01 | DEBUG | openai._base_client | request_id: req_c06677ab0c074f3cb03ffe0e01e769f7
2025-09-28 21:04:01 | WARNING | service.searchService | 🔍 LLM 응답 타입: <class 'langchain_core.messages.ai.AIMessage'>
2025-09-28 21:04:01 | WARNING | service.searchService | 🔍 LLM 응답 내용: ```sql
SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
```
2025-09-28 21:04:01 | WARNING | service.searchService | 🔍 LLM 응답 길이: 195
2025-09-28 21:04:01 | WARNING | service.searchService | 🔍 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
2025-09-28 21:04:01 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
2025-09-28 21:04:01 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 21:05:08 | INFO | service.searchService | 검색 시작: '머신러닝 관련 수업 알려줘'
2025-09-28 21:05:08 | DEBUG | openai._base_client | Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'X-Stainless-Raw-Response': 'true'}, 'files': None, 'idempotency_key': 'stainless-python-retry-d730e60d-ef0c-4756-865f-13ae81f98dad', 'json_data': {'messages': [{'content': '# SQL 사전 필터링 쿼리 생성 프롬프트\n\n당신은 전북대학교 강의 검색 시스템의 SQL 쿼리 생성 전문가입니다.\n사용자 쿼리를 분석하여 FAISS 벡터 검색 전에 적용할 SQL 필터링 쿼리를 생성하세요.\n\n## 데이터베이스 테이블 구조\n\n### jbnu_class_gpt (강의 테이블)\n- id: 강의 고유 ID\n- name: 강의명\n- course_code: 과목코드\n- professor: 담당교수\n- credits: 학점\n- prerequisite: 선수과목\n- target_grade: 대상학년\n- schedule: 시간표\n- location: 강의실\n- delivery_mode: 수업방식 (대면/비대면)\n- department: 학과명 (간단한 형태)\n- department_full_name: 학과 전체명\n- original_description: 원본 강의 설명\n- gpt_description: GPT 생성 강의 설명\n\n## SQL 생성 규칙\n\n1. **학과 필터링이 필요한 경우**\n   - 학과명/별칭이 포함된 쿼리: "컴공", "전전", "경영학과" 등\n   - department 또는 department_full_name 필드 사용: `c.department LIKE \'%컴퓨터%\' OR c.department_full_name LIKE \'%컴퓨터%\'`\n   - **중요**: 학과 + 주제 질문에서는 **학과 필터링만** 적용하고 주제는 벡터 검색에 맡길 것\n   - 예: "컴공 인공지능" → 컴퓨터 관련 학과만 필터링, 인공지능은 벡터로 검색\n\n2. **교수명 필터링**\n   - 교수명이 포함된 경우: `c.professor LIKE \'%교수명%\'`\n\n3. **주제별 검색 규칙**\n   - **학과 + 주제**: 학과 필터만 적용, 주제는 벡터 검색으로 처리\n   - **특정 주제만** (학과 언급 없음): 전체 테이블 스캔 허용, 모든 강의 반환\n   - **교수 + 주제**: 교수 필터만 적용, 주제는 벡터 검색으로 처리\n\n4. **SELECT 절**\n   - 항상 `c.id`를 포함하여 FAISS 검색 시 필터링에 사용\n   - 예: `SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c`\n\n## 학과명 매핑\n- "컴공" → "컴퓨터인공지능학부" (LIKE \'%컴퓨터인공지능학부%\')\n- "전전" → "전자전기공학부" (LIKE \'%전자전기공학부%\' OR LIKE \'%전자%\')\n- "경영" → "경영학과" (LIKE \'%경영%\')\n- "기계" → "기계공학과" (LIKE \'%기계%\')\n\n## 응답 형식\n\nSQL 쿼리만 반환하세요. 설명이나 JSON 형식은 필요 없습니다.\n특정 주제만 검색할 때는 전체 테이블을 반환하여 벡터 검색에서 처리하도록 합니다.\n\n```sql\nSELECT ... FROM ... WHERE ...\n```\n\n## 예시\n\n**쿼리**: "컴공에서 인공지능 관련 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE (c.department LIKE \'%컴퓨터%\' OR c.department_full_name LIKE \'%컴퓨터%\')\n```\n\n**쿼리**: "송현제 교수님 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE c.professor LIKE \'%송현제%\'\n```\n\n**쿼리**: "머신러닝 관련 수업 알려줘"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode\nFROM jbnu_class_gpt c\n```\n\n**쿼리**: "전전 3학년 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE (c.department LIKE \'%전자%\' OR c.department_full_name LIKE \'%전자%\') AND c.target_grade = 3\n```\n\n사용자 쿼리: 머신러닝 관련 수업 알려줘', 'role': 'user'}], 'model': 'gpt-4o-mini', 'stream': False, 'temperature': 0.1}}
2025-09-28 21:05:08 | DEBUG | openai._base_client | Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-09-28 21:05:08 | DEBUG | httpcore.connection | close.started
2025-09-28 21:05:08 | DEBUG | httpcore.connection | close.complete
2025-09-28 21:05:08 | DEBUG | httpcore.connection | connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2025-09-28 21:05:08 | DEBUG | httpcore.connection | connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f3635ddf990>
2025-09-28 21:05:08 | DEBUG | httpcore.connection | start_tls.started ssl_context=<ssl.SSLContext object at 0x7f3636315d00> server_hostname='api.openai.com' timeout=None
2025-09-28 21:05:08 | DEBUG | httpcore.connection | start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f3635ddc750>
2025-09-28 21:05:08 | DEBUG | httpcore.http11 | send_request_headers.started request=<Request [b'POST']>
2025-09-28 21:05:08 | DEBUG | httpcore.http11 | send_request_headers.complete
2025-09-28 21:05:08 | DEBUG | httpcore.http11 | send_request_body.started request=<Request [b'POST']>
2025-09-28 21:05:08 | DEBUG | httpcore.http11 | send_request_body.complete
2025-09-28 21:05:08 | DEBUG | httpcore.http11 | receive_response_headers.started request=<Request [b'POST']>
2025-09-28 21:05:10 | DEBUG | httpcore.http11 | receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 28 Sep 2025 12:05:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'jeonbuk-national-university'), (b'openai-processing-ms', b'1720'), (b'openai-project', b'proj_GsEDOgdDSI76JalmDfnt7uXv'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1733'), (b'x-ratelimit-limit-requests', b'30000'), (b'x-ratelimit-limit-tokens', b'150000000'), (b'x-ratelimit-remaining-requests', b'29999'), (b'x-ratelimit-remaining-tokens', b'149999130'), (b'x-ratelimit-reset-requests', b'2ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_078480cfb6734afc984631d700ebd8c5'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98631b79ee9f0dbb-ICN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-28 21:05:10 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 21:05:10 | DEBUG | httpcore.http11 | receive_response_body.started request=<Request [b'POST']>
2025-09-28 21:05:10 | DEBUG | httpcore.http11 | receive_response_body.complete
2025-09-28 21:05:10 | DEBUG | httpcore.http11 | response_closed.started
2025-09-28 21:05:10 | DEBUG | httpcore.http11 | response_closed.complete
2025-09-28 21:05:10 | DEBUG | openai._base_client | HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 28 Sep 2025 12:05:10 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'jeonbuk-national-university', 'openai-processing-ms': '1720', 'openai-project': 'proj_GsEDOgdDSI76JalmDfnt7uXv', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1733', 'x-ratelimit-limit-requests': '30000', 'x-ratelimit-limit-tokens': '150000000', 'x-ratelimit-remaining-requests': '29999', 'x-ratelimit-remaining-tokens': '149999130', 'x-ratelimit-reset-requests': '2ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_078480cfb6734afc984631d700ebd8c5', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98631b79ee9f0dbb-ICN', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-28 21:05:10 | DEBUG | openai._base_client | request_id: req_078480cfb6734afc984631d700ebd8c5
2025-09-28 21:05:10 | WARNING | service.searchService | 🔍 LLM 응답 타입: <class 'langchain_core.messages.ai.AIMessage'>
2025-09-28 21:05:10 | WARNING | service.searchService | 🔍 LLM 응답 내용: ```sql
SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
```
2025-09-28 21:05:10 | WARNING | service.searchService | 🔍 LLM 응답 길이: 195
2025-09-28 21:05:10 | WARNING | service.searchService | 🔍 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
2025-09-28 21:05:10 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
2025-09-28 21:05:10 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 21:05:46 | INFO | service.searchService | 검색 시작: '머신러닝 관련 수업 알려줘'
2025-09-28 21:05:46 | DEBUG | openai._base_client | Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'X-Stainless-Raw-Response': 'true'}, 'files': None, 'idempotency_key': 'stainless-python-retry-e8ed4cbf-156a-4600-a9e9-39599eeeddff', 'json_data': {'messages': [{'content': '# SQL 사전 필터링 쿼리 생성 프롬프트\n\n당신은 전북대학교 강의 검색 시스템의 SQL 쿼리 생성 전문가입니다.\n사용자 쿼리를 분석하여 FAISS 벡터 검색 전에 적용할 SQL 필터링 쿼리를 생성하세요.\n\n## 데이터베이스 테이블 구조\n\n### jbnu_class_gpt (강의 테이블)\n- id: 강의 고유 ID\n- name: 강의명\n- course_code: 과목코드\n- professor: 담당교수\n- credits: 학점\n- prerequisite: 선수과목\n- target_grade: 대상학년\n- schedule: 시간표\n- location: 강의실\n- delivery_mode: 수업방식 (대면/비대면)\n- department: 학과명 (간단한 형태)\n- department_full_name: 학과 전체명\n- original_description: 원본 강의 설명\n- gpt_description: GPT 생성 강의 설명\n\n## SQL 생성 규칙\n\n1. **학과 필터링이 필요한 경우**\n   - 학과명/별칭이 포함된 쿼리: "컴공", "전전", "경영학과" 등\n   - department 또는 department_full_name 필드 사용: `c.department LIKE \'%컴퓨터%\' OR c.department_full_name LIKE \'%컴퓨터%\'`\n   - **중요**: 학과 + 주제 질문에서는 **학과 필터링만** 적용하고 주제는 벡터 검색에 맡길 것\n   - 예: "컴공 인공지능" → 컴퓨터 관련 학과만 필터링, 인공지능은 벡터로 검색\n\n2. **교수명 필터링**\n   - 교수명이 포함된 경우: `c.professor LIKE \'%교수명%\'`\n\n3. **주제별 검색 규칙**\n   - **학과 + 주제**: 학과 필터만 적용, 주제는 벡터 검색으로 처리\n   - **특정 주제만** (학과 언급 없음): 전체 테이블 스캔 허용, 모든 강의 반환\n   - **교수 + 주제**: 교수 필터만 적용, 주제는 벡터 검색으로 처리\n\n4. **SELECT 절**\n   - 항상 `c.id`를 포함하여 FAISS 검색 시 필터링에 사용\n   - 예: `SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name FROM jbnu_class_gpt c`\n\n## 학과명 매핑\n- "컴공" → "컴퓨터인공지능학부" (LIKE \'%컴퓨터인공지능학부%\')\n- "전전" → "전자전기공학부" (LIKE \'%전자전기공학부%\' OR LIKE \'%전자%\')\n- "경영" → "경영학과" (LIKE \'%경영%\')\n- "기계" → "기계공학과" (LIKE \'%기계%\')\n\n## 응답 형식\n\nSQL 쿼리만 반환하세요. 설명이나 JSON 형식은 필요 없습니다.\n특정 주제만 검색할 때는 전체 테이블을 반환하여 벡터 검색에서 처리하도록 합니다.\n\n```sql\nSELECT ... FROM ... WHERE ...\n```\n\n## 예시\n\n**쿼리**: "컴공에서 인공지능 관련 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE (c.department LIKE \'%컴퓨터%\' OR c.department_full_name LIKE \'%컴퓨터%\')\n```\n\n**쿼리**: "송현제 교수님 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE c.professor LIKE \'%송현제%\'\n```\n\n**쿼리**: "머신러닝 관련 수업 알려줘"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode\nFROM jbnu_class_gpt c\n```\n\n**쿼리**: "전전 3학년 수업"\n```sql\nSELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name\nFROM jbnu_class_gpt c\nWHERE (c.department LIKE \'%전자%\' OR c.department_full_name LIKE \'%전자%\') AND c.target_grade = 3\n```\n\n사용자 쿼리: 머신러닝 관련 수업 알려줘', 'role': 'user'}], 'model': 'gpt-4o-mini', 'stream': False, 'temperature': 0.1}}
2025-09-28 21:05:46 | DEBUG | openai._base_client | Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-09-28 21:05:46 | DEBUG | httpcore.connection | close.started
2025-09-28 21:05:46 | DEBUG | httpcore.connection | close.complete
2025-09-28 21:05:46 | DEBUG | httpcore.connection | connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2025-09-28 21:05:46 | DEBUG | httpcore.connection | connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f3635a17010>
2025-09-28 21:05:46 | DEBUG | httpcore.connection | start_tls.started ssl_context=<ssl.SSLContext object at 0x7f3636315d00> server_hostname='api.openai.com' timeout=None
2025-09-28 21:05:46 | DEBUG | httpcore.connection | start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f3635de6a90>
2025-09-28 21:05:46 | DEBUG | httpcore.http11 | send_request_headers.started request=<Request [b'POST']>
2025-09-28 21:05:46 | DEBUG | httpcore.http11 | send_request_headers.complete
2025-09-28 21:05:46 | DEBUG | httpcore.http11 | send_request_body.started request=<Request [b'POST']>
2025-09-28 21:05:46 | DEBUG | httpcore.http11 | send_request_body.complete
2025-09-28 21:05:46 | DEBUG | httpcore.http11 | receive_response_headers.started request=<Request [b'POST']>
2025-09-28 21:05:48 | DEBUG | httpcore.http11 | receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 28 Sep 2025 12:05:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'jeonbuk-national-university'), (b'openai-processing-ms', b'1818'), (b'openai-project', b'proj_GsEDOgdDSI76JalmDfnt7uXv'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1843'), (b'x-ratelimit-limit-requests', b'30000'), (b'x-ratelimit-limit-tokens', b'150000000'), (b'x-ratelimit-remaining-requests', b'29999'), (b'x-ratelimit-remaining-tokens', b'149999130'), (b'x-ratelimit-reset-requests', b'2ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_ca3e3f5657ac4533a551407dcd0b99e1'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98631c636c69ea97-ICN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-09-28 21:05:48 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 21:05:48 | DEBUG | httpcore.http11 | receive_response_body.started request=<Request [b'POST']>
2025-09-28 21:05:48 | DEBUG | httpcore.http11 | receive_response_body.complete
2025-09-28 21:05:48 | DEBUG | httpcore.http11 | response_closed.started
2025-09-28 21:05:48 | DEBUG | httpcore.http11 | response_closed.complete
2025-09-28 21:05:48 | DEBUG | openai._base_client | HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 28 Sep 2025 12:05:48 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'jeonbuk-national-university', 'openai-processing-ms': '1818', 'openai-project': 'proj_GsEDOgdDSI76JalmDfnt7uXv', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1843', 'x-ratelimit-limit-requests': '30000', 'x-ratelimit-limit-tokens': '150000000', 'x-ratelimit-remaining-requests': '29999', 'x-ratelimit-remaining-tokens': '149999130', 'x-ratelimit-reset-requests': '2ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_ca3e3f5657ac4533a551407dcd0b99e1', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98631c636c69ea97-ICN', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-09-28 21:05:48 | DEBUG | openai._base_client | request_id: req_ca3e3f5657ac4533a551407dcd0b99e1
2025-09-28 21:05:48 | WARNING | service.searchService | 🔍 LLM 응답 타입: <class 'langchain_core.messages.ai.AIMessage'>
2025-09-28 21:05:48 | WARNING | service.searchService | 🔍 LLM 응답 내용: ```sql
SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
```
2025-09-28 21:05:48 | WARNING | service.searchService | 🔍 LLM 응답 길이: 195
2025-09-28 21:05:48 | WARNING | service.searchService | 🔍 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
2025-09-28 21:05:48 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name, c.professor, c.credits, c.target_grade, c.schedule, c.location, c.delivery_mode
FROM jbnu_class_gpt c
2025-09-28 21:05:48 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 21:17:17 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 21:17:17 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 21:17:17 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 21:34:03 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 21:34:03 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 21:34:03 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 21:36:37 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 21:36:37 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 21:36:37 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 21:39:02 | INFO | service.searchService | 검색 시작: '컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-28 21:39:03 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 21:39:03 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name
FROM jbnu_class_gpt c
WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')
```
2025-09-28 21:39:03 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name
FROM jbnu_class_gpt c
WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')
2025-09-28 21:39:03 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department_full_name as department_name
FROM jbnu_class_gpt c
WHERE (c.department LIKE '%컴퓨터%' OR c.department_full_name LIKE '%컴퓨터%')
2025-09-28 21:39:03 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 21:40:54 | INFO | service.searchService | 검색 시작: '컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-28 21:40:55 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 21:40:55 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
```
2025-09-28 21:40:55 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-28 21:40:55 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-28 21:40:55 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 21:41:10 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 21:41:10 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 21:41:10 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 21:41:21 | INFO | service.searchService | 검색 시작: '컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-28 21:41:22 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 21:41:22 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
```
2025-09-28 21:41:22 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-28 21:41:22 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-28 21:41:22 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-28 21:43:43 | INFO | service.searchService | 검색 시작: '컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-28 21:43:45 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 21:43:45 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
```
2025-09-28 21:43:45 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-28 21:43:45 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-28 21:43:47 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-28 21:43:47 | INFO | service.searchService | 검색 완료: 3개 결과
2025-09-28 21:45:32 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 21:45:32 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 21:45:32 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 21:52:45 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 21:52:45 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 21:52:45 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 21:53:13 | INFO | service.searchService | 검색 시작: '학과를 찾을 수 없습니다. 컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-28 21:53:14 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 21:53:14 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
```
2025-09-28 21:53:14 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-28 21:53:14 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-28 21:53:18 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-28 21:53:18 | INFO | service.searchService | 검색 완료: 10개 결과
2025-09-28 21:56:41 | INFO | service.searchService | 검색 시작: '학과를 찾을 수 없습니다. 컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-28 21:56:42 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 21:56:42 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
```
2025-09-28 21:56:42 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-28 21:56:42 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-28 21:56:43 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-28 21:56:43 | INFO | service.searchService | 검색 완료: 10개 결과
2025-09-28 21:57:25 | INFO | service.searchService | 검색 시작: '학과를 찾을 수 없습니다. 컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-28 21:57:26 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 21:57:26 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
```
2025-09-28 21:57:26 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-28 21:57:26 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-28 21:57:27 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-28 21:57:27 | INFO | service.searchService | 검색 완료: 10개 결과
2025-09-28 21:58:25 | INFO | service.searchService | 검색 시작: '학과를 찾을 수 없습니다. 컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-28 21:58:26 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 21:58:26 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
```
2025-09-28 21:58:26 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-28 21:58:26 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-28 21:58:27 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-28 21:58:27 | INFO | service.searchService | 검색 완료: 10개 결과
2025-09-28 22:01:53 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 22:01:53 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 22:01:53 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 22:02:17 | INFO | service.searchService | 검색 시작: '학과를 찾을 수 없습니다. 컴공에서 인공지능관련 수업을 찾아줘'
2025-09-28 22:02:19 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 22:02:19 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
```
2025-09-28 22:02:19 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-28 22:02:19 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-28 22:02:22 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-28 22:02:22 | INFO | service.searchService | 검색 완료: 10개 결과
2025-09-28 22:06:15 | INFO | service.searchService | 검색 시작: '인공지능'
2025-09-28 22:06:17 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 22:06:17 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
```
2025-09-28 22:06:17 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
2025-09-28 22:06:17 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
2025-09-28 22:06:32 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-28 22:06:32 | INFO | service.searchService | 검색 완료: 3개 결과
2025-09-28 22:06:37 | INFO | service.searchService | 검색 시작: '인공지능'
2025-09-28 22:06:38 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 22:06:38 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
```
2025-09-28 22:06:38 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
2025-09-28 22:06:38 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
2025-09-28 22:06:51 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-28 22:06:51 | INFO | service.searchService | 검색 완료: 3개 결과
2025-09-28 22:10:26 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 22:10:26 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 22:10:26 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 22:10:40 | INFO | service.searchService | 검색 시작: '인공지능'
2025-09-28 22:10:41 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 22:10:41 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
```
2025-09-28 22:10:41 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
2025-09-28 22:10:41 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
2025-09-28 22:10:54 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-28 22:10:54 | INFO | service.searchService | 검색 완료: 3개 결과
2025-09-28 22:11:07 | INFO | service.searchService | 검색 시작: '학과를 찾을 수 없습니다. 컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-28 22:11:08 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 22:11:08 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
```
2025-09-28 22:11:08 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-28 22:11:08 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-28 22:11:09 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-28 22:11:09 | INFO | service.searchService | 검색 완료: 10개 결과
2025-09-28 22:13:40 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 22:13:40 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 22:13:40 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 22:14:16 | INFO | service.searchService | 검색 시작: '컴퓨터인공지능학부 컴공에서 인공지능 관련 수업을 찾아줘'
2025-09-28 22:14:17 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 22:14:17 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
```
2025-09-28 22:14:17 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-28 22:14:17 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-28 22:14:20 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-28 22:14:20 | INFO | service.searchService | 검색 완료: 10개 결과
2025-09-28 22:14:57 | INFO | service.searchService | 검색 시작: '컴퓨터인공지능학부 컴공에서 인공지능 관련 수업을 찾아줘
인공지능으 누가 가르쳐??'
2025-09-28 22:14:58 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 22:14:58 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
```
2025-09-28 22:14:58 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-28 22:14:58 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-28 22:14:59 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-28 22:14:59 | INFO | service.searchService | 검색 완료: 10개 결과
2025-09-28 22:18:02 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 22:18:02 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 22:18:02 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 22:18:16 | INFO | service.searchService | 검색 시작: '컴공에서 인공지능 관련 수업'
2025-09-28 22:18:19 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 22:18:19 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
```
2025-09-28 22:18:19 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-28 22:18:19 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-28 22:18:19 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-28 22:18:19 | INFO | service.searchService | 검색 완료: 2개 결과
2025-09-28 22:19:17 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 22:19:17 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 22:19:17 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 22:19:46 | INFO | service.searchService | 검색 시작: '컴퓨터인공지능학부 컴공에서 인공지능 관련 수업을 찾아줘'
2025-09-28 22:19:47 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 22:19:47 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
```
2025-09-28 22:19:47 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-28 22:19:47 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-28 22:19:51 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-28 22:19:51 | INFO | service.searchService | 검색 완료: 10개 결과
2025-09-28 22:20:21 | INFO | service.searchService | 검색 시작: '컴퓨터인공지능학부 컴공에서 인공지능 관련 수업을 찾아줘
컴퓨터공학총론은 누가 가르쳐?'
2025-09-28 22:20:24 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 22:20:24 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
```

```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.name LIKE '%컴퓨터공학총론%'
```
2025-09-28 22:20:24 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-28 22:20:24 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-28 22:20:25 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-28 22:20:25 | INFO | service.searchService | 검색 완료: 10개 결과
2025-09-28 22:26:20 | INFO | service.searchService | 검색 시작: '컴퓨터인공지능학부 컴공에서 인공지능 관련 수업을 찾아줘'
2025-09-28 22:26:22 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 22:26:22 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
```
2025-09-28 22:26:22 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-28 22:26:22 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-28 22:26:23 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-28 22:26:23 | INFO | service.searchService | 검색 완료: 10개 결과
2025-09-28 22:27:29 | INFO | service.searchService | 검색 시작: '컴퓨터인공지능학부 컴공에서 인공지능 관련 수업을 찾아줘'
2025-09-28 22:27:30 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 22:27:30 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
```
2025-09-28 22:27:30 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-28 22:27:30 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-28 22:27:32 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-28 22:27:32 | INFO | service.searchService | 검색 완료: 10개 결과
2025-09-28 22:31:50 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 22:31:50 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 22:31:50 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 22:32:30 | INFO | service.searchService | 검색 시작: '컴퓨터인공지능학부 컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-28 22:32:32 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 22:32:32 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
```
2025-09-28 22:32:32 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-28 22:32:32 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-28 22:32:35 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-28 22:32:35 | INFO | service.searchService | 검색 완료: 10개 결과
2025-09-28 22:33:58 | INFO | service.searchService | 검색 시작: '컴퓨터인공지능학부 컴공에서 인공지능 관련된 수업을 찾아줘
오일석 교수님은 또 무슨 수업 가르치셔?'
2025-09-28 22:34:01 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 22:34:01 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
```

```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.professor LIKE '%오일석%'
```
2025-09-28 22:34:01 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-28 22:34:01 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-28 22:34:01 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-28 22:34:01 | INFO | service.searchService | 검색 완료: 10개 결과
2025-09-28 22:38:14 | INFO | service.searchService | 검색 시작: '컴퓨터인공지능학부 컴공에서 인공지능 관련 수업을 찾아줘
오일석 교수님은 또 무슨 수업 가르치셔?'
2025-09-28 22:38:19 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 22:38:19 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%' AND c.professor LIKE '%오일석%'
```
2025-09-28 22:38:19 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%' AND c.professor LIKE '%오일석%'
2025-09-28 22:38:19 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%' AND c.professor LIKE '%오일석%'
2025-09-28 22:38:21 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-28 22:38:21 | INFO | service.searchService | 검색 완료: 2개 결과
2025-09-28 23:33:00 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 23:33:00 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 23:33:00 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 23:33:28 | INFO | service.searchService | 검색 시작: '컴퓨터인공지능학부 컴공에서 인공지능 관련 수업을 찾아줘'
2025-09-28 23:33:30 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 23:33:30 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
```
2025-09-28 23:33:30 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-28 23:33:30 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-28 23:33:33 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-28 23:33:33 | INFO | service.searchService | 검색 완료: 10개 결과
2025-09-28 23:35:00 | INFO | service.searchService | 검색 시작: '컴퓨터인공지능학부 컴공에서 인공지능 관련 수업을 찾아줘
정종욱교수님은 뭘 가르쳐?'
2025-09-28 23:35:02 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 23:35:02 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%' AND c.professor LIKE '%정종욱%'
```
2025-09-28 23:35:02 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%' AND c.professor LIKE '%정종욱%'
2025-09-28 23:35:02 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%' AND c.professor LIKE '%정종욱%'
2025-09-28 23:35:03 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-28 23:35:03 | INFO | service.searchService | 검색 완료: 2개 결과
2025-09-28 23:53:43 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 23:53:43 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 23:53:43 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 23:56:19 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-28 23:56:19 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-28 23:56:19 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-28 23:57:33 | INFO | service.searchService | 검색 시작: '컴퓨터인공지능학부 컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-28 23:57:35 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 23:57:35 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
```
2025-09-28 23:57:35 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-28 23:57:35 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-28 23:57:37 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-28 23:57:37 | INFO | service.searchService | 검색 완료: 3개 결과
2025-09-28 23:57:57 | INFO | service.searchService | 검색 시작: '컴퓨터인공지능학부 컴공에서 인공지능 관련된 수업을 찾아줘
정종욱 교수님은 또 뭐 가르치셔?'
2025-09-28 23:57:59 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 23:57:59 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%' AND c.professor LIKE '%정종욱%'
```
2025-09-28 23:57:59 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%' AND c.professor LIKE '%정종욱%'
2025-09-28 23:57:59 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%' AND c.professor LIKE '%정종욱%'
2025-09-28 23:58:00 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-28 23:58:00 | INFO | service.searchService | 검색 완료: 2개 결과
2025-09-28 23:59:11 | INFO | service.searchService | 검색 시작: '컴퓨터인공지능학부 컴공에서 인공지능 관련된 수업을 찾아줘
정종욱 교수님은 또 뭐 가르치셔?
근데 나는 인공지능을 공부하고 싶은데 인공지능과 반도체를 결합한 융합공부를 하고싶어 커리큘럼을 짜줄래?'
2025-09-28 23:59:15 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-28 23:59:15 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
```

```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.professor LIKE '%정종욱%'
```

```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
```
2025-09-28 23:59:15 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-28 23:59:15 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-28 23:59:17 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-28 23:59:17 | INFO | service.searchService | 검색 완료: 3개 결과
2025-09-29 00:39:18 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 00:39:18 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 00:39:18 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 00:42:45 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 00:42:45 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 00:42:45 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 00:43:10 | INFO | service.searchService | 검색 시작: '컴퓨터인공지능학부 컴공에서 인공지능 관련 수업을 찾아줘'
2025-09-29 00:43:12 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-29 00:43:12 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
```
2025-09-29 00:43:12 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-29 00:43:12 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-29 00:43:14 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-29 00:43:14 | INFO | service.searchService | 검색 완료: 3개 결과
2025-09-29 01:13:41 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 01:13:41 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 01:13:41 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 01:17:41 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 01:17:41 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 01:17:41 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 01:18:06 | INFO | service.searchService | 검색 시작: '컴퓨터인공지능학부 컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-29 01:18:08 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-29 01:18:08 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
```
2025-09-29 01:18:08 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-29 01:18:08 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-29 01:18:11 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-29 01:18:11 | INFO | service.searchService | 검색 완료: 3개 결과
2025-09-29 01:18:31 | INFO | service.searchService | 검색 시작: '컴퓨터인공지능학부 컴공에서 인공지능 관련된 수업을 찾아줘
그러면 정종욱 교수님은 또 무슨수업 가르치셔?'
2025-09-29 01:18:34 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-29 01:18:34 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
```

```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.professor LIKE '%정종욱%'
```
2025-09-29 01:18:34 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-29 01:18:34 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-29 01:18:35 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-29 01:18:35 | INFO | service.searchService | 검색 완료: 3개 결과
2025-09-29 01:33:23 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 01:33:23 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 01:33:23 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 01:34:42 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 01:34:42 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 01:34:42 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 01:35:06 | INFO | service.searchService | 검색 시작: '컴퓨터인공지능학부 컴공에서 인공지능 관련 수업을 찾아줘'
2025-09-29 01:35:09 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-29 01:35:09 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
```
2025-09-29 01:35:09 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-29 01:35:09 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-29 01:35:12 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-29 01:35:12 | INFO | service.searchService | 검색 완료: 3개 결과
2025-09-29 01:38:56 | INFO | service.searchService | 검색 시작: '컴퓨터공학과 관련 강의 추천해주세요'
2025-09-29 01:38:58 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-29 01:38:58 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
```
2025-09-29 01:38:58 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-29 01:38:58 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-29 01:38:59 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-29 01:38:59 | INFO | service.searchService | 검색 완료: 3개 결과
2025-09-29 01:41:02 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 01:41:02 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 01:41:02 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 01:41:31 | INFO | service.searchService | 검색 시작: '컴퓨터인공지능학부 컴공에서 인공지능 관련 수업을 찾아줘'
2025-09-29 01:41:33 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-29 01:41:33 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
```
2025-09-29 01:41:33 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-29 01:41:33 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-29 01:41:36 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-29 01:41:36 | INFO | service.searchService | 검색 완료: 3개 결과
2025-09-29 01:41:47 | INFO | service.searchService | 검색 시작: '### Task:
Suggest 3-5 relevant follow-up questions or prompts that the user might naturally ask next in this conversation as a **user**, based on the chat history, to help continue or deepen the discussion.
### Guidelines:
- Write all follow-up questions from the user’s point of view, directed to the assistant.
- Make questions concise, clear, and directly related to the discussed topic(s).
- Only suggest follow-ups that make sense given the chat content and do not repeat what was already covered.
- If the conversation is very short or not specific, suggest more general (but relevant) follow-ups the user might ask.
- Use the conversation's primary language; default to English if multilingual.
- Response must be a JSON array of strings, no extra text or formatting.
### Output:
JSON format: { "follow_ups": ["Question 1?", "Question 2?", "Question 3?"] }
### Chat History:
<chat_history>
USER: 컴공에서 인공지능 관련 수업을 찾아줘
ASSISTANT: 사용자 질문에 대한 답변을 드리겠습니다. 컴퓨터인공지능학부에서 제공하는 과목들에 대한 정보를 아래와 같이 정리했습니다.

**1. 인공지능**
- 학과: 컴퓨터인공지능학부
- 교수: 나승훈
- 강의실: 전주:공과대학 7호관 301
- 시간표: 화 8-A, 화 8-B, 목 6-A, 목 6-B, 목 7-A, 목 7-B
- 학점: 3학점
- 기타: 본 강의에서는 인공지능의 이론적 기초를 다루며, 탐색 기반 문제 해결, Symbolic AI, 베이지안 네트워크, 기계 학습, 딥러닝, 강화학습 등을 포함합니다.

**2. 정보검색**
- 학과: 컴퓨터인공지능학부
- 교수: 이경순
- 강의실: 전주:공과대학 7호관 301
- 시간표: 화 8-A, 화 8-B, 화 9-A, 목 6-B, 목 7-A, 목 7-B
- 학점: 3학점
- 기타: 서치엔진 시스템의 기본 아키텍처와 관련 이론을 다루며, 웹크롤러, 색인구조, 질의어 표현, 검색 모델 및 성능 평가 방법 등을 학습합니다.

**3. 인간-컴퓨터상호작용**
- 학과: 컴퓨터인공지능학부
- 교수: 정종욱
- 강의실: 전주:공과대학 3호관 311
- 시간표: 월 3-A, 월 3-B, 월 4-A, 월 4-B, 수 3-A, 수 3-B
- 학점: 3학점
- 기타: 인간-컴퓨터 상호작용의 기본 원리를 학습하며, 사용자 중심 디자인(UCD), 사용성의 원리와 평가 방법, 인터페이스 설계 등을 다룹니다.

추가적인 정보가 필요하시면 언제든지 말씀해 주세요!
</chat_history>'
2025-09-29 01:41:50 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-29 01:41:50 | INFO | service.searchService | LLM 응답: {
  "follow_ups": [
    "이 강의들의 수업 방식은 어떻게 되나요?",
    "각 강의의 선수과목은 무엇인가요?",
    "이 강의들을 듣기 위한 추천 학년은 어떻게 되나요?",
    "교수님들에 대한 더 많은 정보가 있을까요?",
    "다른 관련 과목들도 추천해 줄 수 있나요?"
  ]
}
2025-09-29 01:41:50 | INFO | service.searchService | 추출된 SQL: None
2025-09-29 01:41:50 | WARNING | service.searchService | SQL 생성 실패, 빈 결과 반환: ### Task:
Suggest 3-5 relevant follow-up questions or prompts that the user might naturally ask next in this conversation as a **user**, based on the chat history, to help continue or deepen the discussion.
### Guidelines:
- Write all follow-up questions from the user’s point of view, directed to the assistant.
- Make questions concise, clear, and directly related to the discussed topic(s).
- Only suggest follow-ups that make sense given the chat content and do not repeat what was already covered.
- If the conversation is very short or not specific, suggest more general (but relevant) follow-ups the user might ask.
- Use the conversation's primary language; default to English if multilingual.
- Response must be a JSON array of strings, no extra text or formatting.
### Output:
JSON format: { "follow_ups": ["Question 1?", "Question 2?", "Question 3?"] }
### Chat History:
<chat_history>
USER: 컴공에서 인공지능 관련 수업을 찾아줘
ASSISTANT: 사용자 질문에 대한 답변을 드리겠습니다. 컴퓨터인공지능학부에서 제공하는 과목들에 대한 정보를 아래와 같이 정리했습니다.

**1. 인공지능**
- 학과: 컴퓨터인공지능학부
- 교수: 나승훈
- 강의실: 전주:공과대학 7호관 301
- 시간표: 화 8-A, 화 8-B, 목 6-A, 목 6-B, 목 7-A, 목 7-B
- 학점: 3학점
- 기타: 본 강의에서는 인공지능의 이론적 기초를 다루며, 탐색 기반 문제 해결, Symbolic AI, 베이지안 네트워크, 기계 학습, 딥러닝, 강화학습 등을 포함합니다.

**2. 정보검색**
- 학과: 컴퓨터인공지능학부
- 교수: 이경순
- 강의실: 전주:공과대학 7호관 301
- 시간표: 화 8-A, 화 8-B, 화 9-A, 목 6-B, 목 7-A, 목 7-B
- 학점: 3학점
- 기타: 서치엔진 시스템의 기본 아키텍처와 관련 이론을 다루며, 웹크롤러, 색인구조, 질의어 표현, 검색 모델 및 성능 평가 방법 등을 학습합니다.

**3. 인간-컴퓨터상호작용**
- 학과: 컴퓨터인공지능학부
- 교수: 정종욱
- 강의실: 전주:공과대학 3호관 311
- 시간표: 월 3-A, 월 3-B, 월 4-A, 월 4-B, 수 3-A, 수 3-B
- 학점: 3학점
- 기타: 인간-컴퓨터 상호작용의 기본 원리를 학습하며, 사용자 중심 디자인(UCD), 사용성의 원리와 평가 방법, 인터페이스 설계 등을 다룹니다.

추가적인 정보가 필요하시면 언제든지 말씀해 주세요!
</chat_history>
2025-09-29 01:41:50 | WARNING | service.searchService | LLM 원본 응답: {
  "follow_ups": [
    "이 강의들의 수업 방식은 어떻게 되나요?",
    "각 강의의 선수과목은 무엇인가요?",
    "이 강의들을 듣기 위한 추천 학년은 어떻게 되나요?",
    "교수님들에 대한 더 많은 정보가 있을까요?",
    "다른 관련 과목들도 추천해 줄 수 있나요?"
  ]
}
2025-09-29 01:41:50 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-29 01:42:29 | INFO | service.searchService | 검색 시작: '### Task:
Suggest 3-5 relevant follow-up questions or prompts that the user might naturally ask next in this conversation as a **user**, based on the chat history, to help continue or deepen the discussion.
### Guidelines:
- Write all follow-up questions from the user’s point of view, directed to the assistant.
- Make questions concise, clear, and directly related to the discussed topic(s).
- Only suggest follow-ups that make sense given the chat content and do not repeat what was already covered.
- If the conversation is very short or not specific, suggest more general (but relevant) follow-ups the user might ask.
- Use the conversation's primary language; default to English if multilingual.
- Response must be a JSON array of strings, no extra text or formatting.
### Output:
JSON format: { "follow_ups": ["Question 1?", "Question 2?", "Question 3?"] }
### Chat History:
<chat_history>
USER: 컴공에서 인공지능 관련 수업을 찾아줘
ASSISTANT: 사용자 질문에 대한 답변을 드리겠습니다. 컴퓨터인공지능학부에서 제공하는 과목들에 대한 정보를 아래와 같이 정리했습니다.

**1. 인공지능**
- 학과: 컴퓨터인공지능학부
- 교수: 나승훈
- 강의실: 전주:공과대학 7호관 301
- 시간표: 화 8-A, 화 8-B, 목 6-A, 목 6-B, 목 7-A, 목 7-B
- 학점: 3학점
- 기타: 본 강의에서는 인공지능의 이론적 기초를 다루며, 탐색 기반 문제 해결, Symbolic AI, 베이지안 네트워크, 기계 학습, 딥러닝, 강화학습 등을 포함합니다.

**2. 정보검색**
- 학과: 컴퓨터인공지능학부
- 교수: 이경순
- 강의실: 전주:공과대학 7호관 301
- 시간표: 화 8-A, 화 8-B, 화 9-A, 목 6-B, 목 7-A, 목 7-B
- 학점: 3학점
- 기타: 서치엔진 시스템의 기본 아키텍처와 관련 이론을 다루며, 웹크롤러, 색인구조, 질의어 표현, 검색 모델 및 성능 평가 방법 등을 학습합니다.

**3. 인간-컴퓨터상호작용**
- 학과: 컴퓨터인공지능학부
- 교수: 정종욱
- 강의실: 전주:공과대학 3호관 311
- 시간표: 월 3-A, 월 3-B, 월 4-A, 월 4-B, 수 3-A, 수 3-B
- 학점: 3학점
- 기타: 인간-컴퓨터 상호작용의 기본 원리를 학습하며, 사용자 중심 디자인(UCD), 사용성의 원리와 평가 방법, 인터페이스 설계 등을 다룹니다.

추가적인 정보가 필요하시면 언제든지 말씀해 주세요!
USER: 정종욱 교수님은 무슨 수업을 가르쳐?
ASSISTANT: 사용자 질문에 대한 검색 결과를 확인한 결과, 현재 컴퓨터공학과에서 인공지능 관련 수업이나 정종욱 교수님이 가르치는 수업에 대한 정보는 제공되지 않았습니다. 

**1. [과목명]**
- 학과: 컴퓨터공학과
- 교수: 정종욱 (정보 없음)
- 강의실: 정보 없음
- 시간표: 정보 없음
- 학점: 정보 없음
- 기타: 정보 없음

추가적인 정보가 필요하시거나 다른 질문이 있으시면 언제든지 말씀해 주세요. 도움이 될 수 있도록 최선을 다하겠습니다.
</chat_history>'
2025-09-29 01:42:31 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-29 01:42:31 | INFO | service.searchService | LLM 응답: {
  "follow_ups": [
    "정종욱 교수님이 가르치는 다른 과목은 무엇인가요?",
    "정종욱 교수님의 강의 시간표를 알 수 있을까요?",
    "정종욱 교수님의 연구 분야는 어떤 것인가요?",
    "정종욱 교수님 수업의 선수과목은 무엇인가요?",
    "정종욱 교수님과 관련된 다른 교수님들은 누구인가요?"
  ]
}
2025-09-29 01:42:31 | INFO | service.searchService | 추출된 SQL: None
2025-09-29 01:42:31 | WARNING | service.searchService | SQL 생성 실패, 빈 결과 반환: ### Task:
Suggest 3-5 relevant follow-up questions or prompts that the user might naturally ask next in this conversation as a **user**, based on the chat history, to help continue or deepen the discussion.
### Guidelines:
- Write all follow-up questions from the user’s point of view, directed to the assistant.
- Make questions concise, clear, and directly related to the discussed topic(s).
- Only suggest follow-ups that make sense given the chat content and do not repeat what was already covered.
- If the conversation is very short or not specific, suggest more general (but relevant) follow-ups the user might ask.
- Use the conversation's primary language; default to English if multilingual.
- Response must be a JSON array of strings, no extra text or formatting.
### Output:
JSON format: { "follow_ups": ["Question 1?", "Question 2?", "Question 3?"] }
### Chat History:
<chat_history>
USER: 컴공에서 인공지능 관련 수업을 찾아줘
ASSISTANT: 사용자 질문에 대한 답변을 드리겠습니다. 컴퓨터인공지능학부에서 제공하는 과목들에 대한 정보를 아래와 같이 정리했습니다.

**1. 인공지능**
- 학과: 컴퓨터인공지능학부
- 교수: 나승훈
- 강의실: 전주:공과대학 7호관 301
- 시간표: 화 8-A, 화 8-B, 목 6-A, 목 6-B, 목 7-A, 목 7-B
- 학점: 3학점
- 기타: 본 강의에서는 인공지능의 이론적 기초를 다루며, 탐색 기반 문제 해결, Symbolic AI, 베이지안 네트워크, 기계 학습, 딥러닝, 강화학습 등을 포함합니다.

**2. 정보검색**
- 학과: 컴퓨터인공지능학부
- 교수: 이경순
- 강의실: 전주:공과대학 7호관 301
- 시간표: 화 8-A, 화 8-B, 화 9-A, 목 6-B, 목 7-A, 목 7-B
- 학점: 3학점
- 기타: 서치엔진 시스템의 기본 아키텍처와 관련 이론을 다루며, 웹크롤러, 색인구조, 질의어 표현, 검색 모델 및 성능 평가 방법 등을 학습합니다.

**3. 인간-컴퓨터상호작용**
- 학과: 컴퓨터인공지능학부
- 교수: 정종욱
- 강의실: 전주:공과대학 3호관 311
- 시간표: 월 3-A, 월 3-B, 월 4-A, 월 4-B, 수 3-A, 수 3-B
- 학점: 3학점
- 기타: 인간-컴퓨터 상호작용의 기본 원리를 학습하며, 사용자 중심 디자인(UCD), 사용성의 원리와 평가 방법, 인터페이스 설계 등을 다룹니다.

추가적인 정보가 필요하시면 언제든지 말씀해 주세요!
USER: 정종욱 교수님은 무슨 수업을 가르쳐?
ASSISTANT: 사용자 질문에 대한 검색 결과를 확인한 결과, 현재 컴퓨터공학과에서 인공지능 관련 수업이나 정종욱 교수님이 가르치는 수업에 대한 정보는 제공되지 않았습니다. 

**1. [과목명]**
- 학과: 컴퓨터공학과
- 교수: 정종욱 (정보 없음)
- 강의실: 정보 없음
- 시간표: 정보 없음
- 학점: 정보 없음
- 기타: 정보 없음

추가적인 정보가 필요하시거나 다른 질문이 있으시면 언제든지 말씀해 주세요. 도움이 될 수 있도록 최선을 다하겠습니다.
</chat_history>
2025-09-29 01:42:31 | WARNING | service.searchService | LLM 원본 응답: {
  "follow_ups": [
    "정종욱 교수님이 가르치는 다른 과목은 무엇인가요?",
    "정종욱 교수님의 강의 시간표를 알 수 있을까요?",
    "정종욱 교수님의 연구 분야는 어떤 것인가요?",
    "정종욱 교수님 수업의 선수과목은 무엇인가요?",
    "정종욱 교수님과 관련된 다른 교수님들은 누구인가요?"
  ]
}
2025-09-29 01:42:31 | INFO | service.searchService | 검색 완료: 0개 결과
2025-09-29 01:49:01 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 01:49:01 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 01:49:01 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 01:49:43 | INFO | service.searchService | 검색 시작: '컴퓨터인공지능학부 컴공에서 인공지능 관련 수업을 찾아줘'
2025-09-29 01:49:46 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-29 01:49:46 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
```
2025-09-29 01:49:46 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-29 01:49:46 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-29 01:49:48 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-29 01:49:48 | INFO | service.searchService | 검색 완료: 3개 결과
2025-09-29 01:53:25 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 01:53:25 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 01:53:25 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 01:53:47 | INFO | service.searchService | 검색 시작: '컴퓨터인공지능학부 컴공에서 인공지능 관련 수업을 찾아줘'
2025-09-29 01:53:49 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-29 01:53:49 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
```
2025-09-29 01:53:49 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-29 01:53:49 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-29 01:53:52 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-29 01:53:52 | INFO | service.searchService | 검색 완료: 3개 결과
2025-09-29 02:01:56 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 02:01:56 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 02:01:56 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 02:02:28 | INFO | service.searchService | 검색 시작: '컴퓨터인공지능학부 컴공에서 인공지능 관련 수업을 찾아줘'
2025-09-29 02:02:30 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-29 02:02:30 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
```
2025-09-29 02:02:30 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-29 02:02:30 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-29 02:02:32 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-29 02:02:32 | INFO | service.searchService | 검색 완료: 3개 결과
2025-09-29 02:05:28 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 02:05:28 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 02:05:28 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 02:05:48 | INFO | service.searchService | 검색 시작: '컴퓨터인공지능학부 컴공에서 인공지능 관련 수업을 찾아줘'
2025-09-29 02:05:50 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-29 02:05:50 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
```
2025-09-29 02:05:50 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-29 02:05:50 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-29 02:05:54 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-29 02:05:54 | INFO | service.searchService | 검색 완료: 3개 결과
2025-09-29 02:16:09 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 02:16:09 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 02:16:09 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 02:16:36 | INFO | service.searchService | 검색 시작: '컴퓨터인공지능학부 컴공에서 인공지능 관련 수업을 찾아줘'
2025-09-29 02:16:37 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-29 02:16:37 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
```
2025-09-29 02:16:37 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-29 02:16:37 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-29 02:16:40 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-29 02:16:40 | INFO | service.searchService | 검색 완료: 3개 결과
2025-09-29 02:21:21 | INFO | service.searchService | 검색 시작: '반도체 관련 커리큘럼 추천해줘'
2025-09-29 02:21:23 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-29 02:21:23 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
```
2025-09-29 02:21:23 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
2025-09-29 02:21:23 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
2025-09-29 02:21:36 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-29 02:21:36 | INFO | service.searchService | 검색 완료: 3개 결과
2025-09-29 02:24:46 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 02:24:46 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 02:24:46 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 02:25:06 | INFO | service.searchService | 검색 시작: '컴퓨터인공지능학부 컴공에서 인공지능 관련 수업을 찾아줘'
2025-09-29 02:25:08 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-29 02:25:08 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
```
2025-09-29 02:25:08 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-29 02:25:08 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-29 02:25:10 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-29 02:25:10 | INFO | service.searchService | 검색 완료: 3개 결과
2025-09-29 02:33:50 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 02:33:50 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 02:33:50 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 02:38:09 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 02:38:09 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 02:38:09 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 02:46:06 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 02:46:06 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 02:46:06 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 02:52:24 | INFO | service.searchService | 검색 시작: '컴퓨터인공지능학부 컴공에서 인공지능 관련된 수업을 찾아줘'
2025-09-29 02:52:26 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-29 02:52:26 | INFO | service.searchService | LLM 응답: ```sql
SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
```
2025-09-29 02:52:26 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-29 02:52:26 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터인공지능학부%'
2025-09-29 02:52:29 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-29 02:52:29 | INFO | service.searchService | 검색 완료: 3개 결과
2025-09-29 02:59:48 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 02:59:48 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 02:59:48 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 03:07:31 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 03:07:31 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 03:07:31 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 03:10:52 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 03:10:52 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 03:10:52 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 03:15:29 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 03:15:29 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 03:15:29 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 03:21:51 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 03:21:51 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 03:21:51 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 03:26:19 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 03:26:19 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 03:26:19 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 17:25:37 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 17:25:37 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 17:25:37 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 17:31:40 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 17:31:40 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 17:31:40 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 17:38:03 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 17:38:03 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 17:38:03 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 17:55:31 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 17:55:31 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 17:55:31 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 18:01:00 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 18:01:00 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 18:01:00 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 18:08:06 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 18:08:06 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 18:08:06 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 18:22:11 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 18:22:11 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 18:22:11 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 18:29:33 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 18:29:33 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 18:29:33 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 19:24:29 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 19:24:29 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 19:24:29 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 19:40:40 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 19:40:40 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 19:40:40 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 19:54:23 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 19:54:23 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 19:54:23 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 20:03:22 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 20:03:22 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 20:03:22 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 20:08:30 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 20:08:30 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 20:08:30 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 20:11:16 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 20:11:16 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 20:11:16 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 20:25:48 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 20:25:48 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 20:25:48 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 20:27:37 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 20:27:37 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 20:27:37 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 20:39:37 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 20:39:37 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 20:39:37 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 20:58:47 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 20:58:47 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 20:58:47 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 21:02:56 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 21:02:56 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 21:02:56 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 23:32:34 | INFO | service.searchService | 검색 시작: '비료를 다루는 과목이 있을가/'
2025-09-29 23:32:36 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-29 23:32:36 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
2025-09-29 23:32:36 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
2025-09-29 23:32:52 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-29 23:32:52 | INFO | service.searchService | 검색 완료: 3개 결과
2025-09-29 23:33:52 | INFO | service.searchService | 검색 시작: '반도체 관련된 수업이 뭐있어?'
2025-09-29 23:33:53 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-29 23:33:53 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
2025-09-29 23:33:53 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
2025-09-29 23:34:08 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-29 23:34:08 | INFO | service.searchService | 검색 완료: 3개 결과
2025-09-29 23:39:13 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 23:39:13 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 23:39:13 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-29 23:49:14 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-29 23:49:14 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-29 23:49:14 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-30 11:32:41 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-30 11:32:41 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-30 11:32:41 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-30 15:20:31 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-30 15:20:31 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-30 15:20:31 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-30 15:29:30 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-30 15:29:30 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-30 15:29:30 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-30 15:38:06 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-30 15:38:06 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-30 15:38:06 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-30 15:58:47 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-30 15:58:47 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-30 15:58:47 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-30 16:09:17 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-30 16:09:17 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-30 16:09:17 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-30 16:09:49 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-30 16:09:49 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-30 16:09:49 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-30 17:30:56 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-30 17:30:56 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-30 17:30:56 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-30 18:28:55 | INFO | service.searchService | 검색 시작: '컴공에서 인공지능 수업을 찾아줘'
2025-09-30 18:28:56 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-30 18:28:56 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-30 18:28:56 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-30 18:28:59 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-30 18:28:59 | INFO | service.searchService | 검색 완료: 3개 결과
2025-09-30 18:40:43 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-30 18:40:43 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-30 18:40:43 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-30 18:49:59 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-30 18:49:59 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-30 18:49:59 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-30 19:10:49 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-30 19:10:49 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-30 19:10:49 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-30 19:16:28 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-30 19:16:28 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-30 19:16:28 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-30 19:24:23 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-30 19:24:23 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-30 19:24:23 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-30 19:39:47 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-30 19:39:47 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-30 19:39:47 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-30 19:49:22 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-30 19:49:22 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-30 19:49:22 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-30 19:58:12 | INFO | service.searchService | 검색 시작: '안녕 컴공에서 인공지능 관련 수업좀 찾아줄래?'
2025-09-30 19:58:14 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-30 19:58:14 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-30 19:58:14 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-09-30 19:58:17 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-09-30 19:58:17 | INFO | service.searchService | 검색 완료: 3개 결과
2025-09-30 22:06:46 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-30 22:06:46 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-30 22:06:46 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-30 23:10:10 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-30 23:10:10 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-30 23:10:10 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-30 23:11:49 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-30 23:11:49 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-30 23:11:49 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-30 23:16:59 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-30 23:16:59 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-30 23:16:59 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-30 23:19:09 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-30 23:19:09 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-30 23:19:09 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-30 23:21:58 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-30 23:21:58 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-30 23:21:58 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-30 23:36:38 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-30 23:36:38 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-30 23:36:38 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-30 23:44:16 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-30 23:44:16 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-30 23:44:16 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-09-30 23:51:13 | INFO | root | === faiss-search 서비스 시작 ===
2025-09-30 23:51:13 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-09-30 23:51:13 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-10-01 00:01:32 | INFO | root | === faiss-search 서비스 시작 ===
2025-10-01 00:01:32 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-10-01 00:01:32 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-10-01 00:02:12 | INFO | root | === faiss-search 서비스 시작 ===
2025-10-01 00:02:12 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-10-01 00:02:12 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-10-01 00:18:51 | INFO | root | === faiss-search 서비스 시작 ===
2025-10-01 00:18:51 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-10-01 00:18:51 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-10-01 00:49:02 | INFO | root | === faiss-search 서비스 시작 ===
2025-10-01 00:49:02 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-10-01 00:49:02 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-10-01 00:52:47 | INFO | root | === faiss-search 서비스 시작 ===
2025-10-01 00:52:47 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-10-01 00:52:47 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-10-01 01:12:34 | INFO | root | === faiss-search 서비스 시작 ===
2025-10-01 01:12:34 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-10-01 01:12:34 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-10-01 01:32:51 | INFO | root | === faiss-search 서비스 시작 ===
2025-10-01 01:32:51 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-10-01 01:32:51 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-10-01 02:02:21 | INFO | root | === faiss-search 서비스 시작 ===
2025-10-01 02:02:21 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-10-01 02:02:21 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-10-01 02:14:00 | INFO | root | === faiss-search 서비스 시작 ===
2025-10-01 02:14:00 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-10-01 02:14:00 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-10-01 02:45:50 | INFO | root | === faiss-search 서비스 시작 ===
2025-10-01 02:45:50 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-10-01 02:45:50 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-10-01 02:50:43 | INFO | root | === faiss-search 서비스 시작 ===
2025-10-01 02:50:43 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-10-01 02:50:43 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-10-01 03:51:34 | INFO | root | === faiss-search 서비스 시작 ===
2025-10-01 03:51:34 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-10-01 03:51:34 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-10-01 03:53:44 | INFO | root | === faiss-search 서비스 시작 ===
2025-10-01 03:53:44 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-10-01 03:53:44 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-10-01 04:00:12 | INFO | root | === faiss-search 서비스 시작 ===
2025-10-01 04:00:12 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-10-01 04:00:12 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-10-01 04:16:12 | INFO | root | === faiss-search 서비스 시작 ===
2025-10-01 04:16:12 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-10-01 04:16:12 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-10-01 04:28:20 | INFO | service.searchService | 검색 시작: '안녕
컴공에서 인공지능 관련 수업을 찾아줘'
2025-10-01 04:28:22 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-01 04:28:22 | INFO | service.searchService | 추출된 SQL: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-10-01 04:28:22 | INFO | service.searchService | SQL 생성됨: SELECT c.id, c.name, c.gpt_description, c.department as department_name, c.professor, c.credits, c.prerequisite, c.target_grade, c.schedule, c.location, c.delivery_mode, c.vector
FROM jbnu_class_gpt c
WHERE c.department LIKE '%컴퓨터%'
2025-10-01 04:28:24 | INFO | httpx | HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-10-01 04:28:24 | INFO | service.searchService | 검색 완료: 3개 결과
2025-10-01 04:50:13 | INFO | root | === faiss-search 서비스 시작 ===
2025-10-01 04:50:13 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-10-01 04:50:13 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-10-01 05:18:35 | INFO | root | === faiss-search 서비스 시작 ===
2025-10-01 05:18:35 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-10-01 05:18:35 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
2025-10-01 05:24:18 | INFO | root | === faiss-search 서비스 시작 ===
2025-10-01 05:24:18 | INFO | root | 공통 로그 파일: ./logs/faiss-search.log
2025-10-01 05:24:18 | INFO | root | FAISS 전용 로그 파일: ./faiss-search.log
